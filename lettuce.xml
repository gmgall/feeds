<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>~lettuce posts on ctrl-c.club</title><link>https://ctrl-c.club/~lettuce/</link><description>/home/lettuce/public_html/index.html</description><language>en</language><lastBuildDate>Mon, 04 Nov 2024 01:02:02 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>students-on-gemini.html</title><link>https://ctrl-c.club/~lettuce/students-on-gemini.html</link><description>&lt;div&gt;&lt;h1&gt;Why would students use gemini?&lt;/h1&gt;

&lt;p&gt;2023-08-31&lt;/p&gt;

&lt;p&gt;Hi folks, this title perhaps sounds a little click-baity, but it's actually a genuine question.&lt;/p&gt;

&lt;p&gt;This semester I'm teaching a computer science course to a diverse community of students, and among many other things, I'm teaching html/css/js and node.js and bash. This is the course I taught a few years ago (and wrote about previously) where I built a tilde server for the class, that they tried out. I'm teaching the class again, with a new crop of students, and I wanted some help here. On the one hand, I'm excited to show them Gemini. On the other hand, the last time I taught this class, it didn't make a big impression as I recall. &lt;/p&gt;

&lt;p&gt;What attracts me to Gemini is the ability to read blog-like articles on topics that interest me, and the slow pace. Maybe this isn't that attractive to students! &lt;/p&gt;

&lt;p&gt;Students in my courses tend to find HTML fine but dull, CSS exciting, and they tend to enjoy all the brutalist and experimental artist websites I show them. This week we went on a link spree checking out the handmade websites of Gossip's Web. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://gossipsweb.net/"&gt;Gossip's Web: the directory of handmade websites&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next week we'll be building weblogs, a collaborative webring, and checking out the alt/slow 'social media' site special.fish.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://special.fish"&gt;Special.fish&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then we'll start building our own experimental chat applications and server software.&lt;/p&gt;

&lt;p&gt;All of these the students (mostly) can appreciate and get into. But I can't say the same for Gemini.&lt;/p&gt;

&lt;p&gt;Sadly, the one server I found previously that seemed to have a lot of young people and students on it (e-worm.club) appears to have shut down their gemini server, and while their www site is up, it's not active anymore either.&lt;/p&gt;

&lt;p&gt;In some ways, this parallels my experience becoming a ham radio operator as a kid. I kept at it until high school, then gradually stopped when I found MUDs, MUSHes and aol chatrooms as a teen (90s). They were realtime, dynamic, and exciting to me.&lt;/p&gt;

&lt;p&gt;So I'm wondering: would gemini be attractive to students at all, and if so, how? Are you a student (or young person) on Gemini? Please share your gemlog, or any thoughts you care to share.&lt;/p&gt;

&lt;p&gt;And how would you explain or provide context about it that would connect for them?&lt;/p&gt;

&lt;p&gt;Any other projects, sites, gemlogs, blogs or other software you'd suggest I share with them? Here's an incomplete list of some of the software, websites, concepts and tools we checked out last time I taught this course: tildes, digital gardens, BBSes, finger, wall, git, blogging, licenses, FLOSS, creative commons, manifestos, codes of conducts, contributing to open source software, working with servers, building our own chat app (this time i'm thinking we may build on twtxt), building an experimental browser with electron, minus, die with me, Somebody. We also extensively used glitch.com to build web apps.&lt;/p&gt;

&lt;p&gt;Maybe these are too exciting and I'm covering too much in one course for Gemini to really be able to stick out in all that. I just know it's the one I myself tend to return to week after week, even after the past 3 years. So maybe Gemini doesn't stand out to them because it's 'slow.' But let me know if you have any other thoughts.&lt;/p&gt;

&lt;p&gt;Keep in mind: my students are young, have grown up with social media, are on tik tok. Some of them don't own a personal computer, and many mostly have access to the internet primarily on their phone.&lt;/p&gt;

&lt;p&gt;Last time, the students seemed to enjoy the tilde server, playing the old bsd-games, competing in tetris-bsd and hunt. I'm going to set up astrobotany and finger, adventure and ideally have them build something that works a little like tilde.town's cadastre.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tilde.town/~troido/cadastre/"&gt;Tilde Town Cadastre&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://tilde.town/~troido/cadastre/town.html"&gt;The "town"&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The best way to reach me is lettuce at ctrl-c.club. And if you'd like your post listed publicly, please let me know your 'handle.'&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;

---



 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/students-on-gemini.html</guid><pubDate>Thu, 31 Aug 2023 00:00:00 GMT</pubDate></item><item><title>why-cli.html</title><link>https://ctrl-c.club/~lettuce/why-cli.html</link><description>&lt;div&gt;&lt;h1&gt;Why I use the command line&lt;/h1&gt;

&lt;p&gt;2023-07-31&lt;/p&gt;

&lt;p&gt;In short, I use the command line because it's fun, it's logical, expressive, and because it lets me avoid planned obsolescence and arbitrary restrictions. Read on for the details:&lt;/p&gt;

&lt;p&gt;I use the command line to resist software and hardware planned obsolescence. It's almost the opposite of an iOS app. I own (this is embarassing) 3 iPads, my parents' from 2011, my own from 2017, and one from school from 2021. The 2011 can't run much of anything. The 2017 worked fine but Apple ended support. They won't let me update the system and won't let me download any apps from the app store because the system isn't up to date, a catch-22. On the other hand, the command line still works on these. It won't disappear one day. It won't be made obsolete. I can still run my command line software on these.&lt;/p&gt;

&lt;p&gt;And following this: the command line and programs for it are not an 'app store' and aren't controlled by a single entity or company. It's controlled by me. It can run anything I want.&lt;/p&gt;

&lt;p&gt;I use the command line because it works the same or similarly across computers, operating systems, tablets and phones. &lt;/p&gt;

&lt;p&gt;I use the command line because it works on practically anything: low power, ancient hardware work fine. I can still browse the web, read and post to social media, read books, keep a to-do list or spreadsheet, or anything else I'm used to do doing. As we grapple with climate change and how our technology choices and consumption impact the earth it's helpful to use tools that work just as well on our older but still fine machines.&lt;/p&gt;

&lt;p&gt;I use the command line because it can be automated. I use this to resize directories of photos in a split second, rather than individually opening and tediously resizing in something like Photoshop. I can backup updated files on my hard drive ultra-quickly. These are just two among many examples.&lt;/p&gt;

&lt;p&gt;I use the command line because I can fit different programs together to meet my needs in a way that GUI software can't or won't. Why pay a niche internet service that may or may not provide what I need when just a program or two or three can pull it together easily in a minute.&lt;/p&gt;

&lt;p&gt;I use the command line because it's fun to learn, and not so difficult. With a dozen or so commands you can get started and do a lot. You can quickly learn how to piece them together, and how to get help, and intuit how additional programs will work.&lt;/p&gt;

&lt;p&gt;I use the command line because command line games are addicting. I have played (and not yet beat) Rogue and Brogue for almost a decade. Backgammon and Chess in the command line are fun and clear. Colossal Cave Adventure is a fun retro experience I particularly enjoy showing my students. &lt;/p&gt;

&lt;p&gt;I use the command line because it's just plain convenient and easy, faster than the GUI, and just lets me get on with my regular computer needs.&lt;/p&gt;

&lt;p&gt;&lt;a href="bash-alternatives.html"&gt;Bash alternatives to cloud products and platforms &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="./index.html"&gt;Back to index&lt;/a&gt;&lt;/p&gt;

---

&lt;p&gt;To leave a comment here, send me an email at my username at ctrl-c.club. Please put comment and the name of the post in your subject line, and be sure to list a name you'd like credited in your comment.&lt;/p&gt;

 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/why-cli.html</guid><pubDate>Mon, 31 Jul 2023 00:00:00 GMT</pubDate></item><item><title>intro-to-rogue.html</title><link>https://ctrl-c.club/~lettuce/intro-to-rogue.html</link><description>&lt;div&gt;&lt;h1&gt;Beginners guide to Rogue, the roguelike game&lt;/h1&gt;

&lt;p&gt;2023-07-30&lt;/p&gt;

&lt;p&gt;Rogue is one of my favorite video games, and the original reference game for later 'roguelike' games. It's a classic 'dungeon crawler' game, created originally in 1980 by Michael Toy and Glenn Wichman, with later contributions by Ken Arnold. In Rogue you descend through a dungeon, collect gold, fight monsters, and retrieve the amulet of Yendor before returning up to the surface. As the player you wield weapons, wear defensive armor, don rings, and carry magical staffs, but this description evades the sense of puzzle-solving that pervades. It's a unique combination of combat, magic, resource managing, and a good dose of randomness that make for a compelling game. &lt;/p&gt;

&lt;p&gt;Rogue is the quintessential oldschool roguelike. All actions by the player are triggered by a key press, and there are a lot of keys you can press. The game is turn-based, so actions only happen when you press a key, such as to move, one square at a time. Rogue is inspired by Dungeons and Dragons and can be thought of as one attempt at making a single player D'n'D game. It's especially noteable for its different-every-time dungeon, which is also why the game continues to be enjoyable for its fans play after play. Each dungeon presents new mystery and challenges, requiring new strategy. Also of note is 'permadeath'. When you die, no progress is saved. Each attempt at a dungeon is unique, standing on its own, without any resources saved from previous attempts.&lt;/p&gt;

&lt;p&gt;This guide is intended to help you get started with just enough information. I have been playing the game off and on for about 7 years. I'm okay, but I have yet to beat the game (aka 'ascend'). After reading this, dive in and give it a shot. Try playing a few times. Each time you will (probably) get better. After you've played through half a dozen times or so and are starting to get the feel for it, and wanting to learn more, try out one of the more advanced or comprehensive guides listed at the end.&lt;/p&gt;

&lt;p&gt;I won't detail how to install Rogue as that varies based on system to system. It's usually in various linux repositories listed as 'bsdgames-nonfree' and can also be downloaded from a variety of sites online, or played online on the Internet Archive. Note that there are multiple similar versions with minor differences, and even some with graphics, minimal or quite detailed, where others are only ASCII. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://archive.org/details/ROGUE_PD"&gt;Rogue on the Internet Archive (with oldschool minimal graphic tiles)&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;An orientation to the map and movement&lt;/h2&gt;

&lt;p&gt;Rogue is a top down view of the world. Each level of the dungeon has the possibility of being up to a generated 3 x 3 maze of rooms, interconnected through hallways. You are the '@' symbol on the board. When you walk over something or into something you'll see a message at the top of the screen. Press spacebar to clear the message.&lt;/p&gt;

&lt;p&gt;Move with the "vim keys" (if you know them) or your arrow keys. Pick up an object by walking onto it. Attack by attempting to move into a monster. It will announce whether you were successful in your hit and whether the monster hit you back. Keep attacking until you kill the monster, or it flees, or you do. Watch your hit points (hp) in the bottom of the UI. When you get to 0hp you're dead. &lt;/p&gt;

&lt;p&gt;For more efficient moving (aka to flee monsters faster) you can use the diagonal keys around the vim keys. For example, 'n' moves diagonally down to the right. 'y' moves diagonal up and to the left. 'b' moves down and to the left. 'u' moves up and to the right. &lt;/p&gt;

&lt;p&gt;As you walk around you consume energy. After walking around for a good while the game will warn you that you're hungry, in the bottom right of the UI. If you ignore this for a while you'll pass out temporarily from lack of food, and eventually starve. So be sure to look for food (':') or slime mold and eat it by pressing 'e' when you get hungry!&lt;/p&gt;

&lt;p&gt;Doorways are '+' signs. Walk through them into the hallway. Some hallways twist and turn into little mazes. Sometimes a hallway deadends or you can't figure out how to get out of a room (most have 2 exits). Use 's' to search the area around you. You have a 1/5th chance of finding traps and hidden doorways. You will usually need to type 's' a few times to find hidden doorways and traps.&lt;/p&gt;

&lt;h2&gt;Get help / see all options&lt;/h2&gt;

&lt;p&gt;Press the question mark key '?' to get to the help prompt. It will ask what key you want help with. Type '*' to list all the keys. This is the full display of all actions you can take in the game.&lt;/p&gt;

&lt;h2&gt;Major Items&lt;/h2&gt;

&lt;p&gt;Monsters are one of various letters of the alphabet. In the early levels, you usually see hobgoblins (h), emus (e), ice monsters (I), bats (b) and kobolds (k). They each have their own behaviors and stats. &lt;/p&gt;

'%' is the staircase. Move onto it and type '&amp;gt;' to go down a level. I usually try to clear most of a level before descending.

'?' is a scroll, a type of magic item you can use. To use a scroll's magic, press 'r' to read, and then the letter for the scroll you want to use. If you don't know what scrolls you have, press '*' to list them all, then type the letter for one of them and see what happens. It could be a map of the current dungeon level, a teleportation scroll, or many other things could happen. Scroll names have absurd titles, and you'll only know what a scroll does by trying it out to see its effect.

'!' is a potion. Like scrolls, you can cast them. To use a potion press 'q' to quaff it. To 'quaff' means to drink with gusto. A potion could poison you, bring you health, temporary strength, or cause you to dissolve through the floor and crash at a lower depth, among many other things that could happen. Like scrolls, their names are randomly chosen each time the dungeon is generated, and you'll have to figure out their effects through trying them out.

`/` is a staff, occasionally present in the lower depths of the dungeon. You can 'zap' them.

`]` is armor. `W` to wear armor. It will prompt you to select one to wear, if you have any. The number next to the armor indicates its protection, and whether it's been affected by a curse, charm or magic, for example.

`=` is a ring. Press 'P' to 'put on' a ring. It will ask you to specify a hand. These have magic properties that affect your health, weapon, visibility, etc.

&lt;h2&gt;Anatomy of a level&lt;/h2&gt;

&lt;pre&gt;
  -------------------
  |.....H.*.........|
  |.................|
  |.............@...+
  |........%........|
  ----------------+--
                  #
       ############
-------+-------------
|...................+##
|...................| #
--------------------- #
                      ########

Level: 1  Gold: 0      Hp: 12(12)  Str: 16(16)  Arm: 4   Exp: 1/0
&lt;/pre&gt;

&lt;p&gt;Above is a moment not too long after beginning the game. I started in the bottom hallway, walked through that long thin room on the bottom left, then wound through and up to the room above it. I'm on the right side of the room. I see a hobgoblin on my left, ready to fight, next to a pile of gold it's defending. A staircase down to the next level of the dungeon is close to me. A door is to my right, that I haven't been through yet. Who knows what will be on the other side?&lt;/p&gt;

&lt;p&gt;Should I attack the hobgoblin and take the gold? Head down the stairs? Or go through the doorway to the right? I'll probably do all three, but not in that order.&lt;/p&gt;


&lt;h3&gt;Weapons and armor&lt;/h3&gt;

&lt;p&gt;You start with a basic sword in your hand, and a short bow in your inventory. You can pick up other weapons. Careful, some are cursed. To wield a new weapon, press 'w'. You can list your weapons and select another. Cursed weapons cannot be removed unless you heal them with a scroll for example.&lt;/p&gt;

&lt;p&gt;To fire an arrow, press 't' for throw. It will ask you to choose a direction and an item. This is especially useful against more dangerous monsters. &lt;/p&gt;

&lt;h2&gt;Next steps&lt;/h2&gt;

&lt;p&gt;Play through the game a few times, seeing if you can get a bit better. What strategies seem to work best? What kinds of monsters tend to kill you? How can you avoid them or get the better of them?&lt;/p&gt;

&lt;p&gt;There are a variety of strategy guides on the internet that would make a good next step for getting better at the game.&lt;/p&gt;

&lt;p&gt;I hope you enjoy the game, and if it's your first roguelike, that it inspires you to try more within this genre. Beware the curse of oldschool roguelikes. It is only a matter of time before you try your own hand at coding your own, sprawling into a giant project that takes over many nights or weekends!&lt;/p&gt;

&lt;h3&gt;Links&lt;/h3&gt;

&lt;p&gt;&lt;a href="hosted/games/rogue.html"&gt;The Rogue's Vade-Mecum, a comprehensive guide to Rogue, from 1999, (gemini mirror based on source page on Internet Archive Wayback machine)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.roguebasin.com/index.php/Rogue"&gt;Rogue on RogueBasin (lots of links and strategy guides at the bottom)&lt;/a&gt;&lt;/p&gt;

---

&lt;p&gt;To leave a comment here, send me an email at my username at ctrl-c.club. Please put comment and the name of the post in your subject line, and be sure to list a name you'd like credited in your comment.&lt;/p&gt;

 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/intro-to-rogue.html</guid><pubDate>Sun, 30 Jul 2023 00:00:00 GMT</pubDate></item><item><title>old-computer-recap.html</title><link>https://ctrl-c.club/~lettuce/old-computer-recap.html</link><description>&lt;div&gt;&lt;h1&gt;Old Computer Challenge 2023 Recap &lt;/h1&gt;

&lt;p&gt;2023-07-17&lt;/p&gt;

&lt;p&gt;This post is a recap of my week doing the Old Computer Challenge 2023 (v3). For context, see my earlier post from day 1, or Solene's original post about the idea.&lt;/p&gt;

&lt;p&gt;&lt;a href="old-computer-start.html"&gt;Old Computer Challenge 2023 day 1  &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="gemini://perso.pw/blog//articles/old-computer-challenge-v3-part1.html"&gt;Old Computer Challenge V3 Part 1 (Solene)  &lt;/a&gt;&lt;/p&gt;


---

&lt;p&gt;As the week of the challenge comes to a close, I'm already feeling like I want to extend it, and I'm typing this on my 'old computer', so maybe that says something.&lt;/p&gt;

&lt;p&gt;I thought about titling this post "Old Computer Challenge 2023: The Good, The Bad and The Ugly," and I can see how I'd break down this post into those three sections, and I have definitely jotted down some "uglies" that I'll mention.&lt;/p&gt;

&lt;p&gt;I often work on my computer late at night, so on midnight of the first day of the challenge I pulled out a Chip computer and tried to fire it up and get it working. After some back-and-forth between that and my other Pocket CHIP computer, I eventually discovered that I could use the Chip computer inside the hull of my Pocket Chip case. I used this lightly for a few days, then messed the thing up when I tried to keep updating Debian. The process to re-flash the Chip computer is very convoluted. And though I'd love to walk through and get my Chip computers useable again, I didn't want to deal with that, so chose a different thing to try: I pulled out my old Raspberry Pi 1B computer from 2013 and decided to see if I could install Void Linux on it and run it for the week.&lt;/p&gt;

&lt;p&gt;I found it pretty straightforward to install Void Linux since I've now done it many times on many systems. I wrote a tutorial on setting this up on the Pi that you can consult. I'll also mention that if you're already familiar with Void this Pi setup doesn't require you to walk through the void-installer setup system.&lt;/p&gt;

&lt;p&gt;&lt;a href="void-pi.html"&gt;Setting Up Void Linux on an Old Raspberry&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Basically, unlike the Chip which had a distinct feel and operating system from my daily everyday laptop and my studio laptop, I now had yet another Void Linux setup with the i3 window manager. I think it's probably nice to have different systems and setups for different computers, but there is also clearly something to be said about having consistency. And because it was the same system I could really compare.&lt;/p&gt;

&lt;p&gt;Out of the box Void on the Pi doesn't come with a GUI / X running. At first I installed my absolute basic needs, just a few programs like git and fish-shell, and I already had vi through busybox. I installed offpunk and amfora and w3m and links so I had a variety of text-based web browsers and gemini clients. And they all seemed to work fine and not much slower than my incredibly faster i7 laptop. Even startup of this old underpowered device went fast enough, maybe 10 seconds from power to the command line. I thought about basically just doing command line for the week. Beyond the above, it's now high summer and I use my bike to get around, and it's constantly alternating between high heat and rain this week, so checking the weather was very important to me! I can check the weather using curl wttr.in and I also installed ansiweather, or I can check the weather through Chilly Weather on gemini. I also installed Rogue, my favorite / most-consistent game that I have been playing for years, one of my fave games. &lt;/p&gt;

&lt;figure&gt;
&lt;img src="images/i3.jpg" alt="Void Linux on Raspberry Pi 1B, running i3 window manager, showing Lagrange, Feh and Terminal (jpg)"&gt;
&lt;figcaption&gt;Void Linux on Raspberry Pi 1B, running i3 window manager, showing Lagrange, Feh and Terminal (jpg)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;I read the news and kept up with blogs and gemini logs via offpunk and amfora. I prefer offpunk for http and amfora for gemini, so I kind of jump back and forth between the two. I've written about the gemi.dev domain and their great resources like NewsWaffle, so with this I was able to read the New York Times, which I read every day. I worked a little on editing some text, easy in Vim with github, so this was all pretty much the same for me as my regular everyday laptop. &lt;/p&gt;

&lt;p&gt;But a day or two later I decided to do the full GUI setup. I wanted to use a full web browser and look at images. And that's when I added i3 and X to see what that was like. I immediately noticed a slower system, which makes sense. But this is when things started to become annoyingly slow. I didn't even bother with Chromium or Firefox as I knew it'd be painfully slow, so I installed dillo and netsurf as my GUI web browsers, and Lagrange as my GUI gemini client.&lt;/p&gt;

&lt;p&gt;Even with mostly command line usage it was nice to now be able to have multiple workspaces open. In particular, toot tui command line Mastodon client isn't very pleasurable to use. I then downloaded w3m-img, which is the w3m command line browser with inline images added. I really like seeing everyone's posts in one screen at a time (I know it's "toot" but I can't bring myself to say it). toot tui I find hard and slow to read. w3m to view brutaldon.org client was maybe the best command line viewer of mastodon for me, but still hard to visually parse with my eyes. w3m-img was unfortunately too annoying as the pictures are all full-sized, so everyone's profile pic was huge, when I just wanted to ignore those. I installed Tootle, though it would occasionally quit and just seemed too slow and buggy for regular use. What I ended up doing was logging into the brutaldon.org web-based client with the netsurf web browser. It was slow to scroll, annoyingly so, but it works and let's me view many many posts at once, so I can quickly scan with my eyes, it's easy enough to read, and that's what works best for me.&lt;/p&gt;

&lt;p&gt;I also wanted a desktop photo viewer! I installed feh, the basic image viewing program, and I also used it to set a background image for i3.&lt;/p&gt;

&lt;p&gt;Writing this gemini log is easy and fast enough jut in vim, which I opted for instead of my normal neovim, just because vim is lighter weight on my tiny sd card. I tried using just busybox vi but I missed some of the keybindings I'm used to. Logging into Ctrl-c.club`s tilde server, and reading our messageboard, iris, of course was no problem.&lt;/p&gt;

&lt;p&gt;Did I cheat? You bet. Especially at the beginning of the week, I was checking my work email and doing professional work on my regular laptop. Later in the week I experimented with doing some of my research work on the Pi, which went okay, though slowly. But there was an upside to that. I found that due to the time it took to look things up, it was harder to goof off on the Pi, and so I avoided social media except for approximately once-daily Mastodon check-ins. &lt;/p&gt;

&lt;p&gt;The elephant in the room: I continued to use my phone this week for communication, maps, instagram. Probably would have been best to take a social media and phone break too, but I was too wedded to communicating with my partner and friends and family this way. And I'm performing in my city this week, so needed to spend some time promoting the gig on social media.&lt;/p&gt;

&lt;p&gt;For entertainment, I wanted to play some games, and not just Rogue. I downloaded Pico-8, the raspberry pi edition, but I couldn't get it to run. It was built for Debian-based systems. However, I found that I could decipher what libraries were missing, and I downloaded and installed those directly via Raspberry Pi's firmware github repo.&lt;/p&gt;

&lt;pre&gt;
sudo wget https://github.com/raspberrypi/firmware/raw/master/opt/vc/lib/libbcm_host.so -P /usr/lib/
sudo wget https://github.com/raspberrypi/firmware/raw/master/opt/vc/lib/libvchiq_arm.so -P /usr/lib/
sudo wget https://github.com/raspberrypi/firmware/raw/master/opt/vc/lib/libvcos.so -P /usr/lib/
&lt;/pre&gt;

&lt;p&gt;Then run the Pico8 executable and it should now run on Void.&lt;/p&gt;

&lt;p&gt;I launched it, smiling at my success. I have made a number of Pico8 games, and played many, for the past 7 years. On launch, Pico8 warned me that it would run at &amp;lt;30fps. I persisted anyway. I launched splore, the games browser, that lets you see games people have placed online. You can download or run them directly in the Pico8 program. Sure enough, games were a bit slower, especially the 3D ones, so I may stick more to the puzzle games, but still, it was fun and it's great this can work as a coding environment for making 2d games. I didn't need to do much web development work this week, but I think this could be tolerable if I'm mostly writing markdown, HTML and CSS without javascript.&lt;/p&gt;

&lt;p&gt;Next I tried to watch a movie. I'm a big fan of the 1962 french film La Jetee by Chris Marker. If you're not familiar, it's a video novel told with a soundtrack over a series of still images like a slideshow movie. It's one of my favorite science fiction films. I downloaded yt-dlp, a command line tool, to download youtube videos and media from many other platforms. I pulled down the movie. I hadn't really spent time configuring sound on my Void system, and sound notoriously can be a pain to get going on Void. I specifically chose this movie because I figured even if sound didn't work and I didn't want to try to solve it I could read the subtitles, and if the movie skipped, it wouldn't matter because it's essentially just a slideshow. I was wrong. The movie took a long time to open and was agonizingly slow to play via mpv. I didn't really understand it because I thought I had played videos on my Pi previously, but maybe not. I remember running a slideshow on this computer a decade ago, when I was still figuring out the command line and Linux systems. Maybe my video on Pi computers were on later Raspberry Pi 3 systems. I'd love to hear from folks whether you can play video on a Pi 1 or if my experience was typical. In any case, I gave up watching La Jetee.&lt;/p&gt;

&lt;p&gt;I downloaded some other games. I'm a fan of bsd-games, a collection of perhaps 30 or 40 games played in the command line, bundled into a single download, from the 80s I believe. Through this, I have backgammon (which is really fun to play this way, and comes with a great tutorial, teachgammon), boggle, cribbage, hangman, milles borne, robots (dalek), tetris-bsd, snake, and a number of other games. I also installed dune-buggy (kind of like Canabalt, or other simple platformer endless runners). These are all command line games. I didn't really try to install any other GUI games other than Pico-8. I used this Pi many years ago as a MAME emulator system to play old nintendo games and the like, so I suppose I could try installing that again but I didn't do it yet as I already have a handheld Anbernic retro game system. &lt;/p&gt;

&lt;p&gt;In terms of reading, writing, being entertained - this system works for me. Void Linux is a great distro, and it's incredible they maintain repositories of software that can work for fast new computers and old minimal ARM computers as well, and still update the software repository. It's not as big a catalog as Debian, but it's plenty big, and the developers and community are helpful for troubleshooting or helping with packaging software. For "consuming" image and video content such as social media, the Raspberry Pi 1B is not a great system. For even my professional work, I'd need to be a bit careful. The system occasionally restarts X and all my programs close. I have to login and re-open whatever I was last in. This happened about once an hour or so, always when I was multitasking with multiple workspaces, so probably I could learn to avoid it by sticking to mono-tasking. It's not constant, and thankfully vim has the swap backup that auto-saves everything you write, but it's still annoying when X quits abruptly and restarts.&lt;/p&gt;

&lt;p&gt;I was particularly interested in trying out this challenge because I've gotten more interested in permacomputing and resisting consumption, especially of computing devices. I'm heartened to know that this relatively recent old underpowered device can still browse websites I've made, is still very much a useful computing device with tools I find extremely useful. One of my next projects is to work on some simple command line and file browser tool for viewing collections of images and text. I'd love to have a system that can last and last and be resilient, to resist brittleness, by falling back on basic command line programs to do the lifting, essentially coding via gluing together basic long-running linux software. I'm looking forward to testing this out in the weeks ahead.&lt;/p&gt;

&lt;p&gt;&lt;a href="./index.html"&gt;Back to index&lt;/a&gt;&lt;/p&gt;

---

&lt;p&gt;To leave a comment, email lettuce at the ctrl-c.club domain and state comment and the post title in your subject. Please list your name you'd like credited for the comment.&lt;/p&gt;

 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/old-computer-recap.html</guid><pubDate>Mon, 17 Jul 2023 00:00:00 GMT</pubDate></item><item><title>void-pi.html</title><link>https://ctrl-c.club/~lettuce/void-pi.html</link><description>&lt;div&gt;&lt;h1&gt;Setting up void linux on an old raspberry pi&lt;/h1&gt;

&lt;p&gt;2023-07-14&lt;/p&gt;

&lt;p&gt;In this tutorial I walk-through how I set up void linux on an old 2013 Raspberry Pi 1B, then installed a GUI and configured it with i3 window manager, and the basic software I use. A follow-up post will be on my experience using this set-up for the Old Computer Challenge V3. I had originally started using a Chip computer but I rendered it unworkable earlier in the week so pulled out this old Pi I had. &lt;/p&gt;

&lt;p&gt;I did not set up wifi or a wifi card but instead just plugged the device directly into ethernet, which simplified my setup a bit. Note: I'm not an expert, just an ambitious coder-tinkerer. Directions may not work for everyone nor in all situations. You'll likely need ingenuity to solve challenges, and things could diverge from what I describe here. Follow at your own risk.&lt;/p&gt;

&lt;h3&gt;Downloading the system and preparing the SD card&lt;/h3&gt;

&lt;p&gt;Download current Void linux Raspberry Pi. &lt;/p&gt;

&lt;p&gt;I have a Raspberry Pi 1B that I bought in 2013 or 2014. So I checked the wiki and then downloaded the armv6l image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.voidlinux.org/installation/guides/arm-devices/platforms.html"&gt;Void Linux - Supported Platforms - Raspberry Pi&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://voidlinux.org/download"&gt;Void Linux downloads&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The current image is 2.1GB so you'll want at least a 4GB SD card (that's what I used).&lt;/p&gt;

&lt;p&gt;Attach the SD card to your main computer. Format it. Then use dd to write the Iso you just downloaded to the SD card. Make sure you're writing to the correct SD card. You can check various ways, including just by opening your file system. On my computer it was sdb.&lt;/p&gt;

&lt;pre&gt;
dd if=void-rpi3-*.img of=/dev/sdb bs=4M status=progress
&lt;/pre&gt;

&lt;p&gt;The * will be replaced with the correct downloaded image name.&lt;/p&gt;

&lt;p&gt;When it finishes writing the SD card, unmount/eject from your computer.&lt;/p&gt;

&lt;figure&gt;
&lt;img src="images/pi.jpg" alt="My Raspberry Pi 1B plugged in and booted, on my messy desk (jpg)"&gt;
&lt;figcaption&gt;My Raspberry Pi 1B plugged in and booted, on my messy desk (jpg)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3&gt;Connecting it all&lt;/h3&gt;

&lt;p&gt;Now with your Raspberry Pi in hand push the SD card firmly into the slot. Attach keyboard, mouse, hdmi cable (or S-video cable) and connect to power. &lt;/p&gt;

&lt;p&gt;Easiest way to get internet. Plug a cat5 Ethernet cable right in that thing.&lt;/p&gt;

&lt;h3&gt;Setting it up&lt;/h3&gt;

&lt;p&gt;If all goes well you'll see void linux booting up. &lt;/p&gt;

&lt;p&gt;When you get to login&lt;/p&gt;
&lt;p&gt;name: root&lt;/p&gt;
&lt;p&gt;password: voidlinux&lt;/p&gt;

&lt;p&gt;You'll be dropped into the shell prompt (with #):&lt;/p&gt;

&lt;p&gt;We won't be able to download anything because the internal clock thinks it's January 1, 1970. So first thing was I set the clock:&lt;/p&gt;

&lt;pre&gt;
date -s "14 July 2023 18:00:00"
&lt;/pre&gt;

&lt;p&gt;Set to your correct date and time.&lt;/p&gt;

&lt;p&gt;Update xbps itself. First I tried running sudo xbps-install -Suv but it prompted me to update xbps first. It gave me the command and I ran it and forget but I think that was sudo xbps-install -u&lt;/p&gt;

&lt;p&gt;Afterwards, I ran a general update all:&lt;/p&gt;

&lt;pre&gt;
sudo xbps-install -Suv
&lt;/pre&gt;

&lt;h3&gt;Then set up a user and proceed to install your needed programs&lt;/h3&gt;

&lt;pre&gt;
# useradd -m voidpi
# passwd voidpi
...  â here you enter the password for the new "voidpi" account
&lt;/pre&gt;

&lt;p&gt;This and additional info I found on the Void FAQ.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://wiki.voidlinux.org/voidlinux_en_all_2021-04/A/Frequently_Asked_Questions"&gt;Void Linux FAQ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's add voidpi to the sudo'ers&lt;/p&gt;

&lt;pre&gt;
visudo
&lt;/pre&gt;

&lt;p&gt;This opened the sudo'ers file with vi on my machine. I hope you can use vi! Otherwise you should install nano first and set that as your editor. Anyway, assuming you open it in vi navigate down with the arrow keys or j for example. Navigate down to the line immediately following ## Uncomment to allow members of group wheel to execute any command.&lt;/p&gt;
&lt;p&gt;Press x once to remove the # and then again to remove the space (i'm not sure if that's necessary to remove the space, but I did in case it is).&lt;/p&gt;

&lt;p&gt;Quit by pressing&lt;/p&gt;
&lt;p&gt;Escape. Then colon-q-w like this  :qw&lt;/p&gt;


&lt;p&gt;In the command line, let's add our new voidpi user to the wheel group.&lt;/p&gt;

&lt;pre&gt;
sudo usermod -aG wheel voidpi
&lt;/pre&gt;

&lt;h3&gt;Log in as your new user&lt;/h3&gt;

&lt;p&gt;Type exit and hit enter.&lt;/p&gt;

&lt;p&gt;Now log in as your new username and password.&lt;/p&gt;

&lt;pre&gt;
sudo xbps-install vpm
&lt;/pre&gt;

&lt;p&gt;I use vpm instead of xbps because it's easier for me to remember than all the xbps commands and easier to type and feels more intuitive, like apt was on debian.&lt;/p&gt;

&lt;p&gt;I use the non-free repos as well, so let's install that.&lt;/p&gt;

&lt;pre&gt;
sudo vpm install void-repo-nonfree 
&lt;/pre&gt;

&lt;p&gt;I installed a bunch of programs I use.&lt;/p&gt;

&lt;pre&gt;
sudo vpm install links git w3m fff nnn curl neofetch ImageMagick fish-shell
&lt;/pre&gt;

&lt;p&gt;That was less than 100mb for me, but maybe that's too much for you. Install what you want.&lt;/p&gt;

&lt;h3&gt;Changing to fish shell&lt;/h3&gt;

&lt;p&gt;I prefer fish to dash or bash.&lt;/p&gt;

&lt;pre&gt;
chsh -s /usr/bin/fish
&lt;/pre&gt;

&lt;p&gt;Let's fix the clock since there's no hardware clock on the Raspberry Pi 1. Install chrony and enable the service in runit.&lt;/p&gt;

&lt;pre&gt;
sudo vpm install chrony
sudo ln -s /etc/sv/chronyd /var/service
&lt;/pre&gt;

&lt;p&gt;Then I restart&lt;/p&gt;

&lt;pre&gt;
sudo reboot
&lt;/pre&gt;

&lt;h3&gt;Install GUI&lt;/h3&gt;

&lt;p&gt;I use the i3 window manager.&lt;/p&gt;

&lt;p&gt;There are definitely tradeoffs to using a GUI on such an old underpowered computer. After this install I considered downgrading back to CLI only except that I liked having multiple screens with i3 and the Lagrange gemini client and photos.&lt;/p&gt;

&lt;pre&gt;
sudo vpm install xorg xterm i3 i3status dmenu
&lt;/pre&gt;

&lt;p&gt;That was about ~170mb for me.&lt;/p&gt;

&lt;p&gt;There are a few options, but first I chose to set up i3 to run manually:&lt;/p&gt;

&lt;pre&gt;
echo "exec i3" &amp;gt;&amp;gt; ~/.xinitrc
&lt;/pre&gt;

&lt;p&gt;To launch i3 manually, run &lt;/p&gt;

&lt;pre&gt;
startx
&lt;/pre&gt;

&lt;p&gt;The first time you run i3 it'll run the setup wizard. You choose the mod key. I use alt.&lt;/p&gt;

&lt;p&gt;Going forward, perhaps we want the traditional login experience of starting at a login screen and booting into i3. To set this up with the minimal lightdm:&lt;/p&gt;

&lt;pre&gt;
sudo xbps-install -S lightdm lightdm-gtk3-greeter
sudo ln -s /etc/sv/dbus /var/service/dbus
sudo ln -s /etc/sv/lightdm /var/service/lightdm
&lt;/pre&gt;

&lt;p&gt;To launch a terminal Mod+Enter.&lt;/p&gt;

&lt;p&gt;To open dmenu launcher, Mod+d.&lt;/p&gt;

&lt;p&gt;To quit a program Mod+Shift+q.&lt;/p&gt;

&lt;p&gt;To jump to another workspace, Mod+1 (or any other number key).&lt;/p&gt;

&lt;p&gt;Read more about i3 in its documentation.&lt;/p&gt;

&lt;h3&gt;Customize terminal&lt;/h3&gt;

&lt;p&gt;i3's default terminal is UXterm. I also sometimes use xterm. &lt;/p&gt;

&lt;p&gt;I downloaded the opendyslexic font.&lt;/p&gt;

&lt;pre&gt;
sudo vpm install font-open-dyslexic-ttf
&lt;/pre&gt;

&lt;p&gt;You can search and find other fonts in the repos or install manually.&lt;/p&gt;

&lt;p&gt;To see a list of your fonts:&lt;/p&gt;

&lt;pre&gt;
fc-list | col | sort | less
&lt;/pre&gt;

&lt;p&gt;Test out a font you installed, for example&lt;/p&gt;

&lt;pre&gt;
xterm -fa 'Liberation Mono' -fs 10
&lt;/pre&gt;

&lt;p&gt;Next I customized the Xterm and UXTerm defaults.&lt;/p&gt;

&lt;pre&gt;
vim ~/.Xdefaults
&lt;/pre&gt;

&lt;p&gt;I added these lines, to change the default font and size in both terminal. If you just use UXTerm then you only need those lines.&lt;/p&gt;

&lt;pre&gt;
XTerm*faceName: OpenDyslexicMono
XTerm*faceSize: 12
UXTerm*faceName: OpenDyslexicMono
UXTerm*faceSize: 12
&lt;/pre&gt;

&lt;h3&gt;Web browsers&lt;/h3&gt;

&lt;p&gt;Let's get some graphical software while we're at it. I don't want Chromium or Firefox because I think it'll be too slow and I have so little space left. So I'll download the minimal netsurf and dillo browsers.&lt;/p&gt;

&lt;pre&gt;
sudo vpm install feh netsurf dillo
&lt;/pre&gt;

&lt;p&gt;To use netsurf:&lt;/p&gt;

&lt;pre&gt;
netsurf example.com
&lt;/pre&gt;

&lt;p&gt;Once netsurf has opened you can open the preferences and change your default home URL and the search engine. I changed to DuckDuckGo from Google. Now in the future I can launch it with dmenu.&lt;/p&gt;

&lt;p&gt;Dillo can also be launched with dmenu. See which one you prefer.&lt;/p&gt;

&lt;h3&gt;Mastodon&lt;/h3&gt;

&lt;p&gt;I was able to login using brutaldon.org web client on netsurf, but not Dillo. But it was too slow to really browse.&lt;/p&gt;

&lt;p&gt;So I downloaded toot which has the toot_cli login and a tui to browse Mastodon. But I can't see everyone's posts simultaneously and don't really like this, so I installed tootle GUI program.&lt;/p&gt;

&lt;pre&gt;
sudo vpm install tootle
&lt;/pre&gt;

&lt;p&gt;To launch in dmenu it has a longer funny name com.bleakgrey.github.tootle. No matter, it works. It took me a few times to authorize (it launched my netsurf browser and had me login to my instance), but I eventually got it to work.&lt;/p&gt;

&lt;h3&gt;Gemini clients&lt;/h3&gt;

&lt;p&gt;I had already downloaded the tui gemini client amfora, but I needed to fix it so that amfora looks good. In UXTerm I couldn't make out any links numbers until I changed my color scheme. And since I am the creator of the slimey.toml theme for Amfora, I changed to that by modifying the theme at ~/.config/amfora/config.toml&lt;/p&gt;

&lt;p&gt;I downloaded offpunk gemini client / web client.&lt;/p&gt;

&lt;pre&gt;
git clone https://git.sr.ht/~lioploum/offpunk
&lt;/pre&gt;

&lt;p&gt;I installed some optional add-ons, for ASCII rendering of images, and for improved readability.&lt;/p&gt;

&lt;pre&gt;
sudo vpm install chafa
sudo vpm install python3-readability-lxml
&lt;/pre&gt;

&lt;p&gt;There's also gplaces client, but full install was 40MB plus needing GCC to compile, another 160MB, wasn't worth it to me, so I didn't install it. If I had a much bigger SD card, I'd have tried it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/dimkr/gplaces"&gt;gplaces client&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I tried installing Lagrange the GUI gemini client. I was shocked, first that it was only about 6MB, secondly at its speed on this old slow computer. Highly recommended. Worth running the GUI for this alone!&lt;/p&gt;

&lt;p&gt;That's it for now. I'll add a follow-up post more about the actual experience running this system in the next couple days.&lt;/p&gt;

&lt;p&gt;Check out my earlier post on trying the Old Computer Challenge.&lt;/p&gt;

&lt;p&gt;&lt;a href="old-computer-start.html"&gt;Old Computer Challenge Day 1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="./index.html"&gt;Back to index&lt;/a&gt;&lt;/p&gt;

--- 

&lt;p&gt;To leave a comment, email lettuce at the ctrl-c.club domain and state comment and the post title in your subject. Please list your name you'd like credited for the comment.&lt;/p&gt;

 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/void-pi.html</guid><pubDate>Fri, 14 Jul 2023 00:00:00 GMT</pubDate></item><item><title>old-computer-start.html</title><link>https://ctrl-c.club/~lettuce/old-computer-start.html</link><description>&lt;div&gt;&lt;h1&gt;Old Computer Challenge 2023 day 1&lt;/h1&gt;

&lt;p&gt;2023-07-10&lt;/p&gt;

&lt;p&gt;Today I'm starting Solene's Old Computer Challenge V3. This is the 3rd year she's run it, but the first time I'm participating. The main idea the first year was to use an actual old computer, and she gave some specs. The second year she limited her internet. This year she suggested if you use a modern computer to limit the cores, speed, etc.&lt;/p&gt;


&lt;p&gt;&lt;a href="gemini://perso.pw/blog//articles/old-computer-challenge-v3-part1.html"&gt;Old Computer Challenge V3 Part 1 (Solene)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm using a Chip Computer, originally from Next Thing Co, RIP. &lt;/p&gt;

&lt;p&gt;The Chip I'm using was sent to me compliments of winduptoy (THANK YOU!) about a year ago, and it's taken me this long to use it. I have a specific project in mind, and I hope this week will be a good test to show this thing works, and then I can use it for the project.&lt;/p&gt;

&lt;p&gt;First I tried using my old PocketChip, a handheld device with the Chip computer. Next Thing Co folded back in 2016 or 2017 I believe, and the servers are down, and it's really hard to find and flash the original OS. I didn't feel like doing all that. I booted up my old PocketChip and it was half functional, like the screen was a bit out of wack, not displaying my icons correctly. Then I tried my old Raspberry PI 1B but when I tried to download void linux for that pi to a SD card I ran out of space. I'll have to hunt for a larger SD card another time.&lt;/p&gt;

&lt;p&gt;OK, so that brings me back to this additional Chip computer sent by winduptoy. He had warned I'd have to flash it. When I tried plugging into a monitor, I couldn't get it to boot. I suspect a power issue. I powered it through a usb phone hub, but i remember this thing being finicky back in 2016 when I taught some workshops with the Chip. Next I pulled my old Chip out of the back of the PocketChip case and placed this Chip computer and pressed the bottom center button to power it on. I saw a light go on, a delay, and then wow, it turned on! I see the Debian bootup logo and maybe 30 seconds later I'm in.&lt;/p&gt;

&lt;p&gt;I used my phone just once, to search for and find the default name and password. Thankfully, it worked. winduptoy had loaded Debian Buster. I'm very familiar with Debian/*Buntu's so I set up internet:&lt;/p&gt;

&lt;p&gt;sudo nmcli device wifi connect NETWORK_ID password PASSWORD&lt;/p&gt;

&lt;p&gt;Then I sudo apt updated&lt;/p&gt;

&lt;p&gt;I downloaded man-doc since I didn't have the man pages, git and neovim. Then I downloaded fish shell, tldr and the gemini and http browser offpunk and w3m and links.&lt;/p&gt;

&lt;p&gt;sudo apt install git man w3m links fish tldr neovim&lt;/p&gt;

&lt;p&gt;git clone https://git.sr.ht/~lioploum/offpunk/&lt;/p&gt;

&lt;p&gt;I also git cloned my dotfiles which has a number of fish functions I like, and my gemini log so I could start writing this.&lt;/p&gt;

&lt;p&gt;I don't miss the old GUI PocketChip software. I'm sure I could just download another GUI anyway, probably, though I don't know if the touchscreen is easy to set up. We'll see about that later. Right now, I have a Dvorak default keyboard plugged in (DigiPlanet), which is perfect for times like this. The command line is plenty fast enough on this 7 year old computer, except that sometimes compiling takes a minute or two, so I have a book open next to me since I can't just open another tab and keep going.&lt;/p&gt;

&lt;p&gt;One annoying thing, I usually use the CAPS LOCK key as escape, so I am accidentally hitting it. Unfortunately, that causes the keyboard or computer to freeze and I have to force a hard shutdown with the power button when it happens. Thankfully neovim/vim autosaves to swap. I set fish as my default shell: chsh -s /usr/bin/fish&lt;/p&gt;

&lt;p&gt;That's it for set-up. I'm off and running. I have some web browsers, git, text editors and I think I'm good with that for now. We'll see how the week goes. I'll report back later in the week how it's going.&lt;/p&gt;

--- 

&lt;p&gt;To leave a comment email lettuce at the ctrl-c club domain with the word Comment in the subject and the name of the post. Please list the name that should be listed.&lt;/p&gt;

 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/old-computer-start.html</guid><pubDate>Mon, 10 Jul 2023 00:00:00 GMT</pubDate></item><item><title>bash-alternatives.html</title><link>https://ctrl-c.club/~lettuce/bash-alternatives.html</link><description>&lt;div&gt;&lt;h1&gt;Bash alternatives to cloud products and platforms &lt;/h1&gt;

&lt;p&gt;2023-07-02&lt;/p&gt;

&lt;p&gt;Note: This post is also printed in Issue 5 of the ^Z zine, out today, along with articles, stories and games by a number of other folks. Check it out.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ctrl-c.club/~loghead/ctrl-zine.html"&gt;Ctrl-Zine &lt;/a&gt;&lt;/p&gt;

---

&lt;p&gt;Most web products from file hosting to chat to banking software are made up of a tech 'stack' within a large software ecosystem. These are built for 'scale' and designed to be administered by a company providing you a more or less turnkey product at various levels of services. You pay for increasing levels of convenience, either with your private information being tracked, or with recurring expenses. This could mean paying annual fees for a 'creative editing suite', downloading and running a health tracking app that invisibly sells your data to data brokers, or accessing a social media account that sells your data to advertisers. And there are many more examples you can imagine or read about in the news.&lt;/p&gt;

&lt;p&gt;Lately a number of folks in my online community have been discussing the problems of the platform Discord, from issues of centralization, monetization of community conversation and labor, accessibility issues, to the inability to archive or save discussions or content. Some folks have gone back to using a combo of blogs and the old chat system IRC. In my own communities I've cut back in my participation in Discord and created alternative self-hosted forums or piggy-backed on Mastodon instead.&lt;/p&gt;

&lt;p&gt;Inspired by a CLI asciicinema recording by software and hardware developer Phil Hagelberg on how to use IRC I started to think more seriously about the idea that many cloud services could be replaced by some Linux software or some lines of Bash code gluing programs together.&lt;/p&gt;

&lt;p&gt;First, I want to address some straightforward question or critique someone might have. Namely, why use the (Linux) command line instead of a simple web platform? Another criticism of this approarch might be that using the command line could appear to just be retro nostalgia, or unnecessarily complicated.&lt;/p&gt;

&lt;p&gt;To answer these: I think using tools that don't cost much or any money, that we or others can modify and share, and that we can combine together to meet our needs is empowering. I have a bicycle where I can fix a flat tire, replace the chain, and do minor maintenance like adjust the breaks. Sometimes I spend money at the bike shop such as when I needed generator lights installed and wasn't confident in my own work. The bike is what I use to commute to my studio, and how I get around town. And yet I feel okay working on it, and the knowledge gained from trying lets me step in and fix something when I need to. Though I'm not afraid to get extra help at a bike shop or from knowledgeable friends. This isn't a perfect analogy, but it'll do.&lt;/p&gt;

&lt;p&gt;Likewise, working with computer tools and software doesn't need to be intimidating. You can learn a bit at a time, try things out, find tutorials, and look for community to help you along the way. It's also a good way to resist commercialization. Rather than buying 'products' and the need for incessant upgrading, annual subscriptions or throwing out old products to get access to the latest products, you can opt out. Like riding a bike command line and text user interface software can be beautiful, elegant, luxurious or just minimally works. With some basic Bash knowledge you can get pretty far. &lt;/p&gt;

&lt;p&gt;I'll admit that some Free, Libre and Open Source Software can be ugly or clunky. I am also sympathetic to resisting pure retro-nostalgia, but I don't think continuing to use the command line in 2023 (or whatever year you are reading this) is simple nostalgia. Bash and the shell predates GUI software, and while I won't make a definitive prediction, it could even potentially outlast it. The shell never disappeared, and the amount of command line software has increased exponentially in the past number of years. And most of it continues chugging along to work year after year. It's not that uncommon to be reading a command line software man(ual) page and it lists the year in the 80s! And it's still useful.&lt;/p&gt;

&lt;p&gt;On Linux, our basic automation tool is the command shell. As opposed to cloud software and GUI software it's often much easier to develop and certainly to glue together command line software. The term 'glue' here means to combine command line software together in various ways, sometimes envisioned by the developer but othertimes not. The software will have ways to take input, to be modified or configured, and has standard ways to produce output. All this allows it to be composed together with other command line software. We still don't have a great way to 'glue together' GUI software in this intuitive way that we weave together software in Bash. Using Bash to glue tools together is such a fundamental advantage on Linux systems because it was intentionally built in from the beginning to Unix. &lt;/p&gt;

&lt;p&gt;Glue code is often considered to be a form of 'duct tape programming.' It's fast. And glue code solutions might be considered a 'hack' approach, not necessarily implying the original term hacker here. And while this could imply that glue code doesn't last long it could also be thought advantageously as well. For the same reason that cloud services and platforms are black boxes where you input money or privacy/data and get out a simplified output or software product, Bash and other glue codes let you pick and choose, customize, see its innards, test your own idea by typing it and running it in the command line REPL. You continue to refine it until you find a solution, and then you can automate your solution, with scripts, cron, and the like.&lt;/p&gt;

&lt;p&gt;Without further adieu, I present some sketches of ideas, recipes and speculative ideas on how to glue together your own alternatives to FAANG and other startup products in the command line. Some of these are easy peasy for those new to the CLI. Others will require a bit more knowledge and experimentation.&lt;/p&gt;

&lt;p&gt;Some of these will run on your own computer. For others you'll want to access a server, either because you need to 'sync' with someone(s) else, to store info remotely that can be accessed by multiple people or other reasons. You could join a tilde community or you can...&lt;/p&gt;

&lt;h2&gt;Run your own server&lt;/h2&gt;

&lt;p&gt;For many of these solutions, if you have your own server, either a spare old laptop, raspberry pi, or a remote server, you won't be as reliant on cloud services. &lt;/p&gt;

&lt;p&gt;For an easier-to-configure server for this kind of thing, try yunohost.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://yunohost.org"&gt;Yunohost&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Setting up a server is beyond the scope of this article, but there is lots of documentation online if you do a search, or read the yunohost website.&lt;/p&gt;

&lt;h3&gt;Word Processing&lt;/h3&gt;

&lt;p&gt;Nano and WordGrinder are simple and attractive text user interface-controlled word processors.&lt;/p&gt;

&lt;p&gt;Alternatively, text editors such as Emacs, Vim, Neovim are old faithfuls.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://cowlark.com/wordgrinder/index.html"&gt;WordGrinder  &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://micro-editor.github.io/"&gt;Micro &lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Live collaborative text editing&lt;/h3&gt;

&lt;p&gt;Use ttyshare or tmate or even tmux with ssh to create a shared terminal session. Then both open your text editors.&lt;/p&gt;

&lt;p&gt;Alternatively, use Vim's server capability.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://vim.fandom.com/wiki/Enable_servername_capability_in_vim/xterm"&gt;Vim: enable server capabiliity&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Version control and collaboration (not 'live')&lt;/h3&gt;

&lt;p&gt;Git or Subversion plus a shared remote server, perhaps one you set up with yunohost.&lt;/p&gt;

&lt;h3&gt;Git server&lt;/h3&gt;

&lt;p&gt;You can use Gitea.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.gitea.com/"&gt;Gitea&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Or even simpler, bare git on a server, see:&lt;/p&gt;

&lt;p&gt;Idiomdrottning's How to host git repos on their Gemlog.&lt;/p&gt;

&lt;p&gt;&lt;a href="gemini://idiomdrottning.org/hosting-git-repos"&gt;How to host git repos&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;minimal calendar program&lt;/h3&gt;


&lt;p&gt;&lt;a href="https://www.lightandmatter.com/when/when.html"&gt;when&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Synced calendar&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://lostpackets.de/khal/"&gt;khal&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Pick a date&lt;/h3&gt;

&lt;p&gt;Put a spreadsheet on a server that others have access to editing. Or use email. Or host a form on a server using cgi. Have people select the best option. Schedule an email to you or all at the end date with the results. You could set it up with cron or just mark on your calendar to check back on a certain day.&lt;/p&gt;


&lt;h3&gt;Todo list&lt;/h3&gt;

&lt;p&gt;I save my todo list as a textfile. There's also todo.txt project.&lt;/p&gt;

&lt;h3&gt;Radio&lt;/h3&gt;

&lt;p&gt;Pyradio is excellent.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.coderholic.com/pyradio/"&gt;Pyradio &lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Image editing&lt;/h3&gt;

&lt;p&gt;Imagemagick is incredible. Lots of recipes are available online.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://imagemagick.org/"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ImageMagick/Usage"&gt;ImageMagick Recipes&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Image browsing online and offline&lt;/h3&gt;

&lt;p&gt;I use chafa to browse images in the command line. If I'm going through directories of images I use fff, a vim-like file manager. Pressing i over an image file will open it inline overlaid in the terminal.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://hpjansson.org/chafa/"&gt;chafa&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/dylanaraps/fff"&gt;fff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;The terminal emulator Terminology can also show images inline in the terminal. For example tyls is like the linux ls command setup to display images of all files.&lt;/p&gt;

&lt;p&gt;For browsing the web in the command line there are a number of great programs but w3m has the w3m-img plugin that renders image in the command line. Add the -H flag to get 'high quality' images. &lt;/p&gt;

&lt;p&gt;links text browser has the -g flag that enables graphics mode in the command line. &lt;/p&gt;

&lt;h3&gt;Image sharing&lt;/h3&gt;

&lt;p&gt;I have a simple bash script that generates html image galleries that I host on my web server. I use imagemagick to resize.&lt;/p&gt;

&lt;p&gt;cyclenerd has an example called gallery.sh that automates this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Cyclenerd/gallery_shell"&gt;gallery.sh&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alternatively you could use nextcloud to share images. I haven't tried yet so you'll have to explore on your own. &lt;/p&gt;

&lt;h3&gt;Social media&lt;/h3&gt;

&lt;p&gt;If you use mastodon, try toot.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ihabunek/toot"&gt;toot&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;twtxt is a minimalist social media protocol like a minimal distributed twitter (sorry for the birdsite comparison!). You can use a web client or browse and post in the command line. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://twtxt.readthedocs.io/en/latest/user/usage.html"&gt;twtxt usage&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;File sharing&lt;/h3&gt;

&lt;p&gt;Looking for a dropbox or wetransfer alternative? Try The Null Pointer&lt;/p&gt;

&lt;p&gt;&lt;a href="https://0x0.st/"&gt;The Null Pointer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Or alternatively, upload to your own server. For sharing files on your own server, use scp.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://linuxize.com/post/how-to-use-scp-command-to-securely-transfer-files/"&gt;How to use scp to securely transfer files&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For backups, rsync.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.makeuseof.com/automatically-backup-files-to-with-rsync/"&gt;automatic backups with rsync&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Forums&lt;/h3&gt;

&lt;p&gt;On Ctrl-c club tilde we use the iris command line forum software with hundreds of users on a single shared server. We love it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Calamitous/iris"&gt;iris&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Weather&lt;/h3&gt;

&lt;p&gt;This is a fun category. You can check the weather a few ways.&lt;/p&gt;

&lt;pre&gt;
curl wttr.in 
&lt;/pre&gt;

&lt;p&gt;There are some other options you can pass in too. &lt;/p&gt;

&lt;p&gt;Or use ansiweather.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/fcambus/ansiweather"&gt;ansiweather&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Many of these solutions, systems and recipes are barely more complex than using a cloud service alternative. And they won't be mining your data, selling your info to advertisers, or trying to sell you additional services. With a little bit of elbow grease they can be put to good use. Help is often a search engine query away, or why not try posting on IRC? Many of these programs can be tailored to your own use-case. These programs are almost always free and some take donations. Beyond initial setup (if any), these programs also eschew all of the advertisements, pop-ups alerts and notifications and other cruft that contribute to mental exhaustion while using some of the commercial platforms these programs are replacing. &lt;/p&gt;

&lt;p&gt;This also doesn't need to be an all-or-nothing affair. Pick and choose what works for you. That's the beauty of having access to free and open source software.&lt;/p&gt;

&lt;p&gt;I hope you find some solutions to your own needs, and glue together your own software ecosystem. &lt;/p&gt;

~lettuce

&lt;p&gt;&lt;a href="https://ctrl-c.club/~loghead/ctrl-zine.html"&gt;Ctrl-Zine &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="./index.html"&gt;Back to index&lt;/a&gt;&lt;/p&gt;

---

&lt;p&gt;You can leave a comment by emailing lettuce at the ctrl-c.club domain. Write comment and the post name in the subject, and make sure to list what name should be listed.&lt;/p&gt;


 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/bash-alternatives.html</guid><pubDate>Sun, 02 Jul 2023 00:00:00 GMT</pubDate></item><item><title>gemini-birthday.html</title><link>https://ctrl-c.club/~lettuce/gemini-birthday.html</link><description>&lt;div&gt;&lt;h1&gt;Happy birthday Gemini&lt;/h1&gt;

&lt;p&gt;2023-06-23&lt;/p&gt;

&lt;p&gt;Gemini is now four years old.&lt;/p&gt;

&lt;p&gt;&lt;a href="gemini://gemini.circumlunar.space/news/2023_06_20.html"&gt;Four Years of Gemini! (solderpunk)&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt; I promise you that if you dive deep enough you'll find non-tech-obsessed highschoolers using web front-ends to make cringey posts about their first loves in Geminispace. You'll find grieving widowers. You'll find poets. You'll find slice of life journals by people who rarely talk about computers. Even amongst the strictly tech focussed Geminauts, you'll find people boldly experimenting with making faster paced, more interactive, more social kinds of capsules than has been traditional thus far, and you'll find people for whom that is an entirely unappealing prospect swearing they'll stick to older ways. &lt;/blockquote&gt;

&lt;p&gt;&lt;a href="gemini://jsreed5.org/log/2023/202306/20230620-geminis-fourth-anniversary.html"&gt;Gemini's Fourth Anniversairy (jsreed)&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;I myself hoped Gemini would replace my Web presence when I first made my capsule, but now I understand that Gemini fills its own place.&lt;/blockquote&gt;

&lt;p&gt;I know on my end, where I have a web presence, am on Mastodon, a tilde community, and in my own IRL communities, Gemini and this capsule provides me with a different space to express myself and explore. I can keep a separate identity from my main professional work. I don't have to make sure my work here matches my professional goals or even my presence on social media. With minimal tools, without commercial interests, ads or monetization, I have a place I can enter on my own terms, engage with like minded folks, and then slip out the back door, without having to do a ton of setup, negotiate or dance around a corporation, or even spend much time on drudgery.&lt;/p&gt;

&lt;p&gt;And for that I'm thankful, and I plan on sticking around at least for the immediate future.&lt;/p&gt;

&lt;p&gt;&lt;a href="./index.html"&gt;Back to index&lt;/a&gt;&lt;/p&gt;

---

&lt;p&gt;To leave a comment, email lettuce at the ctrl-c.club domain with "comment" and the post title in the subject. Be sure to list what handle you'd like posted as well.&lt;/p&gt;

 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/gemini-birthday.html</guid><pubDate>Thu, 22 Jun 2023 00:00:00 GMT</pubDate></item><item><title>mini-bike-game.html</title><link>https://ctrl-c.club/~lettuce/mini-bike-game.html</link><description>&lt;div&gt;&lt;h1&gt;Mini daily solo bike game&lt;/h1&gt;

&lt;p&gt;2023-06-02&lt;/p&gt;

&lt;p&gt;This is a short write-up of a mini 'game' I play on my bike every day. Game might be pushing the word too far. I guess it's more like a challenge or diversion. I also didn't invent this but I unfortunately don't remember where I learned it, possibly in an old bike zine or on a blog or something.&lt;/p&gt;

&lt;p&gt;It's a small idea, but it's a fun one.&lt;/p&gt;

&lt;p&gt;Every time that I bike home, when I'm nearing home, I challenge myself to stop pedaling at some point and see how close I can nail drifting to my door. In other words, at some point near home I stop pedaling and then just let the momentum of the bike take me farther and I see if I can get all the rest of the way home without turning the pedals at all. The challenge is to see how far I can be from home, stop pedaling, and then drift the rest of the way to end exactly at my door so that the bike stops no sooner and wouldn't go any further. In other words, it would wobble to a stop right at the door with me on it.&lt;/p&gt;

&lt;p&gt;I always remember the previous time where I stopped pedaling. I live in an urban area with traffic lights, pedestrians and stop signs around my house. So it can take me hundreds of times to perfect my technique because traffic lights, stop signs, the speed I'm pedaling, and if there is any traffic - all these influence the 'drift' home. &lt;/p&gt;

&lt;p&gt;To be clear, I consider it a "lose" if I drift all the way home and my bike still has enough momentum to go past the door of my house. I am shooting to end literally right at my door. When I used to live in Los Angeles I lived at the bottom of a long valley on the west side. I had a 1hr15minute commute to school/work uphill and a 25 minute commute home downhill, so there I would stop pedaling maybe 8 blocks from home or so. Over the course of 2 years I got really good and finally had a win, though little things like traffic or wind that day could affect my outcome, so I would keep score of how many days I could get home with a 'win.'&lt;/p&gt;

&lt;p&gt;Where I live now I tend to stop pedaling right around a traffic light about a block and a half from my house where afterwards I need to take a right turn, go around pedestrians, sail to the end of a block past cars that are sometimes double parked unloading, and then go the wrong way 40 feet on a busy one way street (not proud to admit this but it saves having to make like a car and go an extra 5 minutes in a circuitous roundabout route). Due to the large number of variables with lights and peds and doubleparked cars and wind and the traffic light I have not in the past 2 years at my apartment perfected the exact spot to stop pedaling. I've gotten really close and I think will nail it one day soon.&lt;/p&gt;

&lt;p&gt;Anyway, this is a minor game or self-challenge and a silly enjoyable one that I thought I'd share. It adds a little fun to the end of my daily bike commute. And while I may look silly to my neighbors or the double parked cars during the last 80 feet at realllllllyyy slow almost-wobbly drift, it's a pretty fun activity.&lt;/p&gt;

&lt;p&gt;&lt;a href="./index.html"&gt;Back to index&lt;/a&gt;&lt;/p&gt;

---

&lt;p&gt;You can leave a public comment on this post by emailing me with my username at ctrl-c.club and putting the name of this post and the word comment. Also be sure to list what name you'd like listed.&lt;/p&gt;

 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/mini-bike-game.html</guid><pubDate>Fri, 02 Jun 2023 00:00:00 GMT</pubDate></item><item><title>vimwiki.html</title><link>https://ctrl-c.club/~lettuce/vimwiki.html</link><description>&lt;div&gt;&lt;h1&gt;5 years with a personal wiki (vimwiki)&lt;/h1&gt;

&lt;p&gt;2023-06-01&lt;/p&gt;

&lt;p&gt;I began using vimwiki in fall 2018, inspired by a number of wikis I'd experienced over the years, but not by the 'digital gardens' movement so much as the morphing website-portfolio-artist-site-as-wiki by artist Auriea Harvey. Each time I visited it sprouted new pages or took on different forms and page flows. Directories, stubs, image galleries, linkpages: like a 90s web wonderland. In the last few years as she's been more widely exhibited her site has become more less and less the wild wiki of yore. Might need to revisit it with the Internet Archive's wayback machine: https://web.archive.org/web/20190327062229/http://auriea.org/Auriea&lt;/p&gt;

&lt;p&gt;I decided I wanted to create a wiki as well, but quickly found myself wanting to output my work for public consumption to be more like writing blogposts. I had been using jekyll for this on my personal site. Simultaneously, I needed a place to capture my notes, configs, snippets of code and ideas and the like. This is where the idea of using a wiki came back. I looked at Gollum, mediawiki, pbwiki, and other wiki options I was already familiar with and ones that I wasn't familiar with yet. I wanted the language to be simple, built for just me instead of multiple users, and I wasn't concerned about security since I intended this to be offline, for just me. I also wanted to write in markdown. I stumbled across Vimwiki in a post on Opensource.com. Since I was already a vim user, and enjoyed vim keys in my other TUI apps like pyradio, I thought it could be worth a try.&lt;/p&gt;

&lt;p&gt;Vimwiki runs entirely in the terminal, edited with vim/nvim, and can output html (if you so desire). You have a main index page (usually) and then links off this page to sub-pages, which link out to additional pages. You press enter on any word and then it creates a new page in your wiki and takes you to that page. &lt;/p&gt;

&lt;p&gt;Some special commands: &lt;/p&gt;

&lt;pre&gt;
\ww opens a new diary page for the day, 
\w\w jumps to your wiki index
\w\i rebuilds your diary index with links to all your diary entries
&lt;/pre&gt;

&lt;p&gt;The first line of your diary will be the title listed on the diary index page.&lt;/p&gt;

&lt;p&gt;Created vimwiki pages are a single word, or a series of words linked with underscore or dashes.&lt;/p&gt;

&lt;p&gt;I started my vimwiki in September 2018. Today I have 444 wiki pages, of which 325 are linked within the main part of the wiki and 119 are in the diary section of vimwiki. The distinction is that the 'diary' I use to draft gemlog posts, website blogposts, individual software or game devlogs, or to draft documentation or professional documents I have to write. Yesterday I used the diary to work on a report I have to give at school. Today I used it to draft the text you're reading now.&lt;/p&gt;

&lt;p&gt;My index page has about 20 links off it, though I occasionally put a link to a sub-page that I'm actively working on at the top of the index, and remove it from there after completing the current project. Right now my index looks kind of like this:&lt;/p&gt;

&lt;pre&gt;
# My knowledge Base
scratchnotes
links
teaching
* online archives * professional work
learning - links to videos, talks, etc
tasks
* coding, * software, * website, * design
books
audiovisual
sound
writing / studies
organizing
games
life
diary
&lt;/pre&gt;

&lt;p&gt;Each of these are links, except the line with * are lines with multiple links&lt;/p&gt;

&lt;p&gt;In addition to navigating my wiki via the links, I also sometimes just go to the vimwiki directory itself and search for a wiki page by title since it's a flat hierarchy. For example, I might directly open the webrings.md page, or solo-board-games.md or window-managers.md pages. &lt;/p&gt;

&lt;p&gt;A page for me usually has a short description, then a list of links either internal or on the web. I rarely have images inline since this is mostly a place for me to store information. The rare times I want to browse this visually on the web I will use the MarkdownPreview vim plugin to launch it in the browser.&lt;/p&gt;

&lt;p&gt;The only other things I will add is that mostly it's a lightweight tool and I don't have to think about it very much since it's flexible and fast and easy. I have a function (in fish. This would equivalent to an alias in bash) that launches my tasks.md file which is a plaintext todo file for me of all my upcoming deadlines for work. I can link out to sub-pages for these projects if they warrant it. &lt;/p&gt;

&lt;p&gt;I do approximately weekly backups to an external disk when i backup my entire hard drive. And I also use git to a private remote git instance as well, though I have an automated "git update" command that does the adding, commit and message for me all at once.&lt;/p&gt;

&lt;p&gt;The wiki is where I track projects, find notes I took when installing my operating system, list articles or advice I want to re-read every few years, or track movies by a particular filmmaker or books I've read and their summaries. And these are just a few examples. Some days or a week or so may go by that I don't open it. Other days I am working on a dozen files.&lt;/p&gt;

&lt;p&gt;It's not public, but a necessary internal notebook, and it works for me.&lt;/p&gt;

&lt;p&gt;Since it's just markdown, I basically am also writing this in gemtext, so after this paragraph I'll copy this document to my gemlog folder, then upload it to the gemlog on tildegit and git pull it down into my gemlog directory on ctrl-c.club and it's published just like that. My gemtext links (such as below) won't work internally in vimwiki, but that's fine with me.&lt;/p&gt;

&lt;p&gt;&lt;a href="./index.html"&gt;Back to index&lt;/a&gt;&lt;/p&gt;

---

&lt;p&gt;You can leave a public comment on this post by emailing me with my username at ctrl-c.club and putting the name of this post and the word comment. Also be sure to list what name you'd like listed.&lt;/p&gt;

 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/vimwiki.html</guid><pubDate>Thu, 01 Jun 2023 00:00:00 GMT</pubDate></item><item><title>retrogrouch-computing.html</title><link>https://ctrl-c.club/~lettuce/retrogrouch-computing.html</link><description>&lt;div&gt;&lt;h1&gt;A Retro-grouch and ATB computer &lt;/h1&gt;

&lt;p&gt;2023-03-25&lt;/p&gt;

&lt;p&gt;"Retro-grouch" is a facetious term I believe was originally meant pejoratively to denote a bike geek out of step with the current trend in new bicycle technology. Now I see it laughingly and affectionately adopted by many folks passionate about steel all-terrain bicycles, practical commuter accoutrements, and resistance to keeping up with new, useless, expensive bike technology 'innovations.' &lt;/p&gt;

&lt;p&gt;I favor just this kind of riding for a few reasons. It values tried and true tools and technology. We don't need to adopt hydraulic brakes, tubeless tires, and internal routing. These things are more expensive in the first place, and require new tools and specialized parts, and often expert level knowledge. Alternatively, classic bike setups can be understood reasonably by me, an amateur, through experimentation, how-to books and tutorials, and they use fairly universal swappable parts. &lt;/p&gt;

&lt;p&gt;I think it's the approach that many of us on the smol web happen to take already with our own computers, but I thought I'd consider the idea a bit more and see if the comparison can bring new ideas to fore.&lt;/p&gt;

&lt;p&gt;As I'm interested in thinking through aspects of permacomputing and resisting consumer culture, I've been trying to think through what aspects of a retro-grouch approach to computing might mean, and does this overlap with some of the other thinking I see out there in discussions of ideas about permacomputing.&lt;/p&gt;

&lt;p&gt;By the use of the word retro I am not implying using retro computers (which my mind places in the 80s), but rather 'tried and true' basics. Getting a bit more in the weeds, there is also the bike term ATB, originally a term that rivalled MTB / mountain biking but gradually fell away in the past few decades and has recently begun to make a comeback as a term in some smaller bike communities. ATB or all terrain biking is a term for the on-road/off-road, commute or travel, grocery haul or long distance ride bike. It's a bike that can do it all and has done it all. It needs to be sturdy, weather and road-resistant, but able to be laden down with supplies, and yet still comfortable. An ATB is not a vintage road bike, nor a racing bike or even a 'gravel racer.' It is a bike that can literally do it all.&lt;/p&gt;

&lt;p&gt;Here are some of my ideas on speculative aspects of a retro-grouch and ATB approach to computing:&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;parts should be basic, swappable &lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;should work offline&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;the OS should be stable&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;it should be repairable by its user&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;simplicity where it counts&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;all the accoutrements&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;seat, pedals, handlebars&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;quality and longevity&lt;/li&gt;&lt;/ul&gt;

&lt;h3&gt;Parts should be basic, swappable&lt;/h3&gt;

&lt;p&gt;This could mean basic wired keyboards, usb hard drives, thumb drives, and likely a Linux distro operating system.&lt;/p&gt;

&lt;h3&gt;Should work offline&lt;/h3&gt;
 
&lt;p&gt;i.e. not a Chromebook or equivalent 'cloud'-reliant computer. That's not to say it can't have browsers or go online, but it should have capabilities and all basic programs available on the computer, without needing to pay for a subscription, commercial service or commercial software.&lt;/p&gt;

&lt;h3&gt;a stable OS &lt;/h3&gt;

&lt;p&gt;By stable, I'm suggesting it should be a basic Linux or BSD distro that doesn't really need dotfiles or extensively studying documentation. It should not require constant updates, and at risk of starting an argument I'll suggest more than once a month being too much, as a start, and maybe shooting for twice a year is better.&lt;/p&gt;

&lt;h3&gt;it should be repairable by its user&lt;/h3&gt;

&lt;p&gt;The user of this computer should be able to reasonably keep the working and running of the machine and its parts in their head so that they can fix an issue when it arises. And the documentation for how to do so should be available offline as well. When I purchased a CHIP computer about a decade ago, I was impressed that a simple easy-to-read PDF manual was placed in the home directory. You could start up and go without reading it, but if you did need to alter something or had to troubleshoot (such as a non-working DIP to connect a HDMI monitor), you could open up the manual and read about it without needing to go online. When reading about the DIP that's where I learned I likely had a power issue and needed to power the keyboard through a powered hub to free up power for the monitor connection.&lt;/p&gt;

&lt;h3&gt;simplicity where it counts&lt;/h3&gt;

&lt;p&gt;Like everything else on this list, this particular facet can be debated extensively, but my main idea here is that while the computer should be 'simple', I don't mean it should be command line only, or a minimalist distro per se. While that is no doubt a great approach for folks (like myself) interested in it, for those that just need to 'get around' the computer should be simple enough and no simpler! &lt;/p&gt;

&lt;p&gt;I have purposely not specified a single distro or family because I think this is really up to the individual. Just like how one may buy a custom Rivendell bike, a production Crust bike frame, or spec out separate parts to build up together, or revive a 1980s city bike for example, there are many approaches one can take.&lt;/p&gt;

&lt;h3&gt;All the accoutrements&lt;/h3&gt;

&lt;p&gt;Here's where I mention bike bags, baskets, fenders, water bottle holders, good tires and tools. On the computer we need text editors, file manager, spreadsheet, calendar, word processor, layout software, music software, image editor, some games and anything else one may want. A WMDE (window manager / desktop environment) can obviously come with this on some distros, or one has to add them on others.&lt;/p&gt;

&lt;p&gt;Obviously, each person can individually tailor their own computer, and will have their own needs and preferences. Like there are fixed gear riders and fat tire bikes, there is Damn Small Linux on an old eee PC or running Void on an a desktop Alienware. Sorry, maybe these are silly comparisons! &lt;/p&gt;

&lt;h3&gt;Seat, pedals, handlebar&lt;/h3&gt;

&lt;p&gt;When trying to consider the retro-grouch approach to biking one thing I sometimes see emphasized is where the user comes into contact points with the bike: seat, pedals, handlebar. By the same token, this is where we consider practicality, aesthetics, and function for our computers as well. The interface of the machine is important, impacting our comfort. I'm talking about the mouse, keyboard and seat. On the one hand there are the mechanical keyboard addicts, and on the other, those happy to use the generic keyboard that came with their machine. I like a trackpad and basic usb mouse, but I've also been happy with a trackball. All this is in opposition to the expensive and finicky touchscreen. I'm not totally against them, but I've yet to see them work really well. &lt;/p&gt;

&lt;h3&gt;Quality and longevity&lt;/h3&gt;

&lt;p&gt;I've not specified how long this machine should last. If the parts are made well-enough, capable of being replaced, basic, and simple, this should last a long time. With my XPS 13, it still feels snappy enough to me at 5 years old   that my only plan for right now is to fix a broken key. I ordered the part for $10 online. And I'm going to replace the battery, with one I bought online from the manufacturer. &lt;/p&gt;

&lt;p&gt;I've left out discussing the monitor, but it should be obvious I doubt an ultra high definition monitor is necessary for computing. The monitor of several years ago should be just fine. For speakers, I just plug into my desk speakers, and that works fine as well. &lt;/p&gt;

&lt;p&gt;You may have been reading this whole post and gotten down to the end and felt like this was all obvious stuff and what you're already doing. Hopefully so. And yet it's in stark contrast to the kinds of machines I mostly see advertised online, the computers sold by the mainstream brands, and especially our societal emphasis on the latest tech trends and consumption. The more we can normalize these kinds of values I think it's better, especially if we can reduce consumption, increase know-how and confidence in working on one's machine if necessary.&lt;/p&gt;

&lt;p&gt;If you don't have a machine like this, it may be worth acquiring one: used on Ebay, craigslist, from a university, or gathering dust on a shelf somewhere. This summer I'm thinking of building up a few of these in a small fleet for an informal co-working/hang space on Governor's Island in New York, with folks that are definitely not Linux users or knowledgeable of it. For one thing, it will be useful for folks in my community that need a space to work and some occasional computer use. For another, it can serve as a model for some folks of this kind of computing, and I can get some feedback from them on how useful it is and what its limitations may be.&lt;/p&gt;

---

&lt;p&gt;You can leave a comment by emailing lettuce at the ctrl-c.club domain. Please write the word comment and the post title in your subject line and specify what name to place with your comment.&lt;/p&gt;

 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/retrogrouch-computing.html</guid><pubDate>Sat, 25 Mar 2023 00:00:00 GMT</pubDate></item><item><title>chesslikes.html</title><link>https://ctrl-c.club/~lettuce/chesslikes.html</link><description>&lt;div&gt;&lt;h1&gt;Chesslikes&lt;/h1&gt;

&lt;p&gt;2023-03-14&lt;/p&gt;

&lt;p&gt;I return to chess and chess-likes every so often. Abstract board games keep my interest in the longhaul though there are sometimes many months that go by between playing them. For the past two years I had been on a Backgammon kick, playing with different friends and my partner and even online. Lately though I've been back on chess, and specifically some of the variants below. Short descriptions and biased anecdotal reviews below.&lt;/p&gt;

&lt;p&gt;I'm using the term chess-like facetiously. In the wider world there is a known title "Chess Variant." This is a term for the family of games based on Chess, with different rules variations and sometimes completely different pieces, though often on a standard or enlarged regular gridded chessboard. By the way, one of my favorite chess variant terms is "fairy pieces," the term for a variant chess piece not found in the now-standardized classic chess. &lt;/p&gt;

&lt;p&gt;&lt;a href="gemini://gemi.dev/cgi-bin/wp.cgi/view?Fairy+chess+piece"&gt;Fairy Chess piece (Gemipedia)  &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Fairy_chess_piece"&gt;Fairy Chess piece (Wikipedia)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Below I've reviewed modern Chess-likes, as opposed to traditional chess variants. Whereas many chess variants are slight modifications to the game, they often eschew past knowledge, for example by studying openings, but preserve a similar focus on careful and methodical strategy. The chess-likes below I've selected because they more dramatically tend to change the gameplay, reimagining chess in completely new forms, or departing almost completely while retaining a bit of the flavor of chess. If we need a metaphor, and since I'm a puzzle videogame player, let's consider these games to be Broughlikes to Rogue's roguelike, if that metaphor means anything to you, rather than new "traditional oldschool roguelikes." Throwing out tradition while retaining some of that chess strategy flavor, that's perhaps a good way to think of these, though of course there is likely a continuum of games between chess and not-chess!&lt;/p&gt;

&lt;h2&gt;Chess&lt;/h2&gt;

&lt;p&gt;It's a classic! It's a beautiful strategy game. In high school I read books on various opening and middlegame and even endgame strategies and spent hours refining my game. I still use some of those skills when I play, though I'm quite a bit rusty. I had chess puzzle game books and the like too. I didn't want to spend hours each day for years to continue to improve my game. I started getting more interested in making music, reading and other pursuits. In college I played with friends, and over the years have continued to play the game. I've tried online chess a bit when I was dating someone that was really into it, but now I tend not to play the game anymore. I've kind of lost my taste for it unfortunately. I think its slow deliberate nature was too plodding for me. I turned to speed chess games, which I enjoyed, but rarely have a friend in-person who wants to play this way. I tried it online but didn't enjoy it as much. Occasionally I'll play on my tablet or phone, and I genuinely enjoyed beating a 'young Magnus' in a Magnus chess engine, and took a commemorative polaroid when I beat the chess program of the PDP-12 (from 1969) I think it was at the Living Computers museum in Seattle. Still, chess will always be around, and I'm glad I know how to play, but it's just not a common game for me right now due to its high time commitment. And the desire for finding more casual ways to play are what brought me to these chess-likes...&lt;/p&gt;

&lt;h2&gt;Knightmare Chess&lt;/h2&gt;

&lt;p&gt;This is a deck of cards that you use with a traditional chess board and pieces. It's published by Steve Jackson Games, from 1996, and based on an old chess card game variant from France that translates to 'Storm on the Chessboard.' Each player draws a hand of cards that they play along with the standard chess pieces. These cards add new rules, interrupts and transforms or builds fairy chess pieces. Honestly, Knightmare Chess is a chaotic game, possibly the most chaotic two player board game I've played. Just about 15 minutes into a game and I find with my partner the game is careening back and forth between the two of us. There's something satisfying about slapping down a card that cancels your opponents last move, sacrifices one of your pawns to kill a stronger enemy piece, or freeze an opponents piece, or lets you move twice. Then your opponent slaps down a card that reverses yours. Or.....You get the idea. This game has led to a lot of near-shouting when my partner and I play as you sometimes have to interpret rules and see which card cancels out which other which cancels out another, etc etc. It can be a lot of fun, but is kind of the exact opposite of classic chess, which continues at a slow moderate pace. Where that has no hidden information, this is tons of hidden information and randomness. &lt;/p&gt;

&lt;p&gt;There are several variations of Knightmare Chess listed in the rules booklet. I have the 2nd edition, which features 2 decks of cards. Rather than the deck-building version where each player builds up a deck to play from, like Magic the Gathering, I tend to play where we have a single deck of cards to draw from and each of us draw to keep 5 cards at the end of each turn. But this may also be why our games veer wildly back and forth. Don't get me wrong: there is plenty of strategy, but things go haywire quickly. I recommend it as a good way to have a high octane game. Games  play usually takes us up to two hours, but my partner takes really long turns as they study their cards over and over again, whereas I'm usually ready in a minute, so I'd think a typical game should take about an hour. &lt;/p&gt;

&lt;p&gt;By the way, I think the graphics are atrociously bad and missed a great opportunity. Far from being nicely designed like Magic The Gathering or other modern deck-builders, this game has a vague 'dark dungeon' theme: think lightly colored dark lairs and mages and the like, but completely faded out color on the cards. It sort of works to advantage though to hide the at-times grotesque imagery. I think they missed a great opportunity to have images that help make clear the effects of the card. The text is also poorly aligned on some cards. Although this is slightly disappointing, it doesn't overall affect the gameplay so much as we are mostly just reading the text on the cards rather than admiring their design.&lt;/p&gt;

&lt;p&gt;&lt;a href="gemini://gemi.dev/cgi-bin/wp.cgi/view?Knightmare%20Chess"&gt;Knigtmare Chess (Gemipedia)  &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Knightmare_Chess"&gt;Knightmare Chess (Wikipedia)&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Thrive&lt;/h2&gt;

&lt;p&gt;A recent game, from the past 5 years, described as something of a "Build Your Own Chess piece" game, created by Martin Grider for Adam's Apple Games. I met Martin at Eyeo conference a few years ago while he was seeking crowdfunding for the game. His blog and podcast is a good place to hear him talk about board game design and prototyping. Martin described the game to me and I was hooked. These were originally published online as print and play PDFs you could use online. Then the crowdfunding campaign came, which allowed a more refined designed board, pieces and packaging, and came with an expansion pack. There is also an iOS app to play as well. &lt;/p&gt;

&lt;p&gt;&lt;a href="http://chesstris.com/"&gt;Chesstris, Martin Grider's blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In Thrive each player starts with 5 plain pieces. Each turn you add some pegs to any two of your pieces. These pegs indicate new ways that your piece can jump on the next turn. If you add a peg to the right, you can use that piece to jump to the right. If you add a peg two to the front, it can now jump two spaces ahead. Add one diagonally back left and the piece can move diagonally back left. Each time you add a peg it keeps all the previous pegs, so your pieces get stronger and stronger so to speak. Or more accurately, they get more flexible. Like building a custom pawn-knight-bishop or something like that. Capture an enemy piece by landing on it. Capture enough of your opponent's pieces to get them down to one and you win. Games take about 25 minutes. The Pond Life expansion adds cards, some new gameplay variant rules, including the ability to play multiplayer. Mostly, these didn't capture my attention, and were less elegant than the original rules. &lt;/p&gt;

&lt;p&gt;Overall, while Thrive is fun, I haven't stuck with it as much as some of these other Chess-likes. When first playing the game, I loved the concept, and even the feel of the pieces, of plugging in new pegs to alter my pieces felt really good. But at the same time, there does feel like some amount of guesswork as you're learning strategy. A few games in you've got the strategy down somewhat and there's much less strategy than Chess. That's both a good thing, since it makes for a fast game, but also doesn't necessarily reward deeper play as much. Still, a recommended game, good for occasional game nights. While the game ships in a box, the fabric 'board' rolls up and the pieces slip into a bag that comes with the box, so you could make a more portable on-the-go setup, or do without the proper and print out print-and-play versions - which is what I did first to make sure I liked the game enough to want to order it. The theme of lotus flowers is lovely enough, but doesn't have a big impact on the enjoyment of the gameplay, and maybe connotes an idea of zen that isn't quite present in the gameplay.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://adamsapplegames.com/thrive/"&gt;Thrive (Adam's Apple Games)  &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://adamsapplegames.com/product/thrive-print-and-play/"&gt;Thive Print and Play (for sale)&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Hive&lt;/h2&gt;

&lt;p&gt;A Chess-like quite distinct from Chess. And there are two expansions. I have Hive Pocket, same as the original game, but smaller and comes with the expansions. The first obvious distinctions from Chess is that there is no separate board, and the pieces are hexagonal. The first few turns players add pieces to the table connected to one of their previous pieces. As you add more pieces, you are effectively building the board, and no piece is ever allowed to be on its own without touching an adjacent piece.&lt;/p&gt;

&lt;p&gt;Like chess, the pieces have distinct moves. The Queen is a bit like Chess's King. It can move one move at a time. There is the ant, which can shoot around the sides of pieces as far as it can go. The grasshopper leaps over a stack of tiles and lands on the opposite side, as long as there are no spaces between tiles, something like a jumping rook. A spider scurries along 3 spaces past other tile-pieces. The beetle moves like a queen in that it only moves along one space, but it is the only piece that can move on top of an adjacent piece, pinning it down (with its pincers?). Expansion pieces include Ladybug, Mosquito and Pillbug. For regular Hive, must buy these separately, but they come with the Pocket travel version of the game, which is the version I own. &lt;/p&gt;

&lt;p&gt;To win the game, trap your enemy's Queen by surrounding it completely, with a combination of your own and your opponent's tile pieces. Sounds easy enough, right? And games certainly are fast, usually about 15-20 minutes. Hilariously, as I searched online to confirm this time, I see the gameplay time listed drastically differently, everything from 10-20 minutes in some places to 60-75 minutes elsewhere. Gen42, makers of the game, list the time as 10+ minutes!&lt;/p&gt;

&lt;p&gt;Some similarities to chess are that there is no hidden gameplay, no randomness, and there are deeper levels of strategy available to players studying the game. But unlike chess, gameplay is much faster because you have more far-moving pieces than weak ones. It's something like if Chess had more rooks and bishops than pawns. That combined with how you build the board together each time differently means there's not as much of a chance to develop 'openings' as such, and with all pieces touching from the beginning, there's not as much time needed to 'develop' pieces like chess. For these reasons, Hive is a great board game for those seeking a Chess-like experience without some of the bogged-down parts of the traditional game. The feel of the Hive pieces are nice in the hand, and the pocket version packs up small enough to travel well. Highly recommended.&lt;/p&gt;

&lt;p&gt;&lt;a href="gemini://gemi.dev/cgi-bin/wp.cgi/view?Hive%20%28game%29"&gt;Hive (Gemipedia)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Hive_(game)"&gt;Hive (Wikipedia)&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Bosworth&lt;/h2&gt;

&lt;p&gt;Originally published in the 90s Bosworth is a 2-4 player chess variant. The board is a 6 by 6 grid, without using the 4 corner spaces. A player has 4 spaces next to them on the edge of the board, called a 'home camp.' Each player starts with 4 pawns in their home camp. At the beginning of the game, a deck of cards is shuffled and players draw 4 cards. Each time you move a piece out from your home camp you select a card from your hand to lay down to place in the empty space, then draw a new card for your hand. This is how you get your pieces onto the board and developed. If an opponent captures a piece in someone else's home camp it prevents the other player from being able to bring a new piece onto the board there, which is one particular strategy to follow. The pieces move pretty much the same as chess, with the exception of pawns, which can now move sideways too. Pieces capture like normal but there is no checkmate. Kings can instead just be captured. Kings can also capture one of their own side's pieces. When a player loses their king all of their pieces are removed from the game and the capturing opponent can add a queen to the board. Play proceeds til only one player is left standing. &lt;/p&gt;

&lt;p&gt;Gameplay is fairly fast, with games seeming to take about 30 minutes. The smaller board means that capturing comes sooner, and because of this knights, for example, appear even stronger than they are in Chess. The use of cards to determine what pieces you bring out adds just a bit of randomness to the game, which is enough to destabilize things so that one couldn't really prepare openings for example. While the cartoon chess piece cards have replaced the use of physical 3d pieces, I didn't mind as much as I thought I would, once the play got going. This would be a good game to get if you have a small group in mind to play with but didn't mind occasionally playing as a duo if you're looking for chess-like gameplay but a faster game. While the game seems designed for and plays best with 4 players, it can still be fun to play with 2 or even 3. &lt;/p&gt;

&lt;p&gt;&lt;a href="gemini://gemi.dev/cgi-bin/wp.cgi/view?Bosworth%20%28game%29"&gt;Bosworth (Gemipedia)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Bosworth_(game)"&gt;Bosworth (Wikipedia)&lt;/a&gt;&lt;/p&gt;
 
&lt;h2&gt;Hexapawn&lt;/h2&gt;

&lt;p&gt;This isn't a game so much as a puzzle or teaching/learning tool. Originally created by Martin Gardner in Scientific American in 1962, this is an exercise to understand how we can train machines to play chess. I built my own Hexapawn game following the ideas in the article when I was a child using colored beads and empty matchboxes to build a chess-playing machine.&lt;/p&gt;

&lt;p&gt;The main concept is that we have 3 pawns per color on a 3 by 3 (tic-tac-toe) grid. Players alternate turns moving a pawn forward or capturing diagonally. If a player reaches the last row or blocks their opponent from being able to move, they win.&lt;/p&gt;

&lt;p&gt;This is designed to be used solo. When you beat the 'computer' player in a game of Hexapawn you remove a bead (or cross out its last move, whatever method you've used to decide the next move), so that it can't make that move the next time it plays. This removes options from the AI's 'game tree' and quickly 'trains' the AI to become a perfect player.&lt;/p&gt;

&lt;p&gt;&lt;a href="gemini://gemi.dev/cgi-bin/wp.cgi/view?hexapawn"&gt;Hexapawn (Gemipedia)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Hexapawn"&gt;Hexapawn (Wikipedia)&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Solitaire chess&lt;/h2&gt;

&lt;p&gt;Solitaire chess is a collection of chess puzzles on a 4 by 4 grid. You pick a card showing how to set up a few pieces, put those pieces on the small grid board, then proceed to capture chess pieces until only a single one remains. Each move you are required to make a capture. Pawns do not get promoted. There is no check. If more than one piece remains, you lose. If you're ever unable to make a capture, you also lose. The challenges are given ratings from medium to hard, and there are many of them. &lt;/p&gt;

&lt;p&gt;There is an iOS app available but I bought the physical version at a thrift store several years ago. Personally, while I enjoy it as a diversion, I'd classify this more like a logic puzzle than a full-on game. I don't get the stimulation that comes from having another player surprise me. I'd say this is my least-played chess-like out of all the ones above that I own.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.thinkfun.com/products/brain-fitness-solitaire-chess/"&gt;Solitaire Chess, by Thinkfun games&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;The Duke&lt;/h2&gt;

&lt;p&gt;The Duke is a strategy game clearly influenced by Chess where you draw tiles to play. At the end of each turn you flip your tile over to reveal a new fairy piece to play on your next turn. If you land on an opponent piece you capture it. Capture your opponent's duke to win.&lt;/p&gt;

&lt;p&gt;There are over a dozen potential pieces to be played, as well as many expansions to add new pieces and rules variations. From my recollection, it has some of the flavor of Thrive with the fairy-piece and randomly popping up new pieces feel of Knightmare Chess. Unfortunantely, I've played this game only once, and and I couldn't get enough flavor from just the single playthrough. Though it seems well-loved online. I'll need to try this one again sometime.&lt;/p&gt;

&lt;h3&gt;Quick Chess and No Stress Chess&lt;/h3&gt;

&lt;p&gt;Both of these are promoted as a chess learning aid for kids. &lt;/p&gt;

&lt;p&gt;Quick Chess is played on a cut-down chess board 6x5. I played this a few times, over a decade ago, so my memory isn't that fresh. I remember it being a quick chess variant that mostly feels like the 'real game.' My memory may be rusty because in this YouTube tutorial it says the goal is to get a pawn to advance to the 6th rank, or capture all enemy pieces to win. Because this variant isn't that different from Chess, and doesn't offer that much new gameplay I would probably skip this one. No Stress Chess is played on a standard board, but in this game, you draw cards and then play a piece based on a card you play. I've never played, so I have no idea if this is fun for folks with previous chess experience. I can imagine not.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=LMy-zQaksks"&gt;How to play Quick Chess (YouTube)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=lcqApfXfzv4"&gt;How to play No Stress Chess (YouTube)&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Additional links&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.mindsports.nl/index.php/how-i-invented-games-and-why-not/chess-variants-are-easy"&gt;Chess Variants are Easy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://apps.apple.com/us/app/chesh/id989385585"&gt;Chesh, on the iOS app store, by Damian Sommer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="gemini://gemi.dev/cgi-bin/wp.cgi/view?5D+Chess+with+Multiverse+Time+Travel"&gt;5D Chess with Multiverse Time Travel (Gemipedia)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/5D_Chess_with_Multiverse_Time_Travel"&gt;5D Chess with Multiverse Time Travel (Wikipedia)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have other chess-likes you recommend, I'd love to hear. I also play a lot of other board games like Wari/Mancala, Backgammon, Senet and others, so may do more posts like this.&lt;/p&gt;

---

&lt;p&gt;You can leave a comment by emailing lettuce at the ctrl-c club domain. Please put 'comment' in the subject and specify what post you are responding to and your handle.&lt;/p&gt;

---

&lt;p&gt;I guess marad is a senet-like?&lt;/p&gt;

&lt;p&gt;&lt;a href="gemini://thrig.me/game/marad.html"&gt;Marad&lt;/a&gt;&lt;/p&gt;

-jmates

 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/chesslikes.html</guid><pubDate>Tue, 14 Mar 2023 00:00:00 GMT</pubDate></item><item><title>fzf-tui.html</title><link>https://ctrl-c.club/~lettuce/fzf-tui.html</link><description>&lt;div&gt;&lt;h1&gt;Simple Menu TUIs using fzf&lt;/h1&gt;

&lt;p&gt;2023-03-11&lt;/p&gt;

*Links can be found below post*

&lt;p&gt;If you hang around on nerdy Linux boards, tilde communities and the like for long at some point you'll see a reference to Vim, emacs, probably Neovim, i3, and what other acronyms? fzf is one I see a lot. &lt;/p&gt;

&lt;p&gt;fzf is a "command-line fuzzy finder" by junegunn, and it's well-loved for good reason.&lt;/p&gt;

&lt;blockquote&gt;It's an interactive Unix filter for command-line that can be used with any list; files, command history, processes, hostnames, bookmarks, git commits, etc.&lt;/blockquote&gt;

&lt;p&gt;It works as an executable binary as well as embedded within tmux; with key bindings in the shell in Bash, Fish, and Zsh; as a Neo/Vim plugin. It's also easy to install and is available in the package repositories for a large number of Linux distros as well as Homebrew. &lt;/p&gt;

&lt;p&gt;I have to admit I haven't used it nearly as much as many other people do. But recently while reading the community bulletin board called "iris" that is private for members of the Ctrl-C Club tilde server community I read this intriguing little comment from someone who built a tool for searching and navigating through old message threads.&lt;/p&gt;

&lt;p&gt;They said that they had been looking for a way of building TUIs (text user interfaces) for shell scripts, and at first had considered using dialog, a very old program that makes use of the Curses library. But this person then found fzf very convenient because it let them build TUIs quickly, just by piping the options into fzf and saving the reply as a variable. They said they used it as a replacement for menus, yes/no boxes, lists, checklists (when using --multi option).&lt;/p&gt;

&lt;p&gt;For the benefit of those newer to working on the command line, a Command Line Interface and Text User Interface are not the same thing. I think of the command line as the interactive text parser you interact with by giving a single line of text and hitting enter. You (usually) get text output, some text printed to the screen for example. Then you write another line, see its output, and continue refining and directing your experience this way. A TUI on the other hand is an interface 'between' the command line interface and a full-fledged graphical user interface. They may use color, characters that approximate a visual interface element (like using text lines to draw a border around a box), and the use of indicators like a pointer to show a user what has been selected. They may look like simple GUIs, but they're usually quite fast, often allow key-driven action, and they let the user stay in the Terminal without launching a new program. Examples of common TUI programs are Midnight Commander, a file manager, and Nano or Vim, text editors with light TUIs. &lt;/p&gt;

&lt;p&gt;When I previously was looking for simple ways of making a TUI I had come across Bubbletea, a Go library that makes beautiful TUI programs. I'm not interested in pursuing Go and haven't come across any other libraries with some of the advanced features built into it. But I tried several other approaches: using the dialog library, with curses, or coding in a language with curses bindings. I have also tried manually approaching the task of creating a TUI menu by using `select` and looping through to parse user input for example. Recently I also found a thread with multiple answers on ASkUbuntu.com with some of these solutions and others such as using ANSI escape codes to color text, and other Bash script approaches. No doubt this can work for some folks, but I found the idea of using fzf to easily make selectable TUI menus really intriguing.&lt;/p&gt;

&lt;p&gt;Sure enough, it was quick, fairly easy to use this system - summarized as fzf to select, output saved to a variable, which we then interpret. When using fzf you can press up or down (no vim-keys) to navigate through the menu options, or press the number of the entry number, or start typing other text in the menu item and hit enter to open it. To go "back" to the start of the menu, you delete your text. Exit out by pressing cancel, selecting Quit, or Ctrl-C. &lt;/p&gt;

&lt;p&gt;After installing fzf, try it out by running fzf in your terminal. You'll have a simple file selector. This will let you check it out.&lt;/p&gt;

&lt;h2&gt;fzf code snippets for starter TUI menus&lt;/h2&gt;

&lt;p&gt;With the previous in mind, here's my own attempts at creating some simple basic starter snippets. More advanced usage can be found in the fzf wiki and other links at the end of this post.&lt;/p&gt;

&lt;p&gt;Unless otherwise stated, these are written in fishscript for fish shell.&lt;/p&gt;

&lt;h3&gt;Minimal example: a simple yes/no dialog selector&lt;/h3&gt;

&lt;pre&gt;fish
set INPUT $(echo -e "yes \nno" | fzf)

if [ $INPUT = "yes" ] ;
  echo "yes it is" # do YES
else
  echo "no it's not" #do NO
end
&lt;/pre&gt;

&lt;p&gt;Explanation: You are printing yes and no, delimited with a newline \n, the default for fzf. This is getting piped into fzf, which renders a simple default 2 line menu, and saves the output of whichever is selected to the variable INPUT. You can then process this and perform an action, possibly with an if conditional, as demonstrated, or similar.&lt;/p&gt;

&lt;p&gt;fzf has a number of styling options available, including border options (rounded, anyone?). To be honest, I'm relatively new to fzf and am likely underutilizing and understyling it now. Check out some of the articles and example programs with fzf below to learn better ways to use it in your shell scripts to make TUI menus.&lt;/p&gt;

&lt;h3&gt;Basic menu example: A recipe browser&lt;/h3&gt;

&lt;p&gt;This is a basic script I use for accessing my recipes on my computer in a directory.&lt;/p&gt;

&lt;pre&gt;
# run this inside the recipe directory
ls | fzf --header"Use CTRL-C to cancel" --reverse --preview="cat {}"
&lt;/pre&gt;

&lt;p&gt;I list the full path to the directory and pass in all of the recipes (txt files) in that directory to fzf, specifying a header, and to list the recipes in reverse (A-Z) and using cat to print out the contents of each recipe as I navigate through the folder.&lt;/p&gt;

&lt;p&gt;Much more advanced uses of fzf to create TUI menus can be found linked below.&lt;/p&gt;

&lt;h2&gt;Links&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/junegunn/fzf"&gt;fzf (GitHub)  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/charmbracelet/bubbletea"&gt;Bubbletea TUI library for Go (GitHub)  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://tildegit.org/nodisc/iris-search"&gt;Iris-search, by nodisc (Tildegit)  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://askubuntu.com/questions/1705/how-can-i-create-a-select-menu-in-a-shell-script"&gt;How can I create a select menu in a shell script? (AskUbuntu)  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://thevaluable.dev/practical-guide-fzf-example/"&gt;A Practice Guide to fzf: Building a File Explorer  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://erfur.github.io/2021/11/20/fzf_as_dmenu.html"&gt;Using fzf as a dmenu replacement  &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/junegunn/fzf/wiki/Examples"&gt;fzf wiki with many example uses  &lt;/a&gt;&lt;/p&gt;

---

&lt;p&gt;You can leave a comment by emailing lettuce at the ctrl-c club domain. Please put 'comment' in the subject and specify what post you are responding to and your handle.&lt;/p&gt;

---

&lt;p&gt;Hello Lettuce!&lt;/p&gt;

&lt;p&gt;Just a quick message to say thank you for this post on your gemlog.  I&lt;/p&gt;
&lt;p&gt;heard about fzf a long time ago but, a bit like you, I had never found&lt;/p&gt;
&lt;p&gt;a useful function of it; well, on that suits me in my own workflow,&lt;/p&gt;
&lt;p&gt;should I say.  But your example for the recipes made me wondered.  I&lt;/p&gt;
&lt;p&gt;installed it and tried.  I found it amazing!&lt;/p&gt;

&lt;p&gt;I'm not a TUI person.  Apart from pamix(1) I don't use TUIs at all.&lt;/p&gt;
&lt;p&gt;But I have to say that I'll now use your example to browse my own&lt;/p&gt;
&lt;p&gt;recipes.  And, maybe, I could tweak it for some things else.&lt;/p&gt;

&lt;p&gt;No thank to you for digging me in fzf rabbit hole :P&lt;/p&gt;

&lt;p&gt;I wish you the best.  Take care :)&lt;/p&gt;

-f6k

&lt;p&gt;Thanks for sharing this! About a dozen years ago I built a little app using PHP, jQuery, and SQLite that runs in my&lt;/p&gt;
&lt;p&gt;web browser to track my daily expenses.  In recent years I spend less and less time in a desktop environment,&lt;/p&gt;
&lt;p&gt;working more often in the Linux console. I've wanted to migrate my app but didn't want to figure out how to use&lt;/p&gt;
&lt;p&gt;ncurses and\or dialog plus possibly PHP or nodeJS or some other scripting language to put all the pieces together.&lt;/p&gt;

&lt;p&gt;I have long had fzf installed on all my machines but had never really learned to use it, it was just a quirky little&lt;/p&gt;
&lt;p&gt;file finder and Ranger works so much better for me (largely because I took the time to learn to use it). &lt;/p&gt;

&lt;p&gt;Your post about using fzf to build a TUI was just what I needed. The very next day I built a bash + fzf + SQLite&lt;/p&gt;
&lt;p&gt;version of the app that works great on the various machines I've got laying around here. SyncThing keeps the&lt;/p&gt;
&lt;p&gt;database synced between them all and I have my data everywhere I need it -- including that I can still use the&lt;/p&gt;
&lt;p&gt;original web-based version.&lt;/p&gt;

-James Card

 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/fzf-tui.html</guid><pubDate>Sat, 11 Mar 2023 00:00:00 GMT</pubDate></item><item><title>rave-reviews.html</title><link>https://ctrl-c.club/~lettuce/rave-reviews.html</link><description>&lt;div&gt;&lt;h1&gt;Rave reviews for new Gemini utilities: NewsWaffle, Gemipedia, Stargate&lt;/h1&gt;

&lt;p&gt;2023-03-08&lt;/p&gt;

&lt;p&gt;Over the past few months I've been getting increasingly reliant on a small corner of Gemini: the utilities by Acidus available at gemi.dev&lt;/p&gt;

&lt;p&gt;&lt;a href="gemini://gemi.dev"&gt;Gemi.dev Heavy Industries&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some of them are built around the idea of proxying http content to Gemini. For example, Wikipedia via Gemini:&lt;/p&gt;

&lt;p&gt;&lt;a href="gemini://gemi.dev/cgi-bin/wp.cgi"&gt;Gemipedia &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Or reading one of hundreds (thousands?) of Newspapers, Magazines and the like via Gemini, with Newswaffle. It's not simply a dump of the html text content, but instead makes a best guess at readability, eliminating navigation, sidebars, headers, footers and other cruft. And reduces the page size and load, sometimes by 95%.&lt;/p&gt;

&lt;p&gt;&lt;a href="gemini://gemi.dev/cgi-bin/waffle.cgi"&gt;NewsWaffle&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;They also operate Chilly Weather, a great Gemini-native weather 'app'.&lt;/p&gt;

&lt;p&gt;&lt;a href="gemini://gemi.dev/cgi-bin/chilly.cgi"&gt;Chilly Weather&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And they've developed Kennedy, a new Gemini search engine; a Minesweeper clone and a geography game, as well as have a useful gem-log and some hosting services of various other blogs and comics.&lt;/p&gt;

&lt;p&gt;Through the process of making NewsWaffle they developed Stargate, which is a full HTTP-to-Gemini proxy, so you can access http sites via your Gemini client.&lt;/p&gt;

&lt;p&gt;What these tools mean for me is that I now can have the relaxing text-driven experience of my dreams, in the client of my choice, with the minimal design (or at least colors!) of my choosing. This almost luddite use of the web is how I envisioned it could be for years. It's not simply a re-invention of Lynx, w3m, links2....but really a whole cleaned up minimal 'smol' version of the wider web. &lt;/p&gt;

&lt;p&gt;I'm currently in the process of building my own toy web browser with Love2d and http/s requests and I'm finding reading their article on converting http-to-md and gmi to be quite helpful. &lt;/p&gt;

&lt;p&gt;Acidus has a short post about how Gemini is a fertile space for hacking. I hope to do some of my own experiments too.&lt;/p&gt;

&lt;p&gt;&lt;a href="gemini://gemi.dev/why-gemini.html"&gt;Gemini Space for Hacking&lt;/a&gt;&lt;/p&gt;

---

&lt;p&gt;You can leave a comment by emailing my username/log name at the ctrl-c.club domain. Please put comment and the title of the post in your email if you'd like it to be a comment and not just starting an email correspondence, and it would help if you'd list your username you'd like listed.&lt;/p&gt;

 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/rave-reviews.html</guid><pubDate>Wed, 08 Mar 2023 00:00:00 GMT</pubDate></item><item><title>search.html</title><link>https://ctrl-c.club/~lettuce/search.html</link><description>&lt;div&gt;&lt;h1&gt;Searching!&lt;/h1&gt;

&lt;p&gt;2023-02-21&lt;/p&gt;

&lt;p&gt;Note: This article covers http and gemini.&lt;/p&gt;

&lt;h3&gt;http&lt;/h3&gt;

&lt;p&gt;Up to 2000, I used a variety of search engines: AskJeeves (later, Ask.com), HotBot, Lycos, Yahoo, and others whose names I can no longer recall. I vaguely remember using Archie on dial-up text browsing, but cannot remember much about it beyond that it was used for FTP searches, and later Veronica for searching Gopher sites.&lt;/p&gt;

&lt;p&gt;I used Google regularly starting about 2000. It helped me the summer I was a fact checker for a weekly paper in Philadelphia. Over time I became more concerned with the surveillance aspects of Google products. When I learned about DuckDuckGo in 2010 or 2011 I started trying it out. For a few years, I jumped back and forth between search engines but by about 2013 or 2014 I started using DDG only.&lt;/p&gt;

&lt;p&gt;With DuckDuckGo I appreciate the bangs most of all. I can type a word then !w and instantly pull up the wikipedia page, or an old tech object and !e and instantly it searches directly on Ebay. There are countless other examples. As DuckDuckGo has grown, I'm still mostly happy with it, but it does have more of the downsides of a major browser: some searches result mostly in product results rather than articles or info that I'm looking for.&lt;/p&gt;

&lt;p&gt;To be honest, I don't see any ads on DuckDuckGo. I have a few extensions on Firefox, and I cannot remember 100% if it's uBlockOrigin (I think), but I don't have any ads.&lt;/p&gt;

&lt;p&gt;On my iPad I installed ViolonCello, an app that is text-mode only. Unfortunately, the app maker has disappeared or not updated the app, so I don't see it available for download from the App store anymore (yet another mark against Apple). And I've not found another app that works as well or quickly, so I'm continuing to use it for now but it could disappear at some point when Apple next demands developers sign in to update and sign their apps (and pay for the privilege), so it feels like I'm just marking time on that one.&lt;/p&gt;

&lt;p&gt;On Desktop, for the past year or two I've been trying a few other search engines out.&lt;/p&gt;

&lt;p&gt;In addition to the regular DuckDuckGo, it's worth knowing about the Lite version:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://lite.duckduckgo.com/lite/"&gt;Lite DuckDuckGo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lite DuckDuckGo is pretty minimally styled. Simple and to the point.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://frogfind.com"&gt;FrogFind&lt;/a&gt;&lt;/p&gt;

"The Search Engine for Vintage Computers." This search engine is actually powered by DuckDuckGo, but it filters its results through Readability or a similar filter, and stripping down the pages to simple HTML. What this means is that it's fast, doesn't need https, so it works on old computers and devices. It's also a good fit for a text online browser, as it strips out nav, sidebars, pictures, and the like. 

&lt;p&gt;&lt;a href="https://wiby.me/"&gt;Wiby&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Wiby search engine claims to be 'building a web of pages as it was in the earlier days of the internet.' What this seems to translate to is that it doesn't operate a web crawler to index pages but instead the operator of wiby adds pages to visit, and users can submit pages as well. They've also open sourced their code so you can operate your own small search engine. In practice, this is a fun search client that does feel a bit like the late 90s search. You can find useful and fun and random sites pop up, loosely related to your topic. It features a 'surprise me' search that often delights me when I find interesting sites.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://search.marginalia.nu/"&gt;Marginalia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a "D.I.Y. search engine" for non-commercial content, "hosted on a single PC in Sweden." On the home page it mentions that it's best at finding small, old and obscure sites on specific niche topics. Also has a 'random page' mode. Viktor also has extensively written about ongoing development work, among many other topics, and has a presence on Gemini as well.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.ecosia.org/"&gt;Ecosia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To be honest, I don't use this very often. It's powered by Bing. The main reason to use this is because they use their ad revenue to donate profits toward environmental causes (80% of their income). I made it the default search on my Chromium browser. Just an aside here: I learned from Grant Peterson of Rivendell bikes that if you own more than one bike, you should try to set each of them up pretty differently so they'll feel different when you ride them. Different handlebars, different saddles, pedals, etc. Most of the time I use Firefox, with DuckDuckGo. So the occasional times I open Chromium on my computer, the default search is Ecosia. Ecosia generates revenue when you click on ads. But I don't think I've ever clicked on one, so I guess that renders the point of using this search engine moot for me.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.archive.org"&gt;Internet Archive Wayback Machine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I use this all the time to find old websites and to backup sites. It's a great way to find older sites and materials. &lt;/p&gt;

&lt;h3&gt;gemini&lt;/h3&gt;

&lt;p&gt;&lt;a href="gemini://geminispace.info"&gt;Geminispace.info&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This works pretty well. It's my preferred search engine on Gemini. I use it to do topic-based searches or to find gemposts I remember reading a while ago but can't remember who wrote it.&lt;/p&gt;

&lt;p&gt;&lt;a href="gemini://medusae.space"&gt;Medusae.space&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Not a search engine! This is a directory, and the only one on this list. But I remember back to the 90s when I used to start browsing the web by navigating through directories and sub-topics, and this still feels like a valid way to navigate the gemini-verse. &lt;/p&gt;

&lt;p&gt;&lt;a href="gemini://tlgs.one/"&gt;Totally Legit Gemini Search&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is an "experimental" search engine. I don't use it as much, but occasionally. Seems like it works fairly well. &lt;/p&gt;

--- 

&lt;p&gt;Have a comment or suggestion? Email lettuce at the ctrl-c.club domain. To leave a comment, put comment in the subject line, mention which post you're responding to, and make sure to list what name you'd like listed below your comment. If you don't follow this, I'll assume you're just starting a convo via email.&lt;/p&gt;

 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/search.html</guid><pubDate>Tue, 21 Feb 2023 00:00:00 GMT</pubDate></item><item><title>urban-ride-report.html</title><link>https://ctrl-c.club/~lettuce/urban-ride-report.html</link><description>&lt;div&gt;&lt;h1&gt;Urban Mountain Bike Ride Report&lt;/h1&gt;

&lt;p&gt;2022-12-31&lt;/p&gt;

&lt;p&gt;Note: bike jargon glossary at end of this article&lt;/p&gt;

&lt;p&gt;I grew up riding bikes, living at the edge of a city and beginning of the suburbs. I was lucky to grow up near extensive woods with lots of both urban riding as well as offrode forest riding in an urban area. In college I biked with friends who were more enamored with bikes, organizing rides and silly races (and a root beer keg). They really got me excited for mountain biking, and after college I continued to ride as my main form of transportation, mostly on a singlespeed mountain bike for a few years, but later on a stable of bikes. &lt;/p&gt;

&lt;p&gt;Early in the pandemic I moved out to the suburbs for a few months and lived near a county park with extensive mountain biking trails. I didn't bring my mountain bike but my cyclocross bike. I have 36mm knobby tires on this bike, and it's set up singlespeed/fixed. After a lifetime of living in cities I really enjoyed going out on daily mountain bike rides, especially after I've been so envious of others who lived near trails in more rural and suburban areas. In my mind these people with ideal bike backyards always live in Colorado or North Carolina! &lt;/p&gt;

&lt;p&gt;I live in NYC near a large urban park, one with woods and about a mile trail but it's technically not a permitted public mountain bike trail. The known public bike trails in New York can be counted on one hand. Clue: there aren't any in Brooklyn, the borough I live in. For a long time (a year?) I had been excited to head out to Cunningham Park in Queens to do some real mountain biking. I had watched a few youtube videos, and was excited to try it out, but I wasn't sure how 'good' the trails would be. &lt;/p&gt;

&lt;p&gt;I don't own any bike with front or rear suspension and never have. I am a 'fully rigid' kind of rider. This summer, after almost two decades of admiring Rivendell bikes I purchased my own Rivendell: a Clem Smith Jr. "L", size large. This is a very unusual frame: the longest production frame of any bike manufacturer, combo of hand lugged and TIG-welded, hand painted, a mixte "step through" frame, and I had it set up with thick knobby 29" wheels and a 1x9 gearing. It also has generator lighting, which I recently had my local bike shop install. &lt;/p&gt;

&lt;figure&gt;
&lt;img src="images/clem.gif" alt='Rivendell Clem Smith Jr. "L" bike'&gt;
&lt;figcaption&gt;Rivendell Clem Smith Jr. "L" bike&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;My goal was not just an 'everything' bike but one which could be used for bikepacking, trails with some singletrack, and urban riding all in one. &lt;/p&gt;

&lt;p&gt;This kind of riding has been described under similar names and concepts and communities online. You may think of it within the spectrum of 'hybrid' bikes. You might see it called ATB (all terrain bike), xbiking (a reddit group), and Rivendell itself uses terms like "hillibike" instead of 'mountain biking' and there are other terms out there. &lt;/p&gt;

&lt;p&gt;Bikepacking is a term for (mostly) offroad extended bike tours. My bike isn't exactly one of the bikepacking-specific ones, since I don't think it makes sense to buy a $2000 bike just for camping on it a week or two each year, but it's one that can work pretty well for it.&lt;/p&gt;

&lt;figure&gt;
&lt;img src="images/lirr.gif" alt="Attempting to fit a huge bike onto the Long Island Rail Road"&gt;
&lt;figcaption&gt;Attempting to fit a huge bike onto the Long Island Rail Road&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;To get to Cunningham park required a long commute. I biked to the Long Island Railroad station in Brooklyn, found the elevator to take my bike down, paid for a ticket and rolled the bike on. My bike was slightly too big to perfecly tuck into the commuter rail train, but no matter, the conductor didn't mind. 35 minutes later we pulled into...Queen Village, which is 2 1/2 miles from the bike park, but the closest station. I had 20 minutes of first urban riding and then suburban riding. I stopped at a bagel shop and got a tuna on 'everything' bagel, with capers and onions and tomato, and a small coffee and cole slaw. This place was 'to go' only so I packed it up and biked to the trail and ate it at the trail head. At this point, it had been an hour and forty-five minutes since leaving my house. I saw a few solo riders come through. I read the 'rules' on the posted sign, studied the map and took a photo. The Cunningham trails feature a few easier loops, and some smaller intermediate and advanced trails. I started by trying the easier loops. There was a lot of mud, and only a few features, that were kind of optional since you could bike around them pretty easily on the simpler trails. It felt nice to be moving around on a bike outdoors in the winter. I had biked an unseasonably warm day to ride and didn't need to wear much of a coat or gloves. I didn't love that the forest area we were in was surrounded on all sides by heavy traffic and highways. I don't love riding in the woods with the sound of whooshing speeding cars and trucks all around me.&lt;/p&gt;

&lt;p&gt;It took me about 20 minutes to go around the main loop, and I started it again but immediately took the turn-off for the intermediate trail. Less mud, but more obstacles now, but pretty randomly placed. A trail is said to be 'flowy' if it has nice long flowing sections with only occasional features. This trail wasn't exactly flowy but it wasn't chock full of challenges either, and I only stopped to cross a section by foot or stumble up a muddy hill pushing my bike once or twice. On my second loop I saw a man on a 'one-wheel' and two young kids on small bikes. He was going the wrong direction on the trail and said his kids were not enjoying the trail and he was trying to get them out of there. I warned them of some upcoming mud banks. I was thinking maybe it's not a perfect fit trail for complete beginners, mostly because I think the uphill climbs, while not so bad, are not good for those who aren't very fit or used to climbing on a bike.&lt;/p&gt;

&lt;p&gt;I had read online that if you cross over the highway nearby the second section of the park had more challenging trails. It was true the second section was a bit more of a challenge, though maybe not signifantly so, but I didn't try every trail there. Overall, I covered most of the park in about 45 minutes or an hour, and enjoyed what I tried, though it wasn't one of my favorite mountain biking spots. To leave, I had to bike back to a train to get home. I decided to skip the commuter rail, since I'd have to time it well to make sure I got there in time and didn't miss the occasional train. I headed to the closest subway, which was quite far away, about 20 minutes of street riding, a gradual uphill some of that time. Then it was an hour and 15 minute train ride home. &lt;/p&gt;

&lt;p&gt;When I got near home, I got off the train and decided to do the loop at my local urban park, that's about a mile or two and it's not an official mountain bike course, though I don't see many other folks (walkers or whatnot) using the trail either. While being simpler and having barely any features, it was a comforting ride and most of the time I'll probably just ride there as it's so much more convenient than getting to the other park. Still, I'm glad I tried it and I'll probably go a couple times a year just to try it occasionally and see if it feels any different in the summer months, though maybe I'll go further afield to New Jersey or upstate New York on the train to find more exciting trails and bikepacking when the springtime hits.&lt;/p&gt;

&lt;h2&gt;Glossary&lt;/h2&gt;

&lt;p&gt;1X ("one by..."): Instead of the oldskool 2 or 3 front derailler gears you only have a single gear up front. So you only shift with one hand, have less gears to deal with.&lt;/p&gt;

&lt;p&gt;Bikepacking: Multi-day bike tour on trails off road where you bring your tent, food, sleeping bag, water. Bikepackers eschew the traditional 'panniers' of oldskool bike tourers because they can snag on things when riding through trees and bushes for example, and disperse weight in ways that don't work as well off-road. Instead, they hang bangs from the handlebars, seat, and top tube of the bike frame.&lt;/p&gt;

&lt;p&gt;Cyclocross: offroad racing on a kind of hybrid bike. Riders go over grass, through mud, up hills, though this isn't really considered 'mountain biking'. They don't jump over rocks and roots much. Parts of the course a rider may choose to run and hold their bike on their shoulder.&lt;/p&gt;

&lt;p&gt;Feature: an obstacle on a bike trail. Examples include a 'rock garden' collection of rocks to go over, a jump, a fallen or placed log to jump over, a puddle to cross, a rounded 'berm'.&lt;/p&gt;

&lt;p&gt;Hybrid: a now somewhat out-of-favor term for bikes in between mountain bikes and road bikes that are meant for urban riding, though may be able to pass muster on some light trails. Before his company Rivendell was born, its founder Grant Peterson ran the US base of operations for Bridgestone bikes division and one of his revered urban bikes was the XO-1, oriented around this kind of hybrid urban riding.&lt;/p&gt;

&lt;p&gt;Lugs: If you have a steel mountain bike, the metal tubes that make up the double diamond frame of a bicycle need to be connected together somehow. It's cheaper to weld them on an assembly line. It's fancier (though not necessarily stronger) to use the oldskool lug method, where little metal hand-made wraps connect the tubes together.&lt;/p&gt;

&lt;p&gt;Mixte: "Girls bike" as it's called in the US. This is a lowered 'top tube' frame, which makes it ideal for those with shorter upper body to leg length. City bikeshare programs at least in the states mostly feature this kind of bike. They make it easier for a variety of people heights to adapt to a bike, but aside from this, it's a lot easier to mount your bike, especially if you have bags or racks on the front or back. Europeans ride very practical bikes and many ride this kind of bike.&lt;/p&gt;

&lt;p&gt;MTB: Mountain Bike&lt;/p&gt;

&lt;p&gt;Rigid: A Mountain bike without front shock on the fork or suspension on the back seat-tube. Retro-grouches think/feel that steel mountain bikes (as opposed to lightweight alumnimum or titanium perhaps) flexes more and you don't need the front fork, or that those kinds of bikes are overkill and meant for racing, not 'a ride in the woods.'&lt;/p&gt;

&lt;p&gt;Singlespeed: A bike without gears. Became popular among hipster urban riders in the early aughts after bike messengers (who had been using them for years) were viewed as the ultimate cool urban warriors. Fixed is a singlespeed without a freewheel. When you pedal, the bike moves. If you stop pedaling the bike may continue to move and the pedals will turn and push your feet around or slap you in the shin if you don't pedal along with or resist it to slow down. Advantages: Singlespeed bikes are lighter than geared bikes, simpler to maintain, and provide a good exercise. Disadvantages: you have to stand up to attempt to crank up a hill, and sometimes you may have to push your bike up a hill. They can be bad on your knees if you don't have perfect form or you don't use an external brake (some people don't).&lt;/p&gt;

---

&lt;p&gt;You can leave a comment by emailing lettuce at the domain ctrl-c.club. Please put the word comment in your subject line and indicate what post you are referencing and what name you'd like listed.&lt;/p&gt;

 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/urban-ride-report.html</guid><pubDate>Sat, 31 Dec 2022 00:00:00 GMT</pubDate></item><item><title>reinventing-the-wheel.html</title><link>https://ctrl-c.club/~lettuce/reinventing-the-wheel.html</link><description>&lt;div&gt;&lt;h1&gt;Wheels I have reinvented&lt;/h1&gt;

&lt;p&gt;2022-12-08&lt;/p&gt;

&lt;p&gt;In college I played a lot of music. I was in the university orchestra a couple years, playing bassoon. I joined the improv music collective, which I played in for four years. I eventually even took electronic music history and production classes, opera (music history), ethnomusicology, and composition classes. I DJed on the college radio station as well, a program dedicated to experimental and electronic music. All this is to provide some background to attest that I'm supposedly not a totally complete idiot when it comes to music! Okay, with that said, onto my story:&lt;/p&gt;

&lt;p&gt;My sophomore year at university I was working on a sound project. I had a homemade electroacoustic instrument that I wanted to record, playing over some 'tape' aka electronic music I made on my computer. For the homemade electronic instrument, think something like the PDQ Bach instrument called the Double-reed Slide Music Stand. I think I had my bassoon mouthpiece connected to my didgeridoo or maybe my actual music stand neck, with a DIY contact mic pickup. And I had some experimental backing textures I had made on my laptop, from downloaded and homemade audio samples. Aside from this, I had a tape machine and my stereo system I had purchased used at the thrift store, an old beautiful wood Marantz receiver. And I needed to record audio from both my electronic slide music stand bassoon and my computer output simultaneously. Playing both the computer audio via my external speakers, and the crumhorn-pipe-bassoon into a small speaker at once I could record them simultaneously from the mini microphone input on my tape machine but the audio quality would be horrible. In 2022 I would probably just do it and consider the added texture part of the intended ambience. But in 2001 that kind of lo-fidelity sound was not necessarily my intention. My roommate, bandmate and all-around fellow nerd Doug was in class. So I was on my own to figure this out. I thought for a little bit but then quickly had an idea and I gathered my needed supplies. Soon I was humming along. The DIY contact mic on my slide-stand-bassoon was plugged into the left side input of the Marantz stereo receiver. With my laptop I plugged a stereo cable, converted to a RCA, only connecting one side to the right side of stereo receiver input. With this crappy dual low-volume input I pumped up the gain significantly on the stereo, using its warm analog amplifier capabilities. The stereo output, with the two instruments mixed to separate left and right channels, was atrociously combined through connecting them to my mono input cassette recorder option. So while I didn't have a stereo recording, I did at least have two channels of audio with both instrumens in them and was able to record my musical masterpiece.&lt;/p&gt;

&lt;figure&gt;
&lt;img src="images/music-stand.gif" alt="double slide reed music stand"&gt;
&lt;figcaption&gt;double slide reed music stand&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;When Doug came home several hours later I was elated to show him my creation, with its combination of a gang of cables and converters and using all of the electronic instruments and players I had at hand. He immediately looked at it, dubiously, started laughing and said "Congratulations, you've invented the mixer." The strange thing was: he was right. For the entire time I had worked with this setup (maybe an hour or two) I had forgotten that an audio "mixer" was indeed a thing, probably because I hadn't actually used one before. All I knew was that I needed to combine audio wet-on-wet on top of each other, and I figured out a solution with what I had on hand to make it so. It wasn't until the following years I took experimental electronic audio production classes taught by an oldksool electronic music composer (from the 70s! we had an old Buchla 100 in the music lab). While Doug thought what I had done was trivial and silly, I was proud of myself for my ingenuity, even if I wouldn't really use that system again.&lt;/p&gt;

&lt;p&gt;Since that time I've continued to make music, art, and other creative output, sometimes with my DIY make-it-work hat on, and other times using my university training. &lt;/p&gt;

&lt;p&gt;And now I'm a programmer as well. With the abundance of open source software out there, and with the rise of mega software repositories like NPM and GitHub it might sound crazy to reinvent the wheel. But at least in the online circle of artist-hackers I'm in, this kind of behavior in encouraged: learning, puzzle-solving, using minimal resources, and building what you need. In fact, you may do this as well. On Gemini, everyone and their grandmother has made a Gemini server or client. I've even cobbled my own toy client together based on ncap and thought about extending it. &lt;/p&gt;

&lt;p&gt;What are some other wheels I've reinvented?&lt;/p&gt;

&lt;p&gt;Calendar: Right now I'm in the process of dogfooding my own calendar software that I've been using a half year so far. I use it fulltime everyday for both my calendar software and TODO lists, but it's mostly controlled with the CLI, has demo web views, and still has over a dozen features I need to implement. I started building it because I was so reliant on using the CLI software gcalcli, which implements Google calendar in the command line but controls one's web calendar. Gcalcli had some unfixable annoying deployment bug when Google changed some API (as far as I remember), and I really had wanted to get off Google completely all along. When looking for an alternative I didn't take to the ones I found like NextCloud's calendar or the Calcurse CLI program and I thought I could build something better! Or at least crappier and to my own needs. Timetable is working well for me so far, and when it gets to a level that others may be able to use it too, I'll be sure to share it.&lt;/p&gt;

&lt;p&gt;Read-Later Software: For years I used Pocket, but I was unhappy with it. I didn't like its suggestions, had some problems with having to sign in all the time on different devices, and some other annoyances. I considered Wallabag but it didn't look like the solution for me. Sure, maybe I could have built a wrapper around one of these, but instead I built my own. A CLI program that easily downloads a website or article, routes it through the Mozilla Reabability view and converts to an output form like epub, markdown, etc. I've made a number of add-on software like a suite, including using it to download entire reams of articles saved on the Internet Archive's wayback machine, then converting them to readability view and saving them on my machine as an internal library. Hey, maybe I should combine this with my toy gemini client to make my own alternative browser.&lt;/p&gt;

&lt;p&gt;Diary: I keep a daily log using my own simple diary software that I wrote. Again, CLI only (notice a theme here?), easily written and saved and added to a private file on my laptop. &lt;/p&gt;

&lt;p&gt;Backup: This program performs a weekly service to copy the contents of any new files to an external drive. It's largely using rsync with some additional juice.&lt;/p&gt;

&lt;p&gt;Scratchpad: There are so many drawing programs available. Why make yet another one? I wanted one that would launch instantly from (Neo)vim and save inline in my wiki, yet also work on the web. So I wrote it using p5.js to access the JavaScript canvas API and a Vim Language launch command and key binding.&lt;/p&gt;

&lt;p&gt;Gemtext -&amp;gt; Http converter and blog updater: The gemtext converter I finished a long time ago and use regularly. Currently I'm working on updating some add-on software that would automatically update my external http blog mirror as well (which you may be reading this text on).&lt;/p&gt;

&lt;p&gt;LOGO: This language is decades old, somewhat out of date and out of fashion. And I wrote my own implementation using Javascript and the p5.js library, just for fun! To see if I could, and to see what I would learn. And to make art using it. It was fun. I don't use it much anymore, but it was a good learning experience and I'd probably try it again.&lt;/p&gt;

&lt;p&gt;In truth, these 'new wheels' are more like the Unix philosophy of litte tools we already know. I am writing in shell or Lua or JavaScript, using system programs, and perhaps one or two additional programs like pandoc for some added functionality. Maybe most of what we are doing, like artists working in the studio, is constantly telling ourselves we are reinventing the wheel while we stumble upon new solutions and use knowledge and tools gleaned elsewhere as well. Sometimes ignorance is best: letting us test ourselves and build what we need, possibly with a minimum of resources and a lot of gumption. I don't regret the hours of my life I've spent reinventing the wheel. I think it makes for a pretty enjoyable time.&lt;/p&gt;

---

&lt;p&gt;You can leave a comment by emailing lettuce at ctrl-c.club domain indicating what post you're replying to and what handle you'd like listed next to your comment. &lt;/p&gt;

 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/reinventing-the-wheel.html</guid><pubDate>Thu, 08 Dec 2022 00:00:00 GMT</pubDate></item><item><title>void-post-install.html</title><link>https://ctrl-c.club/~lettuce/void-post-install.html</link><description>&lt;div&gt;&lt;h1&gt;Void Linux Post-Install and 1 month later notes&lt;/h1&gt;

&lt;p&gt;2022-12-02&lt;/p&gt;

&lt;p&gt;update 2023-09-21: This is all still fine. I still love Void. And I ended up using this info to install Void on my other XPS 13 laptop too, and later on my Raspberry Pi 1B for a test I wrote about for the old computer challenge. I removed a section about xdeb I had included previously, since this is not recommended by Void as it could bork some software. Instead, I've added flatpak and occasionally build some software from source, and the few times I couldn't I simply asked for help on the Void subreddit and someone helped me or packaged the software in the Void repo for me. The only other addition to what I've written below is that I had to remove the default ```xf86-video-intel``` package so that Xorg uses the default modesetting package instead. I'll add that info to the end of this post.&lt;/p&gt;

&lt;p&gt;Previously: &lt;/p&gt;

&lt;p&gt;&lt;a href="void.html"&gt;Choosing Void Linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="installing-void.html"&gt;Notes on installing Void Linux&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I've now been using Void for a bit over a month. I really enjoy it and want to convert my last Ubuntu computer to Void. I'm going to wait another few weeks, just to confirm stability, and then make the full switch, but mostly I think it'll just be fine. But Void isn't a simple works-out-of-the-box install, so this is a document of my own work in order to be able to reproduce it. &lt;/p&gt;

&lt;p&gt;Below are my notes and a collection of useful snippets. To be honest, I don't feel confident this is a 'final' level of configuration. Maybe a first step. For example, I didn't try to set up a printer, bluetooth, and the like, and I want to try some machine learning work to later on with the machine. At the end of this post I'll link to some info on others' more extensive post-install scripts and guides.&lt;/p&gt;

&lt;p&gt;In general, I like Void because it's fast, minimal, and gets out of your way. If I need more functionality or programs, I can install it within seconds usually. I've found almost all my usual packages are available via Void's main and non-free repositories. For the occasional program that's not, I've been able to install dependencies and install and compile downloaded programs to run, or just run the provided binary, or use xdeb to repackage debian packages for void.&lt;/p&gt;

&lt;p&gt;All that said, I've had the occasional bug pop up. Occasionally, I'll turn on my computer and the wifi isn't working. Has happened maybe 3 times. In those cases I had to restart and things then worked fine. No idea why. Currently, setting up the clock to sync correctly must be done manually. Setting up audio must be done manually. That seems bizarre to me and everyone else I've seen review Void, except for the Void maintainers who always push back saying that they need to maintain a balance between minimalism and bloated or preconfigured software. Fair enough, I hear that, I just can't understand the lack of fully working sound or clock. Having said that, this point was made in a friendly manner, as a difference of opinion. I think these two things just working would make this a friendlier distro to those trying it out, but in the scheme of things I figured it out.&lt;/p&gt;

&lt;p&gt;By the way, anytime I've had a bug I couldn't quite solve I found that posting to the voidlinux subreddit would quickly get responses from the community or the Void developer team. I'm not a reddit user other than this, so was annoyed I had to sign up but in general in every case the community has been able to quickly help me solve the problem and I've found they are mostly very friendly and responsive. They want to encourage more people to find success with the distro.&lt;/p&gt;

&lt;h3&gt;vpm&lt;/h3&gt;

&lt;p&gt;I wrote about this in a previous post. Through a combo of laziness, simplification and 'who cares' I've decided not to memorize the random-seeming xbps programs and flags and instead just use the intuitive vpm program which is a wrapper around xbps package manager programs.&lt;/p&gt;

&lt;pre&gt;
sudo xbps-install -S vpm
&lt;/pre&gt;

&lt;p&gt;Thereafter installing something is as simple as &lt;/p&gt;

&lt;pre&gt;
sudo vpm install package
&lt;/pre&gt;

&lt;p&gt;Occasionally I'll run autoremove to clean out old package dependencies off my hard drive from packages I may have removed.&lt;/p&gt;

&lt;pre&gt;
sudo vpm autoremove
&lt;/pre&gt;

&lt;p&gt;In the commands below, feel free to modify vpm to xbps-install if you desire.&lt;/p&gt;

&lt;h3&gt;Installing a gui file viewer&lt;/h3&gt;

&lt;p&gt;Void does not come with default file manager beyond the command line. Many folks recommend and use Thunar but I like the Gnome file manager/viewer much better than thunar. It's styled simpler, less visual clutter. Its old name was Nautilus and they're in the process of renaming it to just "Files" I believe, but the install name is nautilus. If you use dmenu to launch programs, you'll launch it with the word nautilus. If you use ulancher (which is the launcher i've installed), then it can be found via typing Files in the ulauncher search.&lt;/p&gt;

&lt;pre&gt;
sudo vpm install nautilus
&lt;/pre&gt;

&lt;p&gt;If you have previous experience or want to try thunar, you can install that. For CLI file managers I use nnn, fff and lf occasionally.&lt;/p&gt;

&lt;h3&gt;Installing a Volume mixer&lt;/h3&gt;

&lt;p&gt;Many folks have complained about how audio is not setup automatically in Void. I agree, it's a little annoying. I explained in a previous post how I got audio working on Void. With the below command I can add audio to the system tray, but there still isn't a volume mixer in the status bar. Instead it just opens up pulse audio and I can manually set the volume in the settings. Setting alsa in the runit services does a minor thing: maintains volume level across system restarts.&lt;/p&gt;

&lt;pre&gt;
sudo vpm install pavucontrol xfce4-pulseaudio-plugin
sudo ln -s /etc/sv/alsa /var/service
&lt;/pre&gt;

&lt;p&gt;Reboot after. Note if you are using alsa without pulseaudio then you need to install alsa-utils and volumeicon instead.&lt;/p&gt;

&lt;p&gt;Launch from dmenu with pavucontrol or in ulauncher it's called Pulse Audio Volume Controller.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.reddit.com/r/voidlinux/comments/yf2vn3/audio_problemnoob_question/"&gt;Audio problems for noobs (Reddit)&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;How to sync time on Void.&lt;/h3&gt;

&lt;p&gt;I think this is a weird one. To be honest, I don't understand why the clock isn't set to 'just work' on Void correctly, though potentially this is a recent issue for Void as I don't see many questions about it in the past. Basically, randomly I would turn on my computer and the clock wasn't correct, either off by several hours, or an hour ahead, so I needed to sync the clock manually. The hardware clock varies by computer but is usually set as UTC. In software you need to specify your timezone, which is an offset from this hardware clock. You can do this with a symlink or by manually setting the TIMEZONE="America/New_York" or your locale in the rc.conf. But then you also need to use NTP to set proper time. I read that NTP is buggy and there were alternatives, so following a brief tutorial on Reddit I installed chrony and ended up using that. At least so far, this has worked well for me.&lt;/p&gt;

&lt;pre&gt;
sudo vpm install chrony
sudo ln -s /etc/sv/chronyd /var/service
&lt;/pre&gt;
 
&lt;p&gt;&lt;a href="https://old.reddit.com/r/voidlinux/comments/z691x6/tutorial_how_to_sync_the_time_on_void_linux/"&gt;Tutorial: How to sync the time on Void Linux (Reddit)&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Alternative to dmenu for launching programs: ulauncher&lt;/h3&gt;

&lt;p&gt;I'm using i3 window manager which includes dmenu application launcher in its default. Dmenu is minimal and can be configured by adding patches and recompiling. I didn't want to mess with that. I prefer 'good defaults' in lots of my software, which is why I use fish shell instead of Bash for example. After using Regolith Linux, an i3-based distribution on Ubuntu with gorgeous defaults, I was spoiled by the beautiful app launcher ilia, which itself is inspired by rofi. I tried rofi. I thought it was okay but didn't want to configure it. I then came across ulauncher. I found it worked really well with great defaults out of the box. I type Ctrl-Space and ulauncher opens and I start typing the name of a program and it opens. I still have dmenu installed simultaneously (Mod+D) but I haven't been using it.&lt;/p&gt;

&lt;pre&gt;
sudo vpm install ulauncher
&lt;/pre&gt;

&lt;p&gt;After installing ulauncher I had to add it to my i3 config to start on boot.&lt;/p&gt;

&lt;pre&gt;
# ~/.config/i3/config
exec --no-startup-id ulauncher
&lt;/pre&gt;

&lt;p&gt;There is a minor bug that after login the ulauncher prompt opens and I have to hit escape. I couldn't figure out a way to get it to launch in the background and close on i3, but I gave up as 'it's good enough.' This is an i3-related issue I believe.&lt;/p&gt;

&lt;p&gt;There are a few i3 window manager tweaks I like to add to my i3 config file, but that isn't specific to Void, so I won't post about that here. The key things I set in i3 are setting a workspace background image, setting Dvorak keyboard, remapping Caps Lock to Escape, having volume up and volume down buttons.&lt;/p&gt;

&lt;h3&gt;Links to others' post-install setups&lt;/h3&gt;

&lt;p&gt;As mentioned, I think my post-install tweaks may just be a first step. There are many other Void Linux post-install suggestions and scripts online. Below I'll link to a  couple that I think are worth perusing:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gist.github.com/bastomiadi/abf27618341fc561735adfb17e586916"&gt;bastomiadi's post-installation notes (github gist)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/CTZxVULKAN/dots/wiki/3.-Void-Linux-Post-Install"&gt;CTZxVULKAN's post-installation notes (github)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any other Void tips or tutorials you recommend checking out, I'd be open to hearing that.&lt;/p&gt;

&lt;h3&gt;Update 2023-09-21&lt;/h3&gt;

&lt;p&gt;I had an issue develop where my screen would occasionally glitch even though my system continued to work normally. For example, music would continue to play and websites would still be running but there'd be a visual artifact glitch and the mouse would freeze. Based on a reddit post on Voidlinux I ended up removing the xf86-video-intel library and then telling the system to ignore updates to this package going forward.&lt;/p&gt;

&lt;p&gt;You do this by adding the following line in /etc/xbps.d/local.conf&lt;/p&gt;

&lt;pre&gt;
ignorepkg=xf86-video-intel
&lt;/pre&gt;

&lt;p&gt;And that's it. One year on, Void is still my favorite distro and I've had no real issues. It's a 'boring' distro that lets me use it exactly how I want and runs the same on my ultra-fast Alienware desktop, my XPS13 laptop, and my 10-year old Raspberry Pi 1B.&lt;/p&gt;

---

&lt;p&gt;To leave a comment email lettuce at the current domain and put comment in the subject line and the name of the post you're referencing. Be sure to list the name you'd like listed publicly as well.&lt;/p&gt;


 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/void-post-install.html</guid><pubDate>Sat, 03 Dec 2022 00:00:00 GMT</pubDate></item><item><title>linux-loaner-laptop.html</title><link>https://ctrl-c.club/~lettuce/linux-loaner-laptop.html</link><description>&lt;div&gt;&lt;h1&gt;A Linux laptop on Chromebook for my student&lt;/h1&gt;

&lt;p&gt;2022-11-08&lt;/p&gt;

&lt;p&gt;Recently one of my students came up to me and talked to me about the difficulty she is having accessing a computer with Processing, which we use in the class I'm teaching. She doesn't have her own computer and she told me she didn't qualify for a school loaner laptop. &lt;/p&gt;

&lt;p&gt;If I found a cheap or free laptop that could be a potential solution. I told her I would look for a laptop and try to locate one within a week. I have a few old Raspberry Pi's around, but that wasn't the right fit. I asked friends for suggestions, and I received a suggestion to look in local thrift stores for old Chromebooks. Unfortunately, that's not really a viable option in NYC. There are few thrift stores around, and those that do generally do not sell electronics, much less old Chromebooks.&lt;/p&gt;

&lt;p&gt;But Craigslist is thriving here, and I saw a variety of cheap Chromebooks for sale. Would they be powerful enough to run Processing? I looked online. It looked like it was very possible if I could boot into a Debian-based distro, but it was not definitive. There were some listed options for using a chroot to run Ubuntu, but it appeared slow and everything was years old. I wasn't sure the current state. I also saw a variety of difficult options for installing Ubuntu (or another *buntu on top of ChromeOS). &lt;/p&gt;

&lt;p&gt;How hard could it be? I was particularly interested in showing my student how easy it is to install Linux and how easy it is to use. Ideally it should only take 20 minutes to make a USB drive iso and then boot from that drive and install a light Ubuntu variant, right? &lt;/p&gt;

&lt;p&gt;With a little searching I wasn't filled with confidence as it was immediately clear you can't just flash an ISO to a USB, launch an installer and call it a day. No. For this reason, I decided to install it myself in case I got stuck for hours or days in the process.&lt;/p&gt;

&lt;p&gt;Here's my convoluted process.&lt;/p&gt;

&lt;h2&gt;Acquire laptop&lt;/h2&gt;

&lt;p&gt;I write an email at 11pm to an ad on Craigslist listing a Chromebook for $50. The person responds several minutes later. We agree to meet Monday at 9am at the main train station next to the clock tower. Things are looking up. Monday morning rolls around. He's running a few minutes late but that's okay. I find him and he tells me the battery is dead but he just erased the computer. I make a split second judgement to trust him. I have 3 twenties. I could go buy a coffee I guess though I don't really drink coffee. No matter, he takes $40. Great! In a second he's gone. I jump on a subway to go home.&lt;/p&gt;

&lt;h2&gt;Things that need to happen&lt;/h2&gt;

&lt;p&gt;I read 30+ websites and fora trying to come up with a plan. It looks like years ago it was pretty easy to flash Ubuntu and there were many options. Now Google has really locked down the computer. The main approach is to:&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;Turn on insecure legacy boot&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;Update firmware&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;Other stuff&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;Profit?&lt;/li&gt;&lt;/ul&gt;

&lt;h2&gt;Steps&lt;/h2&gt;

&lt;p&gt;Start up the Chromebook and connect to WIFI.&lt;/p&gt;

&lt;p&gt;I have a Samsung Chromebook 3 which comes withe Braswell firmware. When I looked it up, I read it must be updated.&lt;/p&gt;

&lt;h2&gt;Failure to turn off write protection &lt;/h2&gt;

&lt;p&gt;I need to open the back of the computer up to remove a hidden screw in a complicated position that could majorly mess things up if I screw up. The screw is responsible for ensuring Write Protection of the firmware. But I need to turn this off if I want to install a new firmware and new OS on top of the old, or so I believe. I have one mini screwdriver but I need two different sizes and so I can't take the back off. Am I dead in the water?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://maxwyb.github.io/linux/2016/11/05/chromebook-write-protection.html"&gt;Screws on the back of the Chromebook 3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I rack my brain and decide I will try to run Linux off an external drive and see if that's viable.&lt;/p&gt;

&lt;h2&gt;Turn off secureboot So we can boot off a USB&lt;/h2&gt;

&lt;p&gt;Procedure:&lt;/p&gt;

&lt;p&gt;1. Enable developer mode&lt;/p&gt;
&lt;p&gt;2. Turn off verified boot&lt;/p&gt;
&lt;p&gt;3. Enable dev usb boot&lt;/p&gt;

&lt;p&gt;Details:&lt;/p&gt;

&lt;h3&gt;Boot into recovery mode&lt;/h3&gt;

&lt;p&gt;Press Escape + Refresh key (3 buttons to the right of escape) + Power button. Let go of power and it'll start up in Recovery Mode.&lt;/p&gt;

&lt;p&gt;When it starts up it tells me to insert a USB. Nah, not yet. Press Ctrl-D to turn off verified boot. Wait 10 seconds and when prompted I press enter. It'll reboot and asks me to hit enter again to confirm. I make sure it says OS Verification is OFF. Press Ctrl-D again. It begins reflashing my drive and booting into developer mode. It takes about 5 minutes.&lt;/p&gt;

&lt;h3&gt;Enable Dev usb boot&lt;/h3&gt;

&lt;p&gt;Eventually it starts back up and I see the traditional welcome screen on ChromeOS. I skipped signing in and clicked Sign in as Guest in the bottom left so I don't need to make a Google account. &lt;/p&gt;

&lt;p&gt;When I finally get into the desktop environment I open the Terminal with Ctrl-Alt-T. &lt;/p&gt;

&lt;p&gt;I type shell and enter to get a Linux command line.&lt;/p&gt;

&lt;p&gt;I switch to bash with root privileges to make changes to booting by typing sudo bash and hitting enter.&lt;/p&gt;

&lt;p&gt;I get the typical warning about sudo 'with great power comes great responsibility' mumbo jumbo. I type enable_dev_usb_boot and enter. A success message appears.&lt;/p&gt;

&lt;h3&gt;Set up dev boot legacy&lt;/h3&gt;

&lt;p&gt;I open the terminal with Ctrl-Alt-F2 (right arrow). I login to 'chronos'. No password. I type sudo crossystem dev_boot_legacy=1 and then my prompt. First weird thing occurs. The prompt tells me instead to try dev_boot_altfw instead. Hmm. I run sudo crossystem dev_boot_altfw=1 and get no error so maybe this is alternative firmware and it worked?&lt;/p&gt;

&lt;h3&gt;Update firmware&lt;/h3&gt;

&lt;p&gt;I'm on a Samsung Chromebook 3 which runs Intel Braswell, so I saw it needed its firmware updated. I ran the update firmware automation script from mrchromebook.tech.&lt;/p&gt;

&lt;pre&gt;
cd; curl -LO mrchromebox.tech/firmware-util.sh
sudo install -Dt /usr/local/bin -m 755 firmware-util.sh
sudo firmware-util.sh
&lt;/pre&gt;

&lt;p&gt;This brings up a menu.&lt;/p&gt;

&lt;p&gt;I tried to select 2 Install/Update UEFI Firmware but I couldn't because WriteProtect was enabled since I wasn't able to take off the back of the machine to remove a screw. But I could do 1) and update the current Legacy BIOS firmware.&lt;/p&gt;

&lt;h2&gt;Make a flash drive iso&lt;/h2&gt;

&lt;p&gt;I downloaded a GalliumOS iso even though it's not maintained anymore. I had been thinking I'd download Lubuntu but against my better judgement I decided to try Gallium since it was built specifically for Chromebook. I used Balena Etcher to write the iso to USB.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://galliumos.org/"&gt;GalliumOS (not maintained)&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Start up with your USB drive loaded with linux&lt;/h3&gt;

&lt;p&gt;Once written to disk, I plugged in the USB drive to the Chromebook and start up in recovery mode by pressing Escape + Refresh + Power to start up. &lt;/p&gt;

&lt;p&gt;Press Ctrl-U to start from the USB. Or was it Ctrl-L?&lt;/p&gt;

&lt;p&gt;It starts up and I run the installer, which is self-explanatory like picking keyboard, city and the like. It takes just a few minutes. I shut down and remove the USB installer. Fingers crossed....&lt;/p&gt;

&lt;h2&gt;Startup&lt;/h2&gt;

&lt;figure&gt;
&lt;img src="images/chromebook.gif" alt="Chromebook booting GalliumOS, displaying Processing, dithered image "&gt;
&lt;figcaption&gt;Chromebook booting GalliumOS, displaying Processing, dithered image &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;It works! Even despite not turning off WriteProtect? Hmm. Not sure. But I'll go with it since it's working.&lt;/p&gt;
 
&lt;p&gt;Each time the computer is turned on we need to run Ctrl-L to escape the regular startup process and boot into Gallium.&lt;/p&gt;

&lt;p&gt;Once it's started, I have a really nice looking desktop and the machine (despite being pretty low power) is fast! I opened up the terminal and sudo apt updated and sudo apt upgraded. Then I tried out the package manager App Grid Software Center and installed LibreOffice, Solitaire, Tetris and some other software for my student. There was already a variety of basic apps for playing music, displaying images, file manager, etc. I visited the Processing website and downloaded the latest version, 4.0.1 and downloaded it. I used tar to uncompress and then ran the bash installer file. This installed Processing to the desktop and placed its icon in the launcher menu under Development. I wrote a basic Processing Hello World program, tested it ran, and saved it.&lt;/p&gt;

&lt;p&gt;Lastly, I downloaded a picture of my college and set it as the desktop background. &lt;/p&gt;

&lt;p&gt;I'm excited to introduce this machine to my student. And to see what she does with it. I hope it will be useful for her classes, browsing the web, doing homework and practicing coding in Processing. If I get any feedback from her, I'll report back further.&lt;/p&gt;


&lt;p&gt;&lt;a href="./index.html"&gt;Back to index&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Resources&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://mrchromebox.tech/#fwscript"&gt;mrchromebox.tech site and firmware flashing utilities script&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://chromeready.com/7065/boot-from-a-bootable-usb-drive-on-chromebook/"&gt;Instructions on making your chromebook be able to load a distro off a USB&lt;/a&gt;&lt;/p&gt;


---

&lt;p&gt;Leave a comment by emailing lettuce at the current domain and putting comment and the title of this post in the subject. You can also mention what name you'd like listed.&lt;/p&gt;

 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/linux-loaner-laptop.html</guid><pubDate>Tue, 08 Nov 2022 00:00:00 GMT</pubDate></item><item><title>mastodon.html</title><link>https://ctrl-c.club/~lettuce/mastodon.html</link><description>&lt;div&gt;&lt;h1&gt;Welcome to Mastodon&lt;/h1&gt;

&lt;p&gt;2022-11-04&lt;/p&gt;

&lt;p&gt;A big welcome to folks that are just joining Mastodon.&lt;/p&gt;

&lt;p&gt;I have been on Mastodon about 2 years I think and I really love it. Although I have a twitter account I may have only logged in 5 times in the past year or so, and that's just to check my messages, which I could have set to automatically send to my email. &lt;/p&gt;

&lt;p&gt;Why do I love Mastodon? There's no ads. There's no celebrities. There's no constant news churn. There's no 'algorithm,' just a chronological list of toots. I also really like that I've found all these little communities of interest based on topics. I can have real conversations and meet folks from around the world with my interests. On Twitter it used to feel like this occasionally but more often it felt like people constantly 'reacting'. People don't tend to do that on Mastodon, at least in my friend group. It's more like they give update on their life and projects, ask questions, get feedback. It's like a non-shitty slack or twitter. I also like I can use my choice of clients, from graphical to web to command line (try tut or toot tui ). I can turn off 'retoots' so that means I only see when people post their own content, not others. While it's still addictive social media, I can run out of content to see, and that's a good thing, so I'm not checking it constantly. &lt;/p&gt;

&lt;p&gt;A couple recommendations for folks new to Mastodon:&lt;/p&gt;

&lt;p&gt;1. Fill out your profile and add a photo/image asap! Include links to another home of yours on the internet, such as your music, website, etc. Many folks don't like to be followed by anonymous accounts.&lt;/p&gt;
&lt;p&gt;2. Create a post introducing yourself and maybe add the #introduction tag, and then pin it to the top of your profile.&lt;/p&gt;
&lt;p&gt;3. When you post media like photos or videos, add an alt text description. This is done in your mastodon client software or website.&lt;/p&gt;
&lt;p&gt;4. If you joined one of the smaller server of peers, great! Click on "Local" to see what folks from your server are posting. It's a good way to "meet" lots of folks right away and get a feel for the community.&lt;/p&gt;
&lt;p&gt;5. More so than on birdsite, folks here tend to like to give Content Warnings (also known as "CW") for certain topics. You'll see examples of this modeled and learn how to do it. It's a great idea to follow this.&lt;/p&gt;
&lt;p&gt;6. Support your server(s) financially if you can. Hosting infrastructure does cost money.&lt;/p&gt;

&lt;p&gt;I'm sure I'm leaving out other important stuff. &lt;/p&gt;

&lt;p&gt;&lt;a href="./index.html"&gt;Back to index&lt;/a&gt;&lt;/p&gt;

---

&lt;p&gt;If you'd like to leave a comment, email lettuce at the current domain, put comment in the subject line and which post you're responding to. List any name/handle you'd like listed.&lt;/p&gt;

 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/mastodon.html</guid><pubDate>Fri, 04 Nov 2022 00:00:00 GMT</pubDate></item><item><title>applying.html</title><link>https://ctrl-c.club/~lettuce/applying.html</link><description>&lt;div&gt;&lt;h1&gt;Organizing applying to grants, conferences, calls, etc&lt;/h1&gt;

&lt;p&gt;2022-11-04&lt;/p&gt;

&lt;p&gt;I apply to a number of grants, Call for Artists, Requests for Proposals, proposals for conference talks, and more. I usually apply to about half a dozen or so a month, though sometimes many more. &lt;/p&gt;

&lt;p&gt;When I was first applying to things a few years ago I met with a friend who showed me how she did it. She used a google spreadsheet. I copied some parts of her system and then built my own system that I've been using for years now. It's simple and works for me. Feel free to use any of this info, which is pretty basic, in case it works for you.&lt;/p&gt;

&lt;p&gt;This post is completely on my organizational system and not at all on the content of what I choose to write/apply with. I may do a post on that at some point, but it's not found here.&lt;/p&gt;


&lt;h2&gt;Organization system&lt;/h2&gt;

&lt;h3&gt;A single Opportunities.md file&lt;/h3&gt;

&lt;p&gt;I use a single plaintext (markdown) file that lists Upcoming deadlines, followed by a section called Applied, followed by a section called Missed. If I apply to something, I move the line from Upcoming to Applied. If I missed one I move it to Missed. I don't look at Missed very often at all if ever. I check Applied after I get email responses to things letting me know whether I got a grant or not. For example, I sometimes apply to 100 things a year and might not hear back from an application for months or up to a year, so it helps me to go back and see "what was that again?" This is a very simple system because I need it simple and foolproof.&lt;/p&gt;

&lt;p&gt;Note that below I'm leaving out the info on the individual things I'm applying to. After, I'll show you what that looks like.&lt;/p&gt;

&lt;pre&gt;
# Opportunities.md

## Upcoming Deadlines
* xxxx
* xxxx
* etc ..

## Applied
* xxxx
* xxxx

## Missed
* xxxx
* xxxx
&lt;/pre&gt;

&lt;p&gt;Above I showed you the basic organization of my document. Here's what a single application line will look like for me, in Markdown.&lt;/p&gt;

&lt;pre&gt;
* [ ] Name of organization and/or grant/funding/conference - [more info](https://link-to-info.com) - Deadline date, time, timezone - quick note on what I'm thinking I will propose
&lt;/pre&gt;

&lt;p&gt;For those on a device that makes it hard to scroll, I'll break it down:&lt;/p&gt;

&lt;pre&gt;
* [ ] - text here
&lt;/pre&gt;

&lt;p&gt;This is a list item with a checkbox when converted to markdown in some specs. I click the checkbox by filling it with a X instead of a space when complete. I then move it down to the "Applied" section in my text file. For those things I don't end up applying for because I didn't have a good idea or I missed it, I move the line to the "Missed" section. &lt;/p&gt;

&lt;p&gt;After the checkbox I list the organization and conference name, then a link to where the info and application is located online, followed by the deadline day, time, timezone. Sometimes I add a quick few words on what I think I may apply with, which could be a specific project I have in mind. Other times I don't know and leave this blank for now.&lt;/p&gt;

&lt;p&gt;Now, I'll describe how I organize the "work" of applying to each opportunity.&lt;/p&gt;

&lt;h3&gt;A series of folders with my apps&lt;/h3&gt;

&lt;p&gt;This section is where I do the writing and saving of my files relating to these applications.&lt;/p&gt;

&lt;pre&gt;

Opportunities&amp;gt;
            Year&amp;gt;
	         Opportunity-Name&amp;gt;
		         individual-file1.txt
		         individual-file2.jpg
			 ..etc..
&lt;/pre&gt;

&lt;p&gt;I have a directory called Opportunities. In that I have directories for each year. Inside each year directory I have a separate directory for each opportunity I end up applying to. Usually I copy files from a previous application I've done and duplicate it into this new opportunity's folder. Then I open it up and end up editing this application to more appropriately respond to the call. Often these opprtunities I'm applying for use a Google form or similar. So I copy the questions (followed by listing the character/word count) to a text file, then I write and edit in the text file. This is helpful because I can check my word count or character count and keep editing til I get it right. I also don't have to worry about what happens if the website crashes and I've been doing my editing inside the form. &lt;/p&gt;

&lt;p&gt;For artist calls I usually have to submit a portfolio of images, or links to a portfolio somewhere on the internet. For academic conferences I usually have to submit a CV, either my full professional CV or else a 1 page CV, or sometimes a 3 page CV. Other times they ask for a bio, an artist statement, or something else. Always I start by using previous text I've written, then modifying it for character count, or to tailor its content to that specific call.&lt;/p&gt;

&lt;p&gt;Here's a little more detail on how the directories are organized:&lt;/p&gt;

&lt;pre&gt;
Opportunities &amp;gt;
              2022 &amp;gt;
	           Electronic-People-conf&amp;gt;
		                        app.txt
		                        one-page-CV.pdf
		   Smalltown-Public-Art-Call&amp;gt;
		                        app.txt
					full-CV.odf
					portfolio&amp;gt;
					   list_of_files.txt
					   lastname_firstname_01.jpg
					   lastname_firstname_02.jpg
					   lastname_firstname_03.jpg
	 	   Some-exhibit-open-call&amp;gt;
		                        app.txt
					CV
	      2021 &amp;gt;
	      2020 &amp;gt;
	      ..etc...
&lt;/pre&gt;

&lt;h2&gt;Deadlines and Timezones!&lt;/h2&gt;

&lt;p&gt;I live on the east coast of the US, and many of the things I'm applying to have deadlines of midnight on the last day of a month at midnight EST. For example, I had several grants due on midnight on halloween this week. Other grants are due at midnight on the 1st of the month. Organizations or conferences on the west coast of the US have deadlines perhaps at midnight PST, which is 3am here. Organizations or universities in Europe could be one of several different times. Some organizations, particularly government institutional ones specify deadlines of 5pm in their timezone. &lt;/p&gt;

&lt;p&gt;If you apply to everything way in advance, you can ignore this. Unfortunately, that's not me. I'm sometimes working on an app on the last day and hours it's due. For this reason I always have to be careful I check the timezone, then translate that to my timezone so I know exactly when an app deadline is dropdead due. Unfortunately, with daylight savings and similar phenomenon this causes confusion, especially as the US may or may not switch following Daylight savings, some states ignore it, some parts of Europe follow a different daylight savings switch date, etc.&lt;/p&gt;

&lt;p&gt;Because of this many particularly European opportunities list UTC time. But...my favorite timezone is Anywhere on Earth (AoE)! I've only ever seen this specified on one opportunity I've applied for, G-d bless it.&lt;/p&gt;

&lt;blockquote&gt;Anywhere on Earth (AoE) is a calendar designation which indicates that a period expires when the date passes everywhere on Earth. It is a practice to help specify easy to understand deadlines such as "March 16, 2004, End of Day, Anywhere on Earth (AoE)" without requiring timezone calculations or Daylight saving time adjustments.&lt;/blockquote&gt;

&lt;p&gt;Anyway, that's my organization system. Hopefully it's useful for you. Best of luck on your projects!&lt;/p&gt;

&lt;p&gt;&lt;a href="./index.html"&gt;Back to index&lt;/a&gt;&lt;/p&gt;

---

&lt;p&gt;To leave a comment, please email lettuce at the current domain. Put Comment in the subject line and indicate what you're responding to and any name/handle you'd like listed.&lt;/p&gt;

 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/applying.html</guid><pubDate>Fri, 04 Nov 2022 00:00:00 GMT</pubDate></item><item><title>installing-void.html</title><link>https://ctrl-c.club/~lettuce/installing-void.html</link><description>&lt;div&gt;&lt;h1&gt;Notes on Installing Void Linux&lt;/h1&gt;

&lt;p&gt;2022-10-28&lt;/p&gt;

&lt;p&gt;This is part 2 on selecting, installing and running Void Linux. This is definitely only reading for a particular niche audience. You have been warned.&lt;/p&gt;

&lt;p&gt;Part 1 contains info on my own entry and background in Linux and how I ended up getting to Void.&lt;/p&gt;

&lt;p&gt;&lt;a href="./void.html"&gt;Choosing Void Linux&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this tutorial, I'll go through my install of Void on physical hardware. There are a number of other Void Linux install tutorials on YouTube and as articles. I linked to the one I found most useful below. I add my own notes here not to duplicate others' efforts but to document my own particular niche install needs since this info is not available in a single place elsewhere.&lt;/p&gt;

&lt;p&gt;My bare minimum goals for this Void installation:&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;Dvorak keyboard, no qwerty&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;simplest hard drive partitioning possible since this is new for me&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;i3 window manager (plus dmenu, which comes with it)&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;fish shell&lt;/li&gt;&lt;/ul&gt;

&lt;h3&gt;Documentation I referenced&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://docs.voidlinux.org/installation/live-images/guide.html"&gt;Void Linux official install guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.troubleshooters.com/linux/void/quickinst.htm"&gt;Quick and Reliable Void Linux Installation &lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;High level install process explained&lt;/h3&gt;

&lt;p&gt;Here's the main idea when installing Void Linux: You download an iso file. You have several official (and unofficial) options that come packaged with or without a window manager. You download this to a disk, real or virtual, then start up the machine running it instead of your previous OS. This launches you into the most minimalist of minimal systems, running Void Linux off that disk. Then you run void-installer in the command line as root to walk through the steps to write your new Void system onto your hard drive, virtual or physical depending on whether you're doing this in virtual machine or on actual physical hardware. &lt;/p&gt;

&lt;p&gt;The install system is a text user interface program that has you run through various basic tasks. There are a few bugs of note unfortunately in this process. In any case, you choose your language (which takes no effect, a bug!), timezone, etc and then choose how to partition your hard drive, and where to mount the file system (sounds harder than it is). If all goes well, you 'burn' this to disk, reboot your computer, pull out the USB (or DVD) install disk, and cross your fingers until your new Void system boots up. When it boots up you have an extremely minimal environment and you need to configure it by updating the system, choosing your preferred keyboard, downloading needed software, terminal, fonts, shell, etc.&lt;/p&gt;

&lt;p&gt;That's the main overview.&lt;/p&gt;

&lt;h3&gt;The tricky bits&lt;/h3&gt;

&lt;p&gt;Doing one of these 'minimal' installs has a few parts that felt intimidating to me previously, which is why I had never tried it before:&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;did I have BIOS or UEFI?&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;Lots of partitioning questions: how do I partition the drive? and how many gigabytes and what kind of partitions do I need? This was all pre-chosen for me when installing Ubuntu previously or even debian on a raspbprry pi.&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;will I be able to get sound to work? (lots of people point out that it does not come preconfigured)&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;Well this is just to say: I figured this stuff out. It's not too bad. I made some mistakes. But nothing was permanently messed up. And I learned a lot and know how to do this now.&lt;/p&gt;

&lt;h3&gt;The actual steps to install&lt;/h3&gt;

&lt;p&gt;I knew I wanted i3 window manager and glibc (the mainstream C library, so more software is immediately available). The Void maintainers have many different varieties of Void packaged for download, but not one with i3. I decided to download an unofficial build of Void linux with i3 instead of doing a base minimal install and adding i3 myself afterwards.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://voidbuilds.xyz"&gt;Void Builds&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After downloading the voidlinux iso with i3 and glibc I unzipped it. I used balena-etcher software to select the iso I downloaded and write it to a USB. While that was running I started up the computer I was going to install Void on. I pressed F2 (differs on various computers) and selected BIOS setup. I made sure legacy boot was on instead of UEFI. I turned secureboot off. There are many other options available but these were the things I needed to set up.&lt;/p&gt;

&lt;p&gt;Next I took the USB with the Void iso written to it. I plugged it into my computer waiting to receive it. I rebooted and pressed F12 (differs by computer) and selected to boot from the USB, using 'legacy' BIOS not UEFI. Within a few seconds Void's logo flashes and Void starts up, running off the usb. Since I chose an i3 version the i3 setup wizard appears. I press down to select Alt as my mod key. There's nothing to see after this. In i3 we launch the terminal with Alt + Enter. I'm a dvorak keyboard user and don't have any keyboard setup qwerty and can't touch-type qwerty, so I needed to switch from the default qwerty. In the terminal I typed: ```setxkbmap dvorak```. This will temporarily switch to Dvorak for this session only. With that out of the way it's time to run the installer.&lt;/p&gt;

&lt;p&gt;Void's installer is a Curses-based (text) TUI program. You go step by step down a menu of text dialog boxes, making choices. I won't go through all of these in detail because I think the choices are relatively obvious. For example, first you pick your keyboard, then you pick your timezone/locale, your country, etc.&lt;/p&gt;

&lt;p&gt;For more excruciatingly detailed step by step directions use the Void handbook or the tutorial I linked to above.&lt;/p&gt;

&lt;p&gt;Type void-installer to launch it. The first setting is keyboard. I opened it and chose ANSI-Dvorak but as previously mentioned it takes no effect whatsoever. &lt;/p&gt;

&lt;p&gt;I keep running down the installer, doing each step top to bottom. The second menu item is the network. It will launch a terminal program to test your network. If you're plugged into ethernet it will confirm the network is configured properly. If you need wifi, oh no, let's set it up. Like above, we need to switch to a Terminal and configure wifi. Mod + Enter launches another terminal, type ```nmcli dev wifi connect "your network name" password "your wifi password"```. Then it should confirm, or else try again. Exit that terminal by typing exit or quitting with Ctrl-Shift-Q (in i3).&lt;/p&gt;

&lt;p&gt;Go back to the installer menu. Confirm your network internet is working. After selecting locale and timezone, you also choose source. I did local disk install. I created a root password, then a new user and password for my username. When it asks me to pick a group membership I hit enter to accept the defaults (such as wheel, audio, etc). &lt;/p&gt;

&lt;p&gt;The areas I had the most questions around were the bootloader and how to partition my computer. For bootloader, select the hard drive you're installing to (hint: it's not the USB drive that's stuck in). You can say yes to wanting a graphic terminal for GRUB.&lt;/p&gt;

&lt;p&gt;Now we get to partitioning. This messed me up before I understood what I was doing. Now that I understand it, it's not bad at all. But this part is confusing in the installer as the installer shows old partition stats if you had a partitioned disk previously not a new hard drive. So instead of using it (since it shows the old info), I actually switch to a different workspace again and launch another terminal. Launch ```cfdisk -z``` to open the cfdisk program with no assumed previous partitioning. For BIOS, choose dos. We'll make two partitions. Step by step:&lt;/p&gt;

&lt;p&gt;1. Make a new partition. This will be my "swap." For this first partition I typed in a size of 18G (aka 8GB) since my alienware has 12GB ram and the recommended amount from the Void installer tutorial for this size is 1.5 times the amount of RAM you have. &lt;/p&gt;
&lt;p&gt;2. Then I selected to make this primary. &lt;/p&gt;
&lt;p&gt;3. I changed its type to Linux Swap (82 in the list). &lt;/p&gt;
&lt;p&gt;4. Press down and choose new partition again for the second (and final partition). I allowed it to use all remaining GB of the drive, the default for its size. &lt;/p&gt;
&lt;p&gt;5. I chose to make this partition primary as well.&lt;/p&gt;
&lt;p&gt;6. Change its type to Linux (83). Now highlight this second partition (press down if you need to, to get to /dev/sda2, and select to make it bootable. A little star * appears in the bootable column. &lt;/p&gt;
&lt;p&gt;7. Finally, select write to write this to disk and then select to quit.&lt;/p&gt;
&lt;p&gt;8. Now we switch back to the installer. If you were in another workspace you can choose Mod + 1 to move back. In the installer select filesystems. Highlight /dev/sda1 our swap, select SWAP, press OK and enter to format it. &lt;/p&gt;
&lt;p&gt;9. Then move down and highlight /dev/sda2 our main drive and select ext4 for its type and OK and press enter. Tell the program to mount it at / (the root). Confirm "yes" you want to write. Navigate to "back" to exit this area.&lt;/p&gt;
&lt;p&gt;10. Choose install and wait a few minutes. This took less than 3 minutes on my system but it could take perhaps up to 10 minutes depending on the speed of your hardware. When done choose **back** to exit and then in a terminal type ```poweroff```.&lt;/p&gt;
&lt;p&gt;11. Yank out the USB. Cross your fingers. Turn the computer back on and hopefully your new Void system turns on. You'll be greeted by the login screen (which is in qwerty again, oy vay, last time). Type your password in qwerty just this one time and hit enter. You'll be greeted by the i3 config wizard again so press down to select alt key for mod if that's your choice. And now you're in your new void system.&lt;/p&gt;

&lt;h2&gt;Immediately after install&lt;/h2&gt;

&lt;p&gt;After install I launched my new system.&lt;/p&gt;

&lt;p&gt;One last time launch the terminal with mod+return and run the following command to switch to Dvorak for this session. We'll make it permanent in a moment.&lt;/p&gt;

&lt;pre&gt;shell
setxkbmap dvorak
&lt;/pre&gt;

&lt;p&gt;Okay, let's make it permanent. When I was confused why setting ANSI-Dvorak hadn't changed anything, I posted a question about it on the Voidlinux reddit and got some immediate anwers. One person told me to create a file dvorak.conf and put it inside /etc/X11/xorg.conf.d/ I had to create the directory first and then I launched vim and saved this file.&lt;/p&gt;

&lt;pre&gt;
Section "InputClass"
Identifier "Keyboard"
Option "XxbLayout" "us"
Option "XkbModel" "pc105"
Option "XkbVariant" "dvorak"
EndSection
&lt;/pre&gt;

&lt;p&gt;Then I updated the system packages:&lt;/p&gt;

&lt;pre&gt;
sudo xbps-install -Su
&lt;/pre&gt;

&lt;p&gt;I ran this twice to make sure I had updated xbps-install and then all the packages I had in the base unoffical i3 install system (which I believe are built nightly). To be safe, you can run this command a few times!&lt;/p&gt;

&lt;p&gt;Next I added the non-free repos so I have access to that software as well:&lt;/p&gt;

&lt;pre&gt;
sudo xbps-install void-repo-nonfree void-repo-multilib-nonfree
&lt;/pre&gt;

&lt;p&gt;As mentioned, xbps is the package manager on Void. It's a series of multiple programs for install, querying, removing, etc, each with their own minor differences. I wanted a single easier-to-type command since I kept mistyping xbps and then having to look up update, install, search flags, etc.&lt;/p&gt;

&lt;pre&gt;
sudo xbps-install vpm
&lt;/pre&gt;

&lt;p&gt;I installed an alternative wrapper around the package manager that simplifies commands for noobs. It's called vpm, seemingly standing for 'void package manager'. Like everything else on Void, it takes a split second to install. It's really noticeable how much faster Void is than Debian's apt repositories and package manager for example.&lt;/p&gt;

&lt;p&gt;The vpm commands are:&lt;/p&gt;

&lt;pre&gt;
vpm update
vpm install package-name
vpm remove package-name
vpm search package-name
vpm list
vpm cleanup
&lt;/pre&gt;

&lt;p&gt;There are more commands than this but these are what I use most of the time. vpm will always show you the underlying xbps alias command that it's running and then the output. So it's possible I may commit the original xbps commands to memory and switch back at some point from using vpm.&lt;/p&gt;

&lt;p&gt;You prepend vpm commands with sudo. Or switch for this session with ```sudo su```. &lt;/p&gt;

&lt;p&gt;Here's some of the starter programs I installed, keeping in mind that alsa, git and a bunch of other programs were pre-installed in my unofficial build. This is in alphabetical order. You may need to scroll:&lt;/p&gt;

&lt;pre&gt;
vpm install terminology busybox cool-retro-term cowsay ffmpeg fff feh fish-shell firefox gnome-screenshot lua luarocks mplayer neofetch neovim nnn pyradio sox vlc w3m w3m-img tldr pandoc
&lt;/pre&gt;

&lt;p&gt;If I'm not mistaken, qutebrowser came pre-installed, along with git, python, qt, and many other useful programs. If you don't want anything preinstalled, use a minimal install iso. I'm already noticing some advantages over my Ubuntu install with fff, nnn, and pyradio being available since I had to build them from source on Ubuntu, and firefox was a simple install away versus Ubuntu that forces it packaged as a snap build even though you download from the apt repository, requiring a hack workaround to prevent the crappy snap build from re-installing. An aside: the snap build of Firefox is slow to launch (over 10 seconds), and when saving from snap it defaults to a generic downloads folder and has to be reset every time, requiring a number of mouse clicks. Decisions like this from the Ubuntu team are yet another reason why I appreciate the sane minimal consistent defaults made by the Void dev team.&lt;/p&gt;

&lt;p&gt;My next step after initial setup was to download my dotfiles from github. I pulled my i3 config down and used that. I specified the terminology terminal instead of the default terminal xterm for example. I also pulled down a folder of images and had the feh program set my desktop background image.&lt;/p&gt;

&lt;p&gt;Lastly, I changed my default shell from the default dash to fish. Since I had installed fish now I had to run:&lt;/p&gt;

&lt;pre&gt;
chsh -s $(which fish)
&lt;/pre&gt;

&lt;p&gt;The next time I restart the computer that would be the default shell.&lt;/p&gt;

&lt;p&gt;Though I was on Void rather than Ubuntu the consistency of i3 meant the launching of programs worked pretty much the same as my Ubuntu laptop with i3 (running Regolith, which prepackages good i3 defaults on Ubuntu). &lt;/p&gt;

&lt;p&gt;Beyond the difference of xbps versus apt, a lot of things just felt about the same as my typical Ubuntu with i3 experience so far, and that's good. Despite the change from an LTS distro to rolling release, a different init system, and package manager the most immediate thing I notice was how blazing fast the system is both installing and launching programs, and for some of the additional and more recent packages I was able to find in void that were missing from the Ubuntu repos. &lt;/p&gt;

&lt;p&gt;That speed and the variety of software available in the void repos, plus the ability to use xbps-source to package my own programs and the welcoming void community means it feels like a good system to try for a while. I'll continue to use this for a while and possibly post an update if I have more to share.&lt;/p&gt;

&lt;p&gt;&lt;a href="./void.html"&gt;Previously: Choosing Void Linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="./index.html"&gt;Back to index&lt;/a&gt;&lt;/p&gt;

---

&lt;p&gt;You can leave a comment by emailing lettuce at the current domain. Put comment in the subject line and list what name you'd like posted with your comment.&lt;/p&gt;

 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/installing-void.html</guid><pubDate>Fri, 28 Oct 2022 00:00:00 GMT</pubDate></item><item><title>void.html</title><link>https://ctrl-c.club/~lettuce/void.html</link><description>&lt;div&gt;&lt;h1&gt;Choosing Void Linux&lt;/h1&gt;

&lt;p&gt;2022-10-27&lt;/p&gt;

&lt;p&gt;What follows is like one of those food articles you find on the internet when you're trying just to find a simple apple pie recipe but instead you find a 20 minute article about someone's grandmother's special childhood apple pie and lots of unnecessary detail. Feel free to skip down to the parts that seem relevant to you, if any :)&lt;/p&gt;

&lt;h3&gt;Linux Background&lt;/h3&gt;

&lt;p&gt;My family bought a computer when I was in middle school and I used Mac computers for almost 2 decades. My intro to Linux came when I learned about the One Laptop Per Child computer project. This was the era of TED talks and such, and I got excited, and purchased one during their 'give one get one' campaign. These came out a few years after I graduated from college. Before actually trying one I was excited by the mission, and by the hardware itself. The OLPC XO-1 computers run SugarOS. In some ways it was a fun start to experimenting with tinkering on a computer. For example, I loved playing with Squeak (like Scratch), a smalltalk environment, I believe. I think this may have been when I first tried out the command line and did a short Python tutorial at the Machine Project DIY space in LA. But despite the computer's charm, the rubber OLPC keyboard broke quickly. Sugar didn't work super well for me. I couldn't get much use out of the computer with the software that was on it. It felt limited for making music or art.  I tried out other Window Managers (Fluxbox) and even flashed Ubuntu on it. The computer's clock battery died. With my limited knowledge I lost interest and passed the computer on to someone else. &lt;/p&gt;

&lt;p&gt;After this, I continued to mostly be a Mac user. But after I went back to grad school I saw various websites about Linux that piqued my interest again. Mac was no longer an underdog but a big corporate tool. I was interested in a free and more DIY system. I found some old computers in the trash at school, pulled them out and installed the Arch derivative Antergos OS. I ran it for about a year as a second computer to my Mac. I had issues with borking stuff when running updates occasionally. And the nail in the coffin was when they stopped supporting 32bit systems since that's what my system was. Over time I started using the command line on my Mac, and finding myself in the terminal a lot of the time. One of my professors gave me a copy of Neal Stephenson's "In the Beginning Was the Command Line" and I enjoyed it a ton. Around this time I realized I was spending most of my time either in a web browser or in the command line but I felt limited with the brew package manager on Mac. I was also getting more and more frustrated with the Mac ecosystem as a whole, so when I moved and got a job teaching I ditched the Mac entirely and switched fulltime to Linux. At school I got a Dell and first dual-booted Windows and Ubuntu on it but then switched to Ubuntu with Regolith (an Ubuntu with i3 desktop spin that I've written about previously).&lt;/p&gt;

&lt;p&gt;I ran Debian on my Raspberry Pi's, but I never tried Debian unstable or testing repos previously. Earlier this year was announced Ubuntu Rolling Rhino, which is kind of a hack on top of Ubuntu to get these unstable rolling builds. But I've seen no longterm reports, so despite my interest, it seemed like I'd rather choose something that had more of a track record and community online if I get stuck. &lt;/p&gt;

&lt;p&gt;As I spent more time working on Linux I began to understand better how distros differ. I found myself gravitating to certain preferences which included a large package repository. I also had certain interests in various kinds of computing minimalism, and over time became interested in trying out a distro that didn't use SystemD for its init system. I couldn't wrap my head around how Systemd worked, and I was interested in trying an init system that seemed more in keeping with the small interoperating Linux program philosophy. &lt;/p&gt;

&lt;p&gt;I considered Devuan, the Systemd-less Debian distro, but while Debian was very functional for me, it lacked a certain fun factor for me, and I didn't know how well the testing repos would work for me. Alpine Linux I run virtualized on my iPad and iPhone, without a GUI. It's certainly interesting, using MUSL and Busybox, and OpenRC. But the repos are small, and the emphasis of the distro on stability and security feels more suited to servers than my own interest in desktop use.&lt;/p&gt;

&lt;p&gt;I skipped Arch-derived Systemd-less distros like Artix just because I've already had an Arch experience. While I loved that any and all software was available in the aur community repos, things didn't always work for me and took numerous tinkering around when I used the Arch-derived distro previously. I'm sure with several more years of Linux experience now under my belt I could likely get things going a bit better, but I didn't necessarily feel a draw to 'the Arch way,' and the message boards and community around the distro don't particularly pull me in.&lt;/p&gt;

&lt;p&gt;I also read reviews of Guix and Nix. These are rolling release and built around a package manager that makes it easier to reproduce your build systems and roll back upgrades if something breaks. But the reviews I read of both of these made it seem like they were fiddly and could use more refinement. I also read you can install nix as a secondary package manager on a Linux system, as a (better) alternative to snap or flatpack, so I could always install this on top of another distro if I so chose.&lt;/p&gt;

&lt;h3&gt;Getting to Void&lt;/h3&gt;

&lt;p&gt;So that left Void, a distro I've long been interested in but was wary it wouldn't work for me. In fact, I'd tried installing it a year or so previous and had some success on my Raspberry Pi but I just tried running it off a prebuilt Rasberry Pi iso, which is no longer offered. Other smart people I know online have also have struggled with it, and even reading reviews on DistroWatch and listening to various Linux podcasts I've heard others run into issues. But many (though not all) folks who struggled at first and then eventually got it running said their experience after the install was great. So I thought I'd see if I could get it running. (Short answer: yes)&lt;/p&gt;

&lt;p&gt;Here's what interested me in Void Linux:&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;rolling-release packages but fairly stable nonetheless&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;not having to build software from source every time (this ruled out Gentoo and Kiss Linux for example)&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;a non-Systemd init system&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;'minimal' defaults with ability to customize&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;Void stuck out to me due to some of its unique choices (custom package manager), its smaller but seemingly fairly active and what I hope is a (mostly) polite community, and the choice to use the simple runit init system. I was interested in trying out xbps. I believe this unique package manager came first, and then the rest of the parts of Void were built around it. I lurked on the subreddit for Void (as well as Kiss Linux when I was comparing) for a few months, reading and watching reviews, and I read through install tutorials and documentation.&lt;/p&gt;

&lt;p&gt;The official Void downloads include base installs, and versions with various desktop environments prepackaged. But they don't have an i3 version, my preferred window manager, so I used a premade iso that I downloaded from voidbuilds.xyz with i3 instead of just the base. In addition to basic i3 packages it comes with a variety of other basic packages including nano, wget, git, qutebrowser, gnome-keyring, adwaita icons, alsa/pulseaudio, xterm, flatpak, pipewire, midnight commander, i3blocks, basic fonts, xrandr and some grub settings, among a few other things. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://voidbuilds.xyz/package_lists/i3-x64.packages.txt"&gt;Voidbuilds i3 package list&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The main idea is that you do pretty much everything exactly the same as a regular install, but this will have i3 pre-installed (and a number of other programs) so you won't need to install it, and you'll just update them with the regular updating process after install.&lt;/p&gt;

&lt;p&gt;In the next post I'll go step by step (mostly) through the install process.&lt;/p&gt;

&lt;p&gt;&lt;a href="./installing-void.html"&gt;Next: Notes on Installing Void Linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="./index.html"&gt;back to index&lt;/a&gt;&lt;/p&gt;

---

&lt;p&gt;To leave a comment send an email to lettuce at the current domain. You should put comment in the subject line, the name of the post and specify what name you'd like listed for your comment.&lt;/p&gt;

 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/void.html</guid><pubDate>Thu, 27 Oct 2022 00:00:00 GMT</pubDate></item><item><title>magick.html</title><link>https://ctrl-c.club/~lettuce/magick.html</link><description>&lt;div&gt;&lt;h1&gt;Basic photo editing recipes for the command line&lt;/h1&gt;

&lt;p&gt;2022-09-06&lt;/p&gt;

&lt;p&gt;When I started using Linux systems I was initially attracted to the free cost, its lineage of open source software, and the challenge and adventure of using new tools. I still like those things. But more and more I've come to realize that those feel closer to personal preferences than clear advantages. Sure, free is nice, but open source software is often maligned as kludgy - awkward interfaces, for example, or tools that don't quite work without fine tuning your system settings. To be fair, that does occasionally trip me up.&lt;/p&gt;

&lt;p&gt;But one of the huge advantages of Linux that I've learned over time is the composability of commands in the command line. With a few terse words you can coax out powerful tools rather than the amount of time searching in GUI software. And more importantly, you can by its very CLI nature automate repetitive tasks, even complex ones. &lt;/p&gt;

&lt;p&gt;For years now I've done the majority of my photo prepping and editing with ImageMagick in the command line.&lt;/p&gt;

&lt;blockquote&gt;Use ImageMagickÂ® to create, edit, compose, or convert digital images. It can read and write images in a variety of formats (over 200) including PNG, JPEG, GIF, WebP, HEIC, SVG, PDF, DPX, EXR and TIFF. ImageMagick can resize, flip, mirror, rotate, distort, shear and transform images, adjust image colors, apply various special effects, or draw text, lines, polygons, ellipses and BÃ©zier curves.&lt;/blockquote&gt;

&lt;p&gt;What follows are some of the recipes I use for individual and mass editing photos.&lt;/p&gt;

&lt;h3&gt;Basic image conversion&lt;/h3&gt;

&lt;pre&gt;
convert input.jpg output.png
&lt;/pre&gt;

&lt;h3&gt;Convert and resize&lt;/h3&gt;

&lt;pre&gt;
convert input.jpg -resize 30% output.png

&lt;/pre&gt;

&lt;h3&gt;Convert bulk images without making new files&lt;/h3&gt;

&lt;p&gt;This will take all images in the folder, resize them to 800x600, then convert them to png files&lt;/p&gt;

&lt;pre&gt;
mogrify convert -resize 800x600 -format jpg *.png
&lt;/pre&gt;

&lt;h3&gt;Dither&lt;/h3&gt;

&lt;figure&gt;
&lt;img src="images/imagemagick.gif" alt="ImageMagick logo dithered"&gt;
&lt;figcaption&gt;ImageMagick logo dithered&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;There are many dithering options available but here's a simple one I tend to use - it dithers and converts to grayscale.&lt;/p&gt;

&lt;pre&gt;
convert input.jpg -resize 800x600 -colorspace gray -ordered-dither 8x8 output.gif
&lt;/pre&gt;

&lt;h3&gt;Remove white background, convert images to png files&lt;/h3&gt;

&lt;p&gt;Bash script that loops through all png files in a folder, removing the white so there is a transparent background, and re-numbering all image files.&lt;/p&gt;

&lt;pre&gt;
cnt=1
for file in *.png
do
    convert $file -fuzz 20% -transparent white ${cnt}.png
    cnt=$(( $cnt + 1 ))
done
&lt;/pre&gt;

&lt;h2&gt;Links&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://imagemagick.org/Usage/"&gt;Example ImageMagick usage&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.fmwconcepts.com/imagemagick/lomography/index.php"&gt;Fred's ImageMagick Scripts give hundreds of examples. Check out the lomography-effect script.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="./index.html"&gt;Back to index&lt;/a&gt;&lt;/p&gt;

---

&lt;p&gt;Leave a public comment by emailing lettuce at the current domain and putting comment in your subject. Please let me know what name you'd like to be listed.&lt;/p&gt;

 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/magick.html</guid><pubDate>Tue, 06 Sep 2022 00:00:00 GMT</pubDate></item><item><title>trash.html</title><link>https://ctrl-c.club/~lettuce/trash.html</link><description>&lt;div&gt;&lt;h1&gt;Trash rules everything around me&lt;/h1&gt;

&lt;p&gt;2022-08-7&lt;/p&gt;

&lt;figure&gt;
&lt;img src="images/dumpster.gif" alt="dithered grayscale image of a digital dumpster in a virtual scene"&gt;
&lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;In my last post I wrote about finding a 13-yr old not functional windows laptop and throwing Lubuntu on there and having a 'new' to me snappy computer. In this post I'm writing about re-using 'trash.'&lt;/p&gt;

&lt;blockquote&gt;The dumpster is a generative space for both discarding past images or objects and finding new ones, and new works can be constructed using this detritus.&lt;/blockquote&gt;

&lt;p&gt;This is a sentence pulled from a description of an online artspace I built for fellow artists and members of my art collective. I haven't really seen online trash space built into networked spaces or communities previously, but it's so fundamental to the way I work that it seemed like a necessary thing to include when I build online community: a shared space for discard and re-use of materials.&lt;/p&gt;

&lt;p&gt;Right now I'm (IRL) in northern europe with my collective, visiting a museum to do a series of projects. We've been here before and are fairly familiar with the town we're in. One of our favorite places to go is the Reuse Center which is open noon to 1700 a few days a week. We get chairs, dolls, balls, wood, bottles, old electronics, wheels, platforms....these are just off the top of my head.&lt;/p&gt;

&lt;p&gt;In my home city of NYC there is a space called Materials for the Arts. It's a large multi-story warehouse operated by the city that collects discarded items from city agencies. From my experience it's mostly art teachers that visit to get supplies to use. But the members of my collective (officially a non-profit) usually send 1 or 2 folks a month to go to gather materials for our upcoming exhibits. Things we've gotten there in the past: bucket paint, canvas, old violins, a hot dog vending cart, sandwich board signs, stereos and speakers, phone cases, nails, wood panelling....this is only a small sampling from my memory. &lt;/p&gt;

&lt;p&gt;I'd say the vast majority of exhibits we've presented featured at least some materials from these spaces, used to build out artworks, the physical gallery infrastructure, for use in performances, and more. In addition, as we move around the city we'll text when we find good usable items on the street discarded, or in dumpsters. At least part of the food we've shared at our space has been good quality discarded from dumpsters: bagels, juices near their offical expiration, loaves of bread, prepared sandwiches...&lt;/p&gt;

&lt;p&gt;It's already obvious to my readers that re-using capitalist excess helps reduce new consumption. A lesser but still valid benefit is that when you use primarily discarded or waste materials it helps provide a useful constraint around your activities, 'artwork', or other projects, or serves as a starting point for deciding what you'll make next, either as a meal (if it's food), or as artwork or for performances, if it's materials.&lt;/p&gt;

&lt;p&gt;The main useable tools for collecting materials for re-use: a large bag, friends to help you move huge things, a bike or other transport, gloves for handling wood or other materials, some previous experience working with materials so you can brainstorm new ones when you see raw materials. It's important to leave behind materials that you don't have a vision for re-use. It doesn't make sense to just move trash along that will need to be dealt with elsewhere. In my city there are Buy Nothing groups, "Curb alerts" people post on Craigslist, and even explicit "FREE, works" -type hand-made signs that people tape to things left on the street.&lt;/p&gt;

&lt;p&gt;Some cities have these kinds of re-use centers, 'free' areas of choice materials recoverd at the dump, and some cities (SF's Recology Center, Philly's Recycled Artist in Residency) even have explicitly artist-run recycling programs.&lt;/p&gt;

&lt;p&gt;&lt;a href="./index.html"&gt;Back to index&lt;/a&gt;&lt;/p&gt;

---

&lt;p&gt;To leave a comment email lettuce at the current domain.&lt;/p&gt;

 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/trash.html</guid><pubDate>Sun, 07 Aug 2022 00:00:00 GMT</pubDate></item><item><title>impressions-of-ubuntu.html</title><link>https://ctrl-c.club/~lettuce/impressions-of-ubuntu.html</link><description>&lt;div&gt;&lt;h1&gt;Short impressions of Lubuntu and Regolith Linux&lt;/h1&gt;

&lt;p&gt;2022-08-05&lt;/p&gt;

&lt;p&gt;Summary: I like them.&lt;/p&gt;

&lt;p&gt;Longer reports follow:&lt;/p&gt;

&lt;h2&gt;RegolithOS&lt;/h2&gt;

&lt;p&gt;I have been using Ubuntu on my laptop for the past 4 years. At first for window managers I had Unity, then Gnome 3. Later I became interested in a tiling window manager. I tried a few out but settled on i3 after some time figuring out how to configure it for Dvorak. Like someone's Vim dotfiles, it's easy to get stuck in a continuous never-complete reconfiguring of one's setup. I added the ability to change volume, change brightness, jump to different workscreen setups, etc etc. But I always had little bugs that would creep in. Probably a result of my particular combo of fish shell, Dvorak, i3, and my audio setups. &lt;/p&gt;

&lt;p&gt;About 6 months ago I stumbled across RegolithOS, which bills itself as Ubuntu with i3 preconfigured. Surely I didn't need that, I thought. But oh, what the heck, it looks nice in screenshots. Should I try it?&lt;/p&gt;

&lt;p&gt;It's an easy install on top of Ubuntu. And I wanted to update my (for shame) old Ubuntu 18.04 LTS to something more recent, to 20 or 22. So I backed up my computer, then updated to 20, then to 22.04 and then Regolith's add-ons. Oh, what the heck, if it brakes, it will brake fabulously I thought.&lt;/p&gt;

&lt;p&gt;To my surprise, nothing was broken. It 'just worked.' I restarted and it was beautiful. I was shocked at how easy and complete it felt. Aside from finding some old documentation out of date (that I reported on their Gitter and then they updated), I found it to be a well-configured i3 setup that required no tweaking. Worked out of the box, including all media keys, brightness, and had lots of great add-ons like a beautiful launch menu pop-up.&lt;/p&gt;

&lt;p&gt;I've now been using it 5 months or so and have no complaints, no changes needed. If you like Ubuntu already, find yourself curious about i3, or spending too much time configuring your tiling window manager, maybe this is a good spin for you.&lt;/p&gt;

&lt;p&gt;Technically Regolith is classified as a Desktop Manager but you can download a preconfigured iso as well if you are starting from scratch.&lt;/p&gt;

&lt;p&gt;I'm not even going to throw up a screenshot since my computer looks just like any other Regolith default, aside from my desktop background.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://regolith-desktop.com/"&gt;Regolith Desktop&lt;/a&gt;&lt;/p&gt;

&lt;figure&gt;
&lt;img src="images/lubuntu.jpg" alt="Lubuntu on old laptop in DIY recording studio setup"&gt;
&lt;figcaption&gt;Lubuntu on old laptop in DIY recording studio setup&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2&gt;Lubuntu&lt;/h2&gt;

&lt;h3&gt;A short report trying out Lubuntu. &lt;/h3&gt;

&lt;p&gt;I'm currently an artist in resident at a museum. There's a drawer with old tech gear, including mixers, speakers and cables. I set up a temp recording studio to work on electroacoustic music with a friend. In a drawer we also found an old computer, a HP Envy, I think from 2009. It has Windows on it, but I had to start up in Safe mode to even try it out because I didn't know the admin password, and the computer didn't have 'service pack 1' installed which prevented the browser from being updated! When I finally got the darn thing running I saw it had Windows 7. Okay! So my next step: wipe the computer and put a new Linux OS on it. But which one?&lt;/p&gt;

&lt;p&gt;This laptop I found is 13 years old. So I need a lightweight distro. I guess RegolithOS could work, but I wanted the computer useable by friends here without any previous Linux experience, and I didn't think i3 would be a good experience for them. So I thought I remembered that Lubuntu was the lightweight Ubuntu - so should I try that? I went to the website and read: &lt;/p&gt;

&lt;blockquote&gt;The projectâs goal is to provide a lightweight yet functional Linux distribution based on a rock-solid Ubuntu base. Lubuntu provides a simple but modern and powerful graphical user interface, and comes with a wide variety of applications so you can browse, email, chat, play, and be productive. Lubuntu was formerly a distribution for low-end hardware, but we have refocused.&lt;/blockquote&gt;

&lt;p&gt;They go on to explain in a blog post that it should still be a good distro for reviving old computers but that they will no longer primarily make that their focus.&lt;/p&gt;

&lt;p&gt;Okay, so maybe that's a bummer, but let's still give it a shot.&lt;/p&gt;

&lt;p&gt;I downloaded the iso, wrote it to usb with dd, plugged it into the laptop and restarted. In a minute it was up and running. I double clicked the installer and less than 10 minutes later (I didn't officially time it) I was up and runnig. I had never used Lubuntu before, which comes with Openbox as its window manager, which I don't think I've used before. But it was obvious what to do: Open the menu in the bottom left. I found the menu categories and built-in basic apps pretty usable. I found the qt-terminal, sudo apt updated and sudo apt upgraded, quickly downloaded some basic programs (neovim, curl, w3m, tldr, kate, kitty, amfora, can't remember what else) and some basic art/music programs (krita, audacity, puredata, rhythmbox, love2d).&lt;/p&gt;

&lt;p&gt;For a 13 year old laptop, the thing is fast. Installing with aptitude is almost as quick as my much more modern laptop. This old clunky computer practically flies. Because I've used Ubuntu so long I didn't feel like I needed to learn anything. I have two complaints so far that I haven't solved: it's not obvious to me how to pin programs to the built-in taskbar. And I Can't seem to get the keyboard keys for special characters to match up with the character printed on the key. My guess is because I use english and this is a european keyboard, but when I tried to switch to danish I still had an issue. It's not an issue for me (i write in Dvorak anyway), but I can tell it's confusing to the other artists here that I am showing Linux too. One person used it in a web workshop I taught and was a little confused looking for forward slash, brackets and the like. But those are the only issues I've had so far. Sound works great. The audio interface I plugged in seemed to work fine. And everything looks pretty nice.&lt;/p&gt;

&lt;p&gt;Would recommend!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://lubuntu.me/"&gt;Lubuntu official site&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Lubuntu"&gt;Lubuntu on Wikipedia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="./index.html"&gt;back to index&lt;/a&gt;&lt;/p&gt;

---

&lt;p&gt;To leave a comment email lettuce at the current domain.&lt;/p&gt;


 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/impressions-of-ubuntu.html</guid><pubDate>Fri, 05 Aug 2022 00:00:00 GMT</pubDate></item><item><title>consumption.html</title><link>https://ctrl-c.club/~lettuce/consumption.html</link><description>&lt;div&gt;&lt;h1&gt;Inconveniencing Myself and Reducing Consumption&lt;/h1&gt;

&lt;p&gt;2022-05-31&lt;/p&gt;

&lt;p&gt;As people are overworked and seek greater and greater degrees of 'productivity' there's an ever-greater need for 'lifehacks' and conveniences to make life bearable. For folk that are overworked, convenience defines many people's work, social and 'free time.' Smart phones enable this to a large degree. Other conveniences are the US food delivery ecosystem; personal transportation via app; meal delivery 'kits'; Zooming versus meeting in-person; texting vs talking; dog walking via service workers; robot food delivery; ordering via touchscreen; fast food (bowls) versus cooking at home. This list could obviously go on and on. &lt;/p&gt;

&lt;p&gt;Lots of people on Gemini and the smol web choose personal forms of digital minimalism such as command line computing, using previous-generation computers, and eschewing modern web computing stacks such as Javascript. Reading physical books versus reading little hits of articles online or social media feeds would be another example of trying to move toward a slow tech approach. About a decade ago perhaps was the rise in popularity or at least trending of articles on the slow food movement, which did seem to decelerate some parts of the fast, unhealthy, unsustainable trends of food consumption, at least on a small scale. I've often wondered in the past how to build a movement around reducing consumption. It's not sexy, per se. It doesn't roll off the tongue. Today I heard a news report on a possible crisis relating to semi-conductors (for some reason, prompting me to think about the CollapseOS project). Should there be a conflict with China then global tech production (including all devices, including cars) would be affected. An international recession would likely occur. There are folks that rue how all new cars are wheeled computers. Consumption is built into the very essence of our modern civilization; if we're not expanding production, and consuming, then we're recessing!&lt;/p&gt;

&lt;p&gt;Can we imagine re-making large parts of society not just around performatively reducing consumption the way we perform recycling in the US but around actual largescale personal and societal reductions in consumption? What would a social movement around reducing consumption look like? Of course my utopian view is a non-hierarchical anarchist type reduction of corporate products overall, but I'd even be curious if there's a co-optable vision of reducing consumption. At one point I was more involved in activities like Food Not Bombs, free stores, free schools, dumpstering and the like. In other ways, I still have a minimal amount of personal consumption (no car, don't buy much, try to reduce water usage and mostly cook vegetables), but my guess is that I still use many more resources than folks in other countries, and that my own contributions are more performative than substantial. My fear is there's not a significant way for widescale meaningful reduction in consumption by corporate brands because that's unlikely to bring them more income. But I'm also interested in what a mass movement around reducing consumption would look like.&lt;/p&gt;

&lt;p&gt;Some current stirrings of a mass movement popular around me:&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;thrifting&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;buy nothing groups&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;free stores&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;giving up flying to reduce carbon usage activists&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;cities passing plastic bag ordinances&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;mainstream availability of public transit and city bike programs where I live&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;What else am I missing? Hopefully a lot.&lt;/p&gt;

&lt;p&gt;What else is needed:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;mass actions and protests demanding increasing funding for public transportation and expanding bikeways and reducing motorways&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;much higher costs for producing packaging and reducing incentives to companies producing new products&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;trends and sub/cultures (and then mainstreaming) revolving around re-use and maintenance&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;mainstream media recognition and support (via presenting characters, stories and messaging) around re-use and anti-consumerism&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;widespread financial incentives for companies to reduce creation of plastic, throwaway, unrepairable, and closed-source products&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;increased financial support and structures of support to enable and maintain cooperatives (businesses and informal communities)&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;recognition and awards for projects, technologies, coops, companies, individuals, research and practical tools to enable sustainable repair and maintenance&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;I don't see much of a wide movement around this right now.&lt;/p&gt;

&lt;p&gt;What can artists do to support such a movement?&lt;/p&gt;

&lt;p&gt;What can tech workers, open source contributors, makers, do?&lt;/p&gt;

&lt;p&gt;What new organizations and communities can form or re-make themselves?&lt;/p&gt;


&lt;p&gt;Individuals can make plans to reduce their consumption. I shall set a personal plan regarding consuming clothes (buying used, learning sachiko patching).&lt;/p&gt;

&lt;p&gt;Communities (religious, club, topic-based, etc) can form sharing communities and better hand-me-down protocols.&lt;/p&gt;

&lt;p&gt;Civic institutions can pass legislation to reward re-use, maintenance and to penalize consumption. (This feels hardest to do, but would definitely face more calls to implement if a wide community and social movement comes to pass).&lt;/p&gt;

&lt;p&gt;&lt;a href="./index.html"&gt;Back to index&lt;/a&gt;&lt;/p&gt;
---

&lt;p&gt;You can leave a comment by emailing lettuce at the current domain and putting COMMENT in your email subject line and the name of the post.&lt;/p&gt;


&lt;p&gt;I agree with many of your prescriptions, and that it would be good to see something that feels like a "wide movement" in support for degrowth. You might be interested in&lt;/p&gt;
&lt;p&gt;this piece from my friend Ben: &lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.actionattheend.com/2021/07/left-to-our-own-devices.html"&gt;Left To Our Own Devices  -Degrowther&lt;/a&gt;&lt;/p&gt;

 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/consumption.html</guid><pubDate>Tue, 31 May 2022 00:00:00 GMT</pubDate></item><item><title>tinybasic.html</title><link>https://ctrl-c.club/~lettuce/tinybasic.html</link><description>&lt;div&gt;&lt;h2&gt;Explorations in Tiny BASIC &lt;/h2&gt;

&lt;p&gt;2022-03-31&lt;/p&gt;

&lt;p&gt;2022-04-01 update: I've added a link to my full code for a player + computer opponent version of the PIG dice game to the end.&lt;/p&gt;

&lt;p&gt;2022-04-06: added a link to a repo with code for my Tiny BASIC games. I have a better opponent AI now, though still quite primitive.&lt;/p&gt;

&lt;p&gt;Lately I've been getting into BASIC. I was a kid in the 80s and 90s and I remember those computers that would boot into a BASIC interpreter. I didn't have one of those but came in contact with one every year or two and played a handful of text games on them. I was aware of some of the commands and syntax, GOTO and the like, and I have looked through the classic BASIC Video Games book a number of times. The ecosystem of BASIC interested me but I hadn't delved too deeply. Recently I read about Tiny BASIC:&lt;/p&gt;

&lt;blockquote&gt;Tiny BASIC is a family of dialects of the BASIC programming language that can fit into 4 or fewer KBs of memory. Tiny BASIC was designed in response to the open letter published by Bill Gates complaining about users pirating Altair BASIC, which sold for $150. Tiny BASIC was intended to be a completely free version of BASIC that would run on the same early microcomputers. --Wikipedia [1]&lt;/blockquote&gt;

&lt;p&gt;So originally, Tiny BASIC was a specification, not an implementation. The People's Computer Company published a newsletter, almost like a photocopied zine to my eyes, with articles, tutorials, comix, all aimed at the nascent hobbyist computer community. They invited Dennis Allison from Stanford University's Computer Science faculty to write the spec.&lt;/p&gt;

&lt;blockquote&gt;The magic of a good language is the ease with which a particular idea may be expressed. The assembly language of most microcomputers is very complex, very powerful, and very hard to learn. The Tiny BASIC project at PCC represents our attempt to give the hobbyist a more human-oriented language or notation with which to encode his programs. [2]&lt;/blockquote&gt;

&lt;p&gt;The newsletter goes on to describe the motivation for the project, a free implementation of the BASIC language, and the community working on it currently. It specifies what the language could entail, how to solve various problems, a discussion on creating a compiler versus an interpreter, what it will take to build one's own Tiny BASIC, and a request for feedback and ideas. It also contained some simple BASIC games.&lt;/p&gt;

&lt;h3&gt;All Rights Wronged&lt;/h3&gt;

&lt;p&gt;One of the earlier implementations was Dr. Li-Chen Wang's Palo Alto Tiny BASIC, where he may have devised the term copyleft to describe this process of source code being openly shared and modified and re-published. He affixed the notice "COPYLEFT ALL RIGHTS WRONGED" when he published it in 1976. &lt;/p&gt;

&lt;p&gt;BASIC flourished as a language throughout the 80s and into the 90s. Many versions of BASIC proliferated, and many versions of Tiny BASIC as well, including some that grew into more extended versions, sometimes including the ability to create graphics or sound, rather than just ASCII text. &lt;/p&gt;

&lt;p&gt;In fact, the inital Tiny BASIC implementations allowed printing text output but couldn't receive text string inputs. These were very simple implementations of BASIC as it had to work with low memory usage. They allowed for (integer) variables, subroutines via gosub/return, if-statements (though not if-then or if-then-else), numerical though not char/string input, and not much else!&lt;/p&gt;

&lt;p&gt;The allowed statements were:&lt;/p&gt;

&lt;pre&gt;
IF - THEN statement
GOTO #
INPUT var 
LET var=expression
GOSUB #
RETURN
CLEAR
LIST
RUN
END
&lt;/pre&gt;

&lt;p&gt;Strings weren't defined in the notes, nor were "remarks" aka comments. Missing also were for-loops, random number generation, arrays, though some of the Tiny BASIC dialects did add these. &lt;/p&gt;

&lt;p&gt;I decided to try my hand at making a simple dice gambling game. Where I grew up Threelo was a popular dice game, and my friends had our own house rules. But to warm up, I first implemented Pig, a good first game to program due to its minimal actions and easiness of programming. Essentially, each turn you roll a die and add the total to your points. You can stop at any time and keep that total, or keep rolling. If you ever roll a 1 you lose all the points you accrued. That's it! Pretty ....(wait for it).... basic.&lt;/p&gt;

&lt;p&gt;I downloaded Damian Gareth Walker's Tiny BASIC Interpreter and Compiler project written in C. [3] &lt;/p&gt;

&lt;p&gt;It packages a man page and some example games (Hunt the Wumpus, Tic Tac Toe, and some others).&lt;/p&gt;

&lt;p&gt;Without a built-in random number generator, how was I going to create a random die roll? &lt;/p&gt;

&lt;p&gt;Luckily, Gareth published some instructions to construct a minimal not-very-sophisticated random number generator. [4] We don't have the privilege of referencing the clock of the computer for example, so we follow early BASIC tradition and ask the user for a seed number, then perform a simple calculation. Some other implementations of Tiny BASIC came with a random number generator. Gareth's doesn't by default but does add in the ability to use REM (remark) for commenting. &lt;/p&gt;

&lt;h3&gt;PIG &lt;/h3&gt;

&lt;p&gt;So here's my small and not terribly fun or sophisticated game of Pig. No doubt many improvements can be made. &lt;/p&gt;

&lt;pre&gt;
    REM --- PIG Dice game test
    REM --- Created: 2022-03-30
    REM --- Created for cyningstan's Tiny BASIC 
    REM --- No one will want to use this code, but consider it public domain CC0.

    REM --- Variable List
    REM
    REM R - A random number returned by the Random Number Generator
    REM D - Current die roll
    REM T - TOTAL SAVED
    LET T=0

    REM --- Initialise the random number seed
10  PRINT "Enter a number:"
    INPUT R
   
    REM --- MAIN GAME LOOP
20  PRINT "YOUR CURRENT TOTAL IS ",T
    PRINT "Would you like to roll? (0 no, 1 yes)"
    INPUT Q

30  IF Q=0 THEN GOTO 300
   
    REM --- CHECK IF BUSTED
    GOSUB 200 
    LET D=1+R-R/6*6
    PRINT "YOU ROLLED ",D
    IF D=1 THEN GOTO 50
    LET T=T+D
    GOTO 20

    REM --- BUSTED!
50  PRINT "BUSTED!"
    LET T=0
    GOTO 20

200 LET R=5*R+35
    LET R=R-R/6547*6547
    RETURN

300 PRINT "YOUR SCORE IS ",T
    PRINT "GOODBYE"
&lt;/pre&gt;

&lt;p&gt;UPDATE: I've added a link to a 2 player version (player + computer opponent) I made of Pig dice to the links at the end. Source code license: COPYLEFT ALL RIGHTS WRONGED, natch. There are likely errors as this is the first time I'm programming in any BASIC, and I made this in less than an hour, and sure enough, I was making spaghetti GOTO code! But you are welcome to improve or build upon this in any way you like.&lt;/p&gt;

&lt;p&gt;From here, it would be relatively easy to create some version of Blackjack with a little bit more effort. Of course, it would also be fun to make text adventures, pizza-ordering calculators, the classic text game Lemonade Stand, or a version of my favorite BASIC game TI-83 calculator version of Drug Wars/Dope Wars (that's a story for a different time). To play the game you'll need to download Tiny BASIC. Save the program with a .bas extension. The computer opponent sorely needs better AI than what I've implemented.&lt;/p&gt;

&lt;p&gt;There's a procedurally-generated maze / dungeon adventure game, like a simplified text RPG, called Kingdom of the Lyre that was made for and entered into PROCJAM in 2019. [5] I played it. It's challenging and I thought it was fun. I'd love to have a Tiny BASIC game jam one day.&lt;/p&gt;

&lt;p&gt;To wrap up, I'll leave you with this WANTED ad from Volume 1, Number 1 of Dr. Dobb's in the section on My, How Tiny BASIC Growed, &lt;/p&gt;

&lt;blockquote&gt;WANTED: Entirely new, never before seen, Tiny Languages, imported from another planet or invented here on Earth. Especially languages for kids using home computers that talk to tvs or play music or run model trains or...&lt;/blockquote&gt;

&lt;h2&gt;Links&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Tiny_BASIC"&gt;Wikipedia article on TinyBASIC&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://cini.classiccmp.org/pdf/DrDobbs/DrDobbs-1976-01-v1n1.pdf"&gt;Dr. Dobb's Journal of Computer Calisthenics and Orthodontia, January, 1976 (PDF)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://tinybasic.cyningstan.org.uk/"&gt;Tiny BASIC Interpreter and Compiler Portal&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://tinybasic.cyningstan.org.uk/download/10/random-number-generator"&gt;Minimal random number generator for Tiny BASIC&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://tinybasic.cyningstan.org.uk/download/44/kingdom-of-the-lyre"&gt;Kingdom of the Lyre game&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.ittybittycomputers.com/IttyBitty/TinyBasic/TBuserMan.htm"&gt;Tom Pittman's Tiny BASIC User Manual&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://tildegit.org/exquisitecorp/tinybasic-programs"&gt;my Tiny BASIC games repo with a better computer opponent for PIG dice game&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="./index.html"&gt;Back to index&lt;/a&gt;&lt;/p&gt;

---

&lt;p&gt;You can leave a comment by emailing lettuce at the current domain and putting the word comment in the subject line.&lt;/p&gt;


 &lt;/div&gt;</description><guid isPermaLink="true">https://ctrl-c.club/~lettuce/tinybasic.html</guid><pubDate>Thu, 31 Mar 2022 00:00:00 GMT</pubDate></item></channel></rss>